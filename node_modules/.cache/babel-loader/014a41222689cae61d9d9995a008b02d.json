{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/contactSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport InterestedUsersForm from '../contactSection/interestedUserForm';\nimport LoadingSpinner from '../../utils/loadingSpinner';\nimport OptionsForms from './optionsForms';\nimport LoginForm from './loginForm';\nimport NotificationBox from '../notifications/NotificationBox';\nimport axios from 'axios';\nimport FormHeader from './formHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ContactSection = ({\n  id,\n  // lightText,\n  // topLine,\n  // headLine,\n  // description,\n  // darkText,\n  loggedIn,\n  handlingSubmitLoginUser,\n  loginResponse // loginFromNavBar\n\n}) => {\n  _s();\n\n  const [upLoadingUser, setUpLoadingUser] = useState(false);\n  const [active, setActive] = useState('interested');\n  const [regView, setRegView] = useState(false); // const [errorData, setErrorData ] = useState(null) \n\n  const [response, setResponse] = useState(null);\n  const url_interestedUsers = \"http://localhost:5000/api/interestedUsers\";\n  const url_users = \"http://localhost:5000/api/users\";\n  const responseData = {\n    errorCode: 409,\n    errorMessage: `Ya tus datos fueron suministrados anteriormente y nos contenta. Si quieres chequear un producto haz click en Quiero chequear un producto`,\n    successCode: 201,\n    successMessage: `Listo, que bueno que estas interesado. Te estaremos notificando pronto sobre nuestra app`\n  };\n  const responseDataRegister = {\n    errorCode: 409,\n    errorMessage: `Ya te teníamos registrado anteriormente . Si quieres chequear un producto solo inicia sesión y haz click en Quiero chequear un producto`,\n    successCode: 201,\n    successMessage: `Listo, te hemos registrado. Si deseas chequear un producto solo haz click en Quiero chequear un producto`\n  };\n  console.log(loginResponse); // console.log(loggedIn)\n  // const toggleBackDrop = () => {\n  //     setExpansion(true)\n  //     setTimeout(()=>{\n  //         setExpansion(false)\n  //     },expandingTransition.duration * 1000 - 1500)\n  // }\n\n  const switchToCheck = () => {\n    // toggleBackDrop()\n    // setTimeout(()=> {\n    setActive('check');\n    setRegView(false); // },400)\n  };\n\n  const switchToSignIn = () => {\n    // toggleBackDrop()\n    // console.log('just notifying...')\n    // setTimeout(()=> {\n    setActive('interested'); // },400)\n  }; // const backDropVariants = {\n  //     expanded: {\n  //         width: '100%',\n  //         height: '700px',\n  //     },\n  //     collapsed: {\n  //         width: '50%',\n  //         height: '700px'\n  //     }\n  // }\n  // const expandingTransition = {\n  //     type: \"spring\",\n  //     duration: 2,\n  //     stiffness: 50\n  // }\n\n\n  const toggleRegView = () => {\n    setResponse(null);\n    setRegView(true);\n  };\n\n  const toggleNotification = () => {\n    setResponse(null);\n  };\n\n  const handlingLoginUser = values => {\n    setUpLoadingUser(true);\n    setTimeout(async () => {\n      handlingSubmitLoginUser(values);\n      setUpLoadingUser(false);\n    }, 2000);\n  };\n\n  const handlingSubmitInterestedUser = interestedUser => {\n    setUpLoadingUser(true);\n    setTimeout(async () => {\n      try {\n        const response = await axios.post(url_interestedUsers, interestedUser);\n        console.log(response);\n\n        if (response.status === 201) {\n          setResponse(response);\n          setUpLoadingUser(false);\n          console.log('Gracias por enviarnos tus datos, estaremos en contacto...');\n          return response.status;\n        }\n      } catch (error) {\n        console.log(error.response);\n        setUpLoadingUser(false); // setErrorData(error.response)\n\n        setResponse(error.response);\n      }\n    }, 2000);\n  }; // console.log(errorData)\n\n\n  const handlingSubmitUser = user => {\n    setUpLoadingUser(true);\n    setTimeout(async () => {\n      try {\n        const response = await axios.post(url_users, user);\n        console.log(response);\n\n        if (response.status === 201) {\n          setResponse(response);\n          setUpLoadingUser(false);\n          setRegView(false);\n          console.log('Gracias por registrarte');\n          return response.status;\n        }\n      } catch (error) {\n        console.log(error);\n        setUpLoadingUser(false);\n        setResponse(error.response);\n      }\n    }, 2000);\n  };\n\n  if (upLoadingUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: id,\n      className: \"contactContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contactWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"contactInfo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contactForms\",\n          children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(OptionsForms, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHeader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), active === 'interested' && loggedIn ? /*#__PURE__*/_jsxDEV(InterestedUsersForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 65\n          }, this) : null, active === 'interested' && loggedIn === false ? /*#__PURE__*/_jsxDEV(InterestedUsersForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 75\n          }, this) : null, active === 'check' && loggedIn ? /*#__PURE__*/_jsxDEV(InterestedUsersForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 61\n          }, this) : null, active === 'check' && loggedIn === false ? /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 71\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  }\n\n  console.log(active);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    className: \"contactContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contactWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"contactInfo\" // variants={backDropVariants}\n        // animate={expansion ? 'expanded' : 'collapsed'}\n        // transition={expandingTransition}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contactForms\",\n        children: [response && active === 'interested' ? /*#__PURE__*/_jsxDEV(NotificationBox, {\n          toggleNotification: toggleNotification,\n          response: response,\n          responseData: responseData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 18\n        }, this) : null, response && active === 'check' ? /*#__PURE__*/_jsxDEV(NotificationBox, {\n          toggleNotification: toggleNotification,\n          response: response,\n          responseData: responseDataRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 18\n        }, this) : null, /*#__PURE__*/_jsxDEV(OptionsForms, {\n          active: active === 'interested' ? 'interested' : 'signUp',\n          switchToSignIn: switchToSignIn,\n          switchToCheck: switchToCheck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormHeader, {\n          active: active,\n          loggedIn: loggedIn,\n          regView: regView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), active === 'interested' && loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(InterestedUsersForm, {\n            handlingSubmitInterestedUser: handlingSubmitInterestedUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 22\n          }, this)\n        }, void 0, false) : null, active === 'interested' && !loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(InterestedUsersForm, {\n            handlingSubmitInterestedUser: handlingSubmitInterestedUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 22\n          }, this)\n        }, void 0, false) : null, active === 'check' && loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(InterestedUsersForm, {\n            handlingSubmitInterestedUser: handlingSubmitInterestedUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 21\n          }, this)\n        }, void 0, false) : null, active === 'check' && loggedIn === false ? /*#__PURE__*/_jsxDEV(LoginForm, {\n          regView: regView,\n          toggleRegView: toggleRegView,\n          handlingSubmitUser: handlingSubmitUser,\n          handlingLoginUser: handlingLoginUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this) : null // <RegisterForm handlingSubmitUser={handlingSubmitUser}/>\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactSection, \"CZiFTfwQCrysQaJ5+d+ZGEU25X4=\");\n\n_c = ContactSection;\nexport default ContactSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactSection\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/contactSection.js"],"names":["React","useState","motion","InterestedUsersForm","LoadingSpinner","OptionsForms","LoginForm","NotificationBox","axios","FormHeader","ContactSection","id","loggedIn","handlingSubmitLoginUser","loginResponse","upLoadingUser","setUpLoadingUser","active","setActive","regView","setRegView","response","setResponse","url_interestedUsers","url_users","responseData","errorCode","errorMessage","successCode","successMessage","responseDataRegister","console","log","switchToCheck","switchToSignIn","toggleRegView","toggleNotification","handlingLoginUser","values","setTimeout","handlingSubmitInterestedUser","interestedUser","post","status","error","handlingSubmitUser","user"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport  { motion } from 'framer-motion'\nimport InterestedUsersForm from '../contactSection/interestedUserForm'\nimport LoadingSpinner from '../../utils/loadingSpinner' \nimport OptionsForms from './optionsForms'\nimport LoginForm from './loginForm'\nimport NotificationBox from '../notifications/NotificationBox'\nimport axios from 'axios'\nimport FormHeader from './formHeader'\n\n\nconst ContactSection = ({\n    id,\n    // lightText,\n    // topLine,\n    // headLine,\n    // description,\n    // darkText,\n    loggedIn,\n    handlingSubmitLoginUser,\n    loginResponse\n    // loginFromNavBar\n\n}) => {\n   \n    const [ upLoadingUser, setUpLoadingUser ] = useState(false)\n    const [ active , setActive ] = useState('interested') \n    const [ regView, setRegView ] = useState(false)\n    // const [errorData, setErrorData ] = useState(null) \n    const [response, setResponse ] = useState(null)\n    const url_interestedUsers = \"http://localhost:5000/api/interestedUsers\"\n    const url_users = \"http://localhost:5000/api/users\"\n\n    const responseData = {\n        errorCode: 409,\n        errorMessage:`Ya tus datos fueron suministrados anteriormente y nos contenta. Si quieres chequear un producto haz click en Quiero chequear un producto`,\n        successCode: 201,\n        successMessage:`Listo, que bueno que estas interesado. Te estaremos notificando pronto sobre nuestra app`\n    }\n    const responseDataRegister = {\n        errorCode: 409,\n        errorMessage:`Ya te teníamos registrado anteriormente . Si quieres chequear un producto solo inicia sesión y haz click en Quiero chequear un producto`,\n        successCode: 201,\n        successMessage:`Listo, te hemos registrado. Si deseas chequear un producto solo haz click en Quiero chequear un producto`\n    }\n    \n    console.log(loginResponse)\n    // console.log(loggedIn)\n    // const toggleBackDrop = () => {\n    //     setExpansion(true)\n    //     setTimeout(()=>{\n    //         setExpansion(false)\n    //     },expandingTransition.duration * 1000 - 1500)\n    // }\n\n    const switchToCheck = () => {\n        // toggleBackDrop()\n        // setTimeout(()=> {\n            setActive('check')\n            setRegView(false)\n        // },400)\n        \n    }\n\n    const switchToSignIn = () => {\n        // toggleBackDrop()\n        // console.log('just notifying...')\n        // setTimeout(()=> {\n            setActive('interested')\n        // },400)\n        \n    }\n\n    // const backDropVariants = {\n    //     expanded: {\n    //         width: '100%',\n    //         height: '700px',\n    //     },\n    //     collapsed: {\n    //         width: '50%',\n    //         height: '700px'\n    //     }\n    // }\n\n    // const expandingTransition = {\n    //     type: \"spring\",\n    //     duration: 2,\n    //     stiffness: 50\n    // }\n\n    const toggleRegView = () => {\n        setResponse(null)\n        setRegView(true)\n    }\n\n    const toggleNotification = () => {\n        setResponse(null)\n    }\n\n    const handlingLoginUser = (values) => {\n        setUpLoadingUser(true)\n        setTimeout(async() => {\n            handlingSubmitLoginUser(values)\n            setUpLoadingUser(false)\n        },2000)\n    } \n\n    const handlingSubmitInterestedUser = (interestedUser) => {\n        \n        setUpLoadingUser(true)\n        setTimeout(async()=> {\n            try {\n                const response = await axios.post(url_interestedUsers, interestedUser)\n                    console.log(response)\n                    if (response.status === 201){\n                        setResponse(response)\n                        setUpLoadingUser(false)\n                        console.log('Gracias por enviarnos tus datos, estaremos en contacto...')\n                        return response.status\n                    }\n            } catch (error) {\n                console.log(error.response)\n                setUpLoadingUser(false)\n                // setErrorData(error.response)\n                setResponse(error.response)\n            }\n        },2000)\n        \n    }\n\n    // console.log(errorData)\n\n    const handlingSubmitUser = (user) => {\n        setUpLoadingUser(true)\n         setTimeout(async()=> {\n            try {\n                const response = await axios.post(url_users, user)\n                    console.log(response)\n                    if (response.status === 201){\n                        setResponse(response)\n                        setUpLoadingUser(false)\n                        setRegView(false)\n                        console.log('Gracias por registrarte')\n                        return response.status\n                    }\n            } catch (error) {\n                console.log(error)\n                setUpLoadingUser(false)\n                setResponse(error.response)\n            }\n        },2000)\n    } \n\n\n\n    if (upLoadingUser){\n        return (\n            <div \n            id={id}\n            className=\"contactContainer\">\n                <div className=\"contactWrapper\">\n                    <motion.div className=\"contactInfo\"></motion.div>\n                    <div className=\"contactForms\">\n                        <LoadingSpinner/>\n                        <OptionsForms/>\n                        <FormHeader/>\n                        { active === 'interested' && loggedIn ? <InterestedUsersForm/>:null}\n                        { active === 'interested' && loggedIn === false ? <InterestedUsersForm/>:null}\n                        { active === 'check' && loggedIn  ? <InterestedUsersForm/>:null}\n                        { active === 'check' && loggedIn === false  ? <LoginForm/>:null}\n                    </div>\n                </div>\n            </div>\n        )    \n    }\n    console.log(active)\n    return (\n        <div \n        id={id}\n        className=\"contactContainer\">\n            <div className=\"contactWrapper\">\n                <motion.div \n                className=\"contactInfo\"\n                // variants={backDropVariants}\n                // animate={expansion ? 'expanded' : 'collapsed'}\n                // transition={expandingTransition}\n                >\n\n                </motion.div>\n                <div className=\"contactForms\">\n                {response && active === 'interested' ? \n                 <NotificationBox\n                 toggleNotification={toggleNotification} \n                 response={response}\n                 responseData={responseData}\n                 />    \n                : \n                null \n                }\n\n                {response && active === 'check' ? \n                 <NotificationBox\n                 toggleNotification={toggleNotification} \n                 response={response}\n                 responseData={responseDataRegister}\n                 />    \n                : \n                null \n                }\n                    <OptionsForms\n                    active={active === 'interested' ? 'interested' : 'signUp' } \n                    switchToSignIn={switchToSignIn}\n                    switchToCheck={switchToCheck}\n                    />\n                    <FormHeader\n                    active = {active}\n                    loggedIn={loggedIn}\n                    regView={regView}\n                    />\n                \n                    \n                    { active === 'interested' && loggedIn ? \n                     <>\n                     <InterestedUsersForm \n                     handlingSubmitInterestedUser={handlingSubmitInterestedUser}\n                     />\n                    {/* <NotificationBox\n                    toggleNotification={toggleNotification} \n                    response={response}\n                    responseData={responseData}\n                    /> */}\n                     </>\n                     \n                     :\n                     null\n                    }\n                    { active === 'interested' && !loggedIn ? \n                     <>\n                     <InterestedUsersForm \n                     handlingSubmitInterestedUser={handlingSubmitInterestedUser}\n                     />\n                    {/* <NotificationBox\n                    toggleNotification={toggleNotification}\n                    response={response}\n                    responseData={responseData}\n                    /> */}\n                    </>                     \n                     :\n                     null\n                    }\n                    \n                    { active === 'check' && loggedIn  ? \n                    <>\n                    <InterestedUsersForm\n                    handlingSubmitInterestedUser={handlingSubmitInterestedUser}\n                    />\n                    {/* <NotificationBox\n                    toggleNotification={toggleNotification}\n                    response={response}\n                    responseData={responseData}\n                    /> */}\n                    </>\n                    :\n                    null\n                    }\n                    { active === 'check' && loggedIn === false  ? \n                    <LoginForm\n                    regView={regView}\n                    toggleRegView={toggleRegView}\n                    handlingSubmitUser={handlingSubmitUser}\n                    handlingLoginUser={handlingLoginUser}\n                    />\n                    :\n                    null\n                    // <RegisterForm handlingSubmitUser={handlingSubmitUser}/>\n                    }\n\n                    {/* <NotificationBox\n                    response={response}\n                    responseData={responseData}\n                    /> */}\n                    \n                    \n                    \n                     \n                </div>\n                \n\n            </div>\n            \n        </div>\n    )\n}\n\nexport default ContactSection\n\n"]},"metadata":{},"sourceType":"module"}