{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/loginForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport RegisterForm from './registerForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  email: yup.string().email('Por favor introduce una dirección de correo válida').required('hola, no te olvídes de colocar tu correo electrónico'),\n  password: yup.string().min(6).max(200).required('hola, no te olvides de colocar tu clave')\n});\n\nconst LoginForm = ({\n  handlingLoginUser,\n  regView,\n  toggleRegView,\n  handlingSubmitUser,\n  handlingSubmitLoginUser\n}) => {\n  _s();\n\n  const onSubmit = async values => {\n    handlingLoginUser(values);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema\n  });\n  console.log(formik.errors);\n\n  if (regView) {\n    return /*#__PURE__*/_jsxDEV(RegisterForm, {\n      handlingSubmitUser: handlingSubmitUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"boxContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"formContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        name: \"email\",\n        placeholder: \"Correo electr\\xF3nico\",\n        type: \"email\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        style: {\n          borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        name: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        type: \"password\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        style: {\n          borderBottom: `${formik.touched.city && formik.errors.city ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleRegView,\n        className: \"regButton\",\n        type: \"submit\",\n        children: \"\\xBFNo tienes una cuenta? Reg\\xEDstrate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/loginForm.js"],"names":["React","useFormik","yup","RegisterForm","validationSchema","object","email","string","required","password","min","max","LoginForm","handlingLoginUser","regView","toggleRegView","handlingSubmitUser","handlingSubmitLoginUser","onSubmit","values","formik","initialValues","validateOnBlur","console","log","errors","handleSubmit","handleChange","handleBlur","borderBottom","touched","city"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup' \nimport RegisterForm from './registerForm'\n\n\n\nconst validationSchema = yup.object({\n    email: yup.string().email('Por favor introduce una dirección de correo válida').required('hola, no te olvídes de colocar tu correo electrónico'),\n    password: yup.string().min(6).max(200).required('hola, no te olvides de colocar tu clave'),   \n})\n\n\nconst LoginForm = ({ \n    handlingLoginUser,\n    regView, \n    toggleRegView,\n    handlingSubmitUser,\n    handlingSubmitLoginUser\n\n\n}) => {\n\n    const onSubmit = async(values) => {\n        handlingLoginUser(values)\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            password: \"\"\n        },\n        validateOnBlur: true,\n        onSubmit,\n        validationSchema: validationSchema\n\n    })\n\n    console.log(formik.errors)\n\n\n    if (regView){\n        return(\n            <RegisterForm \n            handlingSubmitUser={handlingSubmitUser}\n            />\n        )\n    }\n\n    return (\n        <div className=\"boxContainer\">\n            <form \n            onSubmit={formik.handleSubmit}\n            className=\"formContainer\">\n                \n                <input\n                className=\"input\"\n                name=\"email\"\n                placeholder=\"Correo electrónico\" \n                type=\"email\" \n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <input\n                className=\"input\"\n                name=\"password\"\n                placeholder=\"Contraseña\" \n                type=\"password\" \n                value={formik.values.password}\n                onChange={formik.handleChange}                \n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.city && formik.errors.city ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <button\n                type=\"submit\"\n                >Enviar</button>\n                <button\n                onClick={toggleRegView}\n                className=\"regButton\"\n                type=\"submit\"\n                >¿No tienes una cuenta? Regístrate</button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}