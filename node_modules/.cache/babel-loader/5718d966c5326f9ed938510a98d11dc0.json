{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/dataSection/interestedUsersForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet persistentData = [];\n\nconst InterestedUsersForm = ({\n  handlingSubmitInterestedUser,\n  fullNameError,\n  emailError,\n  cityError,\n  toggleFullNameError,\n  toggleEmailError,\n  toggleCityError,\n  // errorsArray,\n  errorsObject\n}) => {\n  _s();\n\n  // console.log(errorData)\n  // console.log(fullNameError)\n  // console.log(emailError)\n  // console.log(cityError)\n  console.log(errorsObject);\n  const [interestedUser, setInterestedUser] = useState({\n    fullName: '',\n    email: '',\n    city: ''\n  });\n  useEffect(() => {\n    console.log(persistentData);\n\n    const persistingInfo = () => {\n      console.log(persistentData[1]);\n      document.getElementById('fullName').value = persistentData[0];\n      document.getElementById('email').value = persistentData[1];\n      document.getElementById('city').value = persistentData[2]; // persistentData.map((x) => {\n      //     console.log(x[0])\n      //     if (x === \"\"){\n      //          document.getElementById('fullName').value = \"\"\n      //     }else{\n      //         document.getElementById('fullName').value = x\n      //     }\n      //     if (x === \"\"){\n      //          document.getElementById('email').value = \"\"\n      //     }else{\n      //         document.getElementById('email').value = x\n      //     }\n      //     if (x === \"\"){\n      //         document.getElementById('city').value = \"\"\n      //     }else{\n      //         document.getElementById('city').value = x\n      //     }\n      // })\n    };\n\n    persistingInfo();\n  }, []);\n\n  const handlingInputChange = e => {\n    setInterestedUser({ ...interestedUser,\n      [e.target.name]: e.target.value\n    }); // console.log(interestedUser)\n  };\n\n  const handlingSubmit = async e => {\n    persistentData.push(interestedUser.fullName, interestedUser.email, interestedUser.city);\n    const response = await handlingSubmitInterestedUser(interestedUser);\n    console.log(response);\n    console.log(persistentData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-1\",\n      onSubmit: e => handlingSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fullName\" // className={`${fullNameError ? 'form1InputFullNameError' : 'form1InputFullName'}`}\n        ,\n        className: `${errorsObject.fullNameError ? 'form1InputFullNameError' : 'form1InputFullName'}`,\n        onChange: e => handlingInputChange(e) // onFocus={toggleFullNameError}\n        ,\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"fullName\",\n        placeholder: \"Nombre completo\",\n        required: true,\n        value: interestedUser.fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\" // className={`${emailError ? 'form1InputEmailError' : 'form1InputEmail'}`}\n        ,\n        className: `${errorsObject.emailError ? 'form1InputEmailError' : 'form1InputEmail'}`,\n        onChange: e => handlingInputChange(e) // onFocus={toggleEmailError}\n        ,\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"email\",\n        placeholder: \"Correo electr\\xF3nico\",\n        required: true,\n        value: interestedUser.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"city\" // className={`${cityError ? 'form1InputCityError' : 'form1InputCity'}`}\n        ,\n        className: `${errorsObject.cityError ? 'form1InputCityError' : 'form1InputCity'}`,\n        onChange: e => handlingInputChange(e) // onFocus={toggleCityError}\n        ,\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"city\",\n        placeholder: \"Ciudad\",\n        required: true,\n        value: interestedUser.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handlingSubmit(e),\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(InterestedUsersForm, \"MzquxEobXbTdk7ltR/I0kGYlx4A=\");\n\n_c = InterestedUsersForm;\nexport default InterestedUsersForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterestedUsersForm\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/dataSection/interestedUsersForm.js"],"names":["React","useState","useEffect","persistentData","InterestedUsersForm","handlingSubmitInterestedUser","fullNameError","emailError","cityError","toggleFullNameError","toggleEmailError","toggleCityError","errorsObject","console","log","interestedUser","setInterestedUser","fullName","email","city","persistingInfo","document","getElementById","value","handlingInputChange","e","target","name","handlingSubmit","push","response"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react'\nlet persistentData = []\n\n\nconst InterestedUsersForm = ({ \n    handlingSubmitInterestedUser,\n    fullNameError,\n    emailError,\n    cityError,\n    toggleFullNameError,\n    toggleEmailError,\n    toggleCityError,\n    // errorsArray,\n    errorsObject\n}) => {\n  \n    // console.log(errorData)\n    // console.log(fullNameError)\n    // console.log(emailError)\n    // console.log(cityError)\n    console.log(errorsObject)\n  \n\n    const [ interestedUser , setInterestedUser ] = useState({\n        fullName: '',\n        email: '',\n        city: ''   \n    })\n\n    useEffect(()=>{\n        console.log(persistentData)\n        const persistingInfo = () => {\n            console.log(persistentData[1])\n            document.getElementById('fullName').value = persistentData[0]\n            document.getElementById('email').value = persistentData[1]\n            document.getElementById('city').value = persistentData[2]\n            // persistentData.map((x) => {\n            //     console.log(x[0])\n            //     if (x === \"\"){\n            //          document.getElementById('fullName').value = \"\"\n            //     }else{\n            //         document.getElementById('fullName').value = x\n            //     }\n            //     if (x === \"\"){\n            //          document.getElementById('email').value = \"\"\n            //     }else{\n            //         document.getElementById('email').value = x\n            //     }\n            //     if (x === \"\"){\n            //         document.getElementById('city').value = \"\"\n            //     }else{\n            //         document.getElementById('city').value = x\n            //     }\n                                \n                      \n            // })\n        }\n        persistingInfo()\n        \n    },[])\n\n\n    const handlingInputChange = (e) => {\n        setInterestedUser({\n            ...interestedUser, [e.target.name]: e.target.value\n        })\n        // console.log(interestedUser)\n    }\n\n  \n\n\n    const handlingSubmit = async(e) => {\n        persistentData.push(interestedUser.fullName, interestedUser.email, interestedUser.city)\n        const response  = await handlingSubmitInterestedUser(interestedUser)       \n        console.log( response )\n        console.log(persistentData)\n    }\n\n    return (\n        <>\n        <form className=\"form-1\"  \n        onSubmit={(e)=> handlingSubmit(e)}\n        >\n            \n            <input\n            id=\"fullName\" \n            // className={`${fullNameError ? 'form1InputFullNameError' : 'form1InputFullName'}`}\n            className={`${errorsObject.fullNameError ? 'form1InputFullNameError' : 'form1InputFullName'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            // onFocus={toggleFullNameError}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"fullName\" \n            placeholder=\"Nombre completo\"\n            required\n            value={interestedUser.fullName}\n            />\n            <input\n            id=\"email\"\n            // className={`${emailError ? 'form1InputEmailError' : 'form1InputEmail'}`}\n            className={`${errorsObject.emailError ? 'form1InputEmailError' : 'form1InputEmail'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            // onFocus={toggleEmailError}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"email\" \n            placeholder=\"Correo electrónico\"\n            required\n            value={interestedUser.email}\n                \n            />\n            <input\n            id=\"city\"\n            // className={`${cityError ? 'form1InputCityError' : 'form1InputCity'}`}\n            className={`${errorsObject.cityError ? 'form1InputCityError' : 'form1InputCity'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            // onFocus={toggleCityError}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"city\" \n            placeholder=\"Ciudad\"\n            required\n            value={interestedUser.city}\n            \n            />\n            <button\n            onClick={(e) => handlingSubmit(e) } \n            type=\"submit\">Enviar</button>  \n        </form>\n        </>\n    )\n}\n\nexport default InterestedUsersForm"]},"metadata":{},"sourceType":"module"}