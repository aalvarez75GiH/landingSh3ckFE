{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/interestedUserForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useFormik, Formik, Field } from 'formik';\nimport * as yup from 'yup';\nimport DropDownList from './dropDownList'; // import SelectCity from './selectCity'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  fullName: yup.string().min(3).max(100).required('hola, no te olvides de colocar tu nombre completo'),\n  email: yup.string().email('Por favor introduce una dirección de correo válida').required('No te olvides de colocar tu correo electrónico') // city: yup.string().min(3, 'Por favor introduce la ciudad').max(100).required('No te olvides de colocar la ciudad donde resides'),   \n\n});\n\nconst InterestedUserForm = ({\n  handlingSubmitInterestedUser\n}) => {\n  _s();\n\n  const [city, setCity] = useState('Ciudad');\n  const [selected, setSelected] = useState('');\n  const options = ['Caracas', 'Barquisimeto', 'Valencia', 'Maracaibo'];\n\n  const onSubmit = values => {\n    console.log(values); // handlingSubmitInterestedUser(values)\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      fullName: \"\",\n      email: \"\"\n    },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema\n  }); // console.log(formik.values)\n\n  console.log(formik.errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"boxContainer\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          name: \"fullName\",\n          placeholder: \"Nombre completo\",\n          type: \"text\",\n          value: formik.values.fullName,\n          onChange: formik.handleChange,\n          autoComplete: \"on\",\n          onBlur: formik.handleBlur,\n          style: {\n            borderBottom: `${formik.touched.fullName && formik.errors.fullName ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          name: \"email\",\n          placeholder: \"Correo electr\\xF3nico\",\n          type: \"email\",\n          autoComplete: \"on\",\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          style: {\n            borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DropDownList, {\n          options: options,\n          city: city,\n          selected: selected,\n          setSelected: setSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InterestedUserForm, \"Nvg8NdUTmuWxQMkg3wo3yy+CUFM=\", false, function () {\n  return [useFormik];\n});\n\n_c = InterestedUserForm;\nexport default InterestedUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterestedUserForm\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/interestedUserForm.js"],"names":["React","useState","useFormik","Formik","Field","yup","DropDownList","validationSchema","object","fullName","string","min","max","required","email","InterestedUserForm","handlingSubmitInterestedUser","city","setCity","selected","setSelected","options","onSubmit","values","console","log","formik","initialValues","validateOnBlur","errors","handleSubmit","handleChange","handleBlur","borderBottom","touched"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useFormik, Formik, Field } from 'formik'\nimport * as yup from 'yup'\nimport DropDownList from './dropDownList'\n// import SelectCity from './selectCity'\n\nconst validationSchema = yup.object({\n    fullName: yup.string().min(3).max(100).required('hola, no te olvides de colocar tu nombre completo'),\n    email: yup.string().email('Por favor introduce una dirección de correo válida').required('No te olvides de colocar tu correo electrónico'),\n    // city: yup.string().min(3, 'Por favor introduce la ciudad').max(100).required('No te olvides de colocar la ciudad donde resides'),   \n})\n\n\nconst InterestedUserForm = ({ handlingSubmitInterestedUser }) => {\n\n    const [ city, setCity ] = useState('Ciudad')\n    const [ selected, setSelected ] = useState('')\n    const options = ['Caracas', 'Barquisimeto', 'Valencia', 'Maracaibo']\n    \n    const onSubmit = (values) => {\n        console.log(values)\n        // handlingSubmitInterestedUser(values)\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            fullName: \"\",\n            email: \"\"\n        },\n        validateOnBlur: true,\n        onSubmit,\n        validationSchema: validationSchema\n\n    })\n\n    // console.log(formik.values)\n    console.log(formik.errors)\n\n    return (\n        <div className=\"boxContainer\">\n            <Formik>\n            <form \n            onSubmit={formik.handleSubmit}\n            className=\"formContainer\">\n                <input\n                className=\"input\"\n                name=\"fullName\"\n                placeholder=\"Nombre completo\" \n                type=\"text\" \n                value={formik.values.fullName}\n                onChange={formik.handleChange}\n                autoComplete=\"on\"\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.fullName && formik.errors.fullName ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <input\n                className=\"input\"\n                name=\"email\"\n                placeholder=\"Correo electrónico\" \n                type=\"email\" \n                autoComplete=\"on\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <DropDownList\n                options={options}\n                city={city}\n                selected={selected}\n                setSelected={setSelected}\n                />\n                {/* <SelectCity\n                onChange={formik.handleChange}\n                error={formik.errors.city ? formik.errors : null}\n                /> */}\n                <button\n                type=\"submit\"\n                >Enviar</button>\n            </form>\n            </Formik>\n            \n\n        </div>\n    )\n}\n\nexport default InterestedUserForm\n"]},"metadata":{},"sourceType":"module"}