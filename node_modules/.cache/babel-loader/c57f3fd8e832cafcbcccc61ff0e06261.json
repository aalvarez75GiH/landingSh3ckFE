{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/interestedUserForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport DropDownList from './dropDownList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  fullName: yup.string().min(3).max(100).required('hola, no te olvides de colocar tu nombre completo'),\n  email: yup.string().email('Por favor introduce una dirección de correo válida').required('No te olvides de colocar tu correo electrónico'),\n  city: yup.string().min(3, 'Por favor introduce la ciudad').max(100).required('No te olvides de colocar la ciudad donde resides')\n});\nconst options = [{\n  value: 'Caracas',\n  label: 'Caracas'\n}, {\n  value: 'Barquisimeto',\n  label: 'Barquisimeto'\n}, {\n  value: 'Maracaibo',\n  label: 'Maracaibo'\n}, {\n  value: 'Valencia',\n  label: 'Valencia'\n}];\n\nconst InterestedUserForm = ({\n  handlingSubmitInterestedUser\n}) => {\n  _s();\n\n  const onSubmit = values => {\n    handlingSubmitInterestedUser(values);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      fullName: \"\",\n      email: \"\",\n      city: \"Caracas\"\n    },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema\n  }); // console.log(formik.values)\n\n  console.log(formik.errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"boxContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"formContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        name: \"fullName\",\n        placeholder: \"Nombre completo\",\n        type: \"text\",\n        value: formik.values.fullName,\n        onChange: formik.handleChange,\n        autoComplete: \"on\",\n        onBlur: formik.handleBlur,\n        style: {\n          borderBottom: `${formik.touched.fullName && formik.errors.fullName ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        name: \"email\",\n        placeholder: \"Correo electr\\xF3nico\",\n        type: \"email\",\n        autoComplete: \"on\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        style: {\n          borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropDownList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InterestedUserForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = InterestedUserForm;\nexport default InterestedUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterestedUserForm\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/interestedUserForm.js"],"names":["React","useFormik","yup","DropDownList","validationSchema","object","fullName","string","min","max","required","email","city","options","value","label","InterestedUserForm","handlingSubmitInterestedUser","onSubmit","values","formik","initialValues","validateOnBlur","console","log","errors","handleSubmit","handleChange","handleBlur","borderBottom","touched"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAIA,MAAMC,gBAAgB,GAAGF,GAAG,CAACG,MAAJ,CAAW;AAChCC,EAAAA,QAAQ,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,QAA7B,CAAsC,mDAAtC,CADsB;AAEhCC,EAAAA,KAAK,EAAET,GAAG,CAACK,MAAJ,GAAaI,KAAb,CAAmB,oDAAnB,EAAyED,QAAzE,CAAkF,gDAAlF,CAFyB;AAGhCE,EAAAA,IAAI,EAAEV,GAAG,CAACK,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoB,+BAApB,EAAqDC,GAArD,CAAyD,GAAzD,EAA8DC,QAA9D,CAAuE,kDAAvE;AAH0B,CAAX,CAAzB;AAMA,MAAMG,OAAO,GAAG,CACZ;AACIC,EAAAA,KAAK,EAAE,SADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADY,EAKZ;AACID,EAAAA,KAAK,EAAE,cADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CALY,EASZ;AACID,EAAAA,KAAK,EAAE,WADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CATY,EAaZ;AACID,EAAAA,KAAK,EAAE,UADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAbY,CAAhB;;AAoBA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsC;AAAA;;AAE7D,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzBF,IAAAA,4BAA4B,CAACE,MAAD,CAA5B;AACH,GAFD;;AAIA,QAAMC,MAAM,GAAGnB,SAAS,CAAC;AACrBoB,IAAAA,aAAa,EAAE;AACXf,MAAAA,QAAQ,EAAE,EADC;AAEXK,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,IAAI,EAAE;AAHK,KADM;AAMrBU,IAAAA,cAAc,EAAE,IANK;AAOrBJ,IAAAA,QAPqB;AAQrBd,IAAAA,gBAAgB,EAAEA;AARG,GAAD,CAAxB,CAN6D,CAkB7D;;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,MAAnB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACI;AACA,MAAA,QAAQ,EAAEL,MAAM,CAACM,YADjB;AAEA,MAAA,SAAS,EAAC,eAFV;AAAA,8BAGI;AACA,QAAA,SAAS,EAAC,OADV;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,WAAW,EAAC,iBAHZ;AAIA,QAAA,IAAI,EAAC,MAJL;AAKA,QAAA,KAAK,EAAEN,MAAM,CAACD,MAAP,CAAcb,QALrB;AAMA,QAAA,QAAQ,EAAEc,MAAM,CAACO,YANjB;AAOA,QAAA,YAAY,EAAC,IAPb;AAQA,QAAA,MAAM,EAAEP,MAAM,CAACQ,UARf;AASA,QAAA,KAAK,EAAE;AACHC,UAAAA,YAAY,EAAG,GAAET,MAAM,CAACU,OAAP,CAAexB,QAAf,IAA2Bc,MAAM,CAACK,MAAP,CAAcnB,QAAzC,GAAoD,eAApD,GAAsE,mCAAoC;AADxH;AATP;AAAA;AAAA;AAAA;AAAA,cAHJ,eAgBI;AACA,QAAA,SAAS,EAAC,OADV;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,WAAW,EAAC,uBAHZ;AAIA,QAAA,IAAI,EAAC,OAJL;AAKA,QAAA,YAAY,EAAC,IALb;AAMA,QAAA,KAAK,EAAEc,MAAM,CAACD,MAAP,CAAcR,KANrB;AAOA,QAAA,QAAQ,EAAES,MAAM,CAACO,YAPjB;AAQA,QAAA,MAAM,EAAEP,MAAM,CAACQ,UARf;AASA,QAAA,KAAK,EAAE;AACHC,UAAAA,YAAY,EAAG,GAAET,MAAM,CAACU,OAAP,CAAenB,KAAf,IAAwBS,MAAM,CAACK,MAAP,CAAcd,KAAtC,GAA8C,eAA9C,GAAgE,mCAAoC;AADlH;AATP;AAAA;AAAA;AAAA;AAAA,cAhBJ,eA6BI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cA7BJ,eA6CI;AACA,QAAA,IAAI,EAAC,QADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsDH,CA3ED;;GAAMK,kB;UAMaf,S;;;KANbe,kB;AA6EN,eAAeA,kBAAf","sourcesContent":["import React from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\nimport DropDownList from './dropDownList' \n\n\n\nconst validationSchema = yup.object({\n    fullName: yup.string().min(3).max(100).required('hola, no te olvides de colocar tu nombre completo'),\n    email: yup.string().email('Por favor introduce una dirección de correo válida').required('No te olvides de colocar tu correo electrónico'),\n    city: yup.string().min(3, 'Por favor introduce la ciudad').max(100).required('No te olvides de colocar la ciudad donde resides'),   \n})\n\nconst options = [\n    {\n        value: 'Caracas',\n        label: 'Caracas',\n    },\n    {\n        value: 'Barquisimeto',\n        label: 'Barquisimeto',\n    },\n    {\n        value: 'Maracaibo',\n        label: 'Maracaibo',\n    },\n    {\n        value: 'Valencia',\n        label: 'Valencia',\n    }\n]\n\n\nconst InterestedUserForm = ({ handlingSubmitInterestedUser }) => {\n\n    const onSubmit = (values) => {\n        handlingSubmitInterestedUser(values)\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            fullName: \"\",\n            email: \"\",\n            city: \"Caracas\"\n        },\n        validateOnBlur: true,\n        onSubmit,\n        validationSchema: validationSchema\n\n    })\n\n    // console.log(formik.values)\n    console.log(formik.errors)\n\n    return (\n        <div className=\"boxContainer\">\n            <form \n            onSubmit={formik.handleSubmit}\n            className=\"formContainer\">\n                <input\n                className=\"input\"\n                name=\"fullName\"\n                placeholder=\"Nombre completo\" \n                type=\"text\" \n                value={formik.values.fullName}\n                onChange={formik.handleChange}\n                autoComplete=\"on\"\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.fullName && formik.errors.fullName ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <input\n                className=\"input\"\n                name=\"email\"\n                placeholder=\"Correo electrónico\" \n                type=\"email\" \n                autoComplete=\"on\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <DropDownList/>\n                \n                {/* <input\n                className=\"input\"\n                name=\"city\"\n                autoComplete=\"on\"\n                placeholder=\"Ciudad\" \n                type=\"text\" \n                value={formik.values.city}\n                onChange={formik.handleChange}                \n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.city && formik.errors.city ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                /> */}\n\n                <button\n                type=\"submit\"\n                >Enviar</button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default InterestedUserForm\n"]},"metadata":{},"sourceType":"module"}