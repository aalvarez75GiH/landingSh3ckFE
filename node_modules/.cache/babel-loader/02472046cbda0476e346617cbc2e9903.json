{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/dataSection/interestedUsersForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst InterestedUsersForm = ({\n  handlingSubmitInterestedUser // fullNameError,\n  // emailError,\n  // cityError,\n  // toggleFullNameError,\n  // toggleEmailError,\n  // toggleCityError,\n  // errorFlags,\n  // initializeErrors\n\n}) => {\n  _s();\n\n  // console.log(fullNameError)\n  // console.log(emailError)\n  // console.log(cityError)\n  let array = [];\n  const [interestedUser, setInterestedUser] = useState({\n    fullName: '',\n    email: '',\n    city: ''\n  });\n  const [fullNameError, setFullNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [cityError, setCityError] = useState(false);\n\n  const handlingInputChange = e => {\n    setInterestedUser({ ...interestedUser,\n      [e.target.name]: e.target.value\n    });\n    console.log(interestedUser);\n  };\n\n  const toggleFullNameError = () => {\n    setFullNameError(false); // setErrorFlags({\n    //     fullNameError: false\n    // })\n  };\n\n  const toggleEmailError = () => {\n    setEmailError(false); // setErrorFlags({\n    //     emailError: false\n    // })\n  };\n\n  const toggleCityError = () => {\n    setCityError(false); // setErrorFlags({\n    //     cityError: false\n    // })\n  };\n\n  const handlingSubmit = async e => {\n    e.preventDefault();\n    const response = await handlingSubmitInterestedUser(interestedUser);\n    console.log(response);\n\n    if (response === 201) {\n      setInterestedUser({\n        fullName: '',\n        email: '',\n        city: ''\n      });\n    }\n\n    const responseErrors = response;\n    console.log(responseErrors);\n    array = responseErrors;\n    console.log(array);\n    const test = array.map(x => {\n      if (x.message === \"\\\"fullName\\\" is not allowed to be empty\") {\n        setFullNameError(true);\n      }\n\n      if (x.message === \"\\\"email\\\" is not allowed to be empty\") {\n        setEmailError(true);\n      }\n\n      if (x.message === \"\\\"city\\\" is not allowed to be empty\") {\n        setCityError(true);\n      }\n\n      if (x.message === \"\\\"email\\\" must be a valid email\") {\n        setEmailError(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-1\",\n      onSubmit: e => handlingSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: `${fullNameError ? 'form1InputFullNameError' : 'form1InputFullName'}`,\n        onChange: e => handlingInputChange(e),\n        onFocus: toggleFullNameError // onFocus={initializeErrors}\n        ,\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"fullName\",\n        placeholder: \"Nombre completo\",\n        required: true,\n        value: interestedUser.fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `${emailError ? 'form1InputEmailError' : 'form1InputEmail'}`,\n        onChange: e => handlingInputChange(e),\n        onFocus: toggleEmailError // onFocus={initializeErrors}\n        ,\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"email\",\n        placeholder: \"Correo electr\\xF3nico\",\n        required: true,\n        value: interestedUser.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `${cityError ? 'form1InputCityError' : 'form1InputCity'}`,\n        onChange: e => handlingInputChange(e),\n        onFocus: toggleCityError // onFocus={initializeErrors}\n        ,\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"city\",\n        placeholder: \"Ciudad\",\n        required: true,\n        value: interestedUser.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handlingSubmit(e),\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(InterestedUsersForm, \"tQUXB1+aC+pWteLYID1J94lYsHk=\");\n\n_c = InterestedUsersForm;\nexport default InterestedUsersForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterestedUsersForm\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/dataSection/interestedUsersForm.js"],"names":["React","useState","InterestedUsersForm","handlingSubmitInterestedUser","array","interestedUser","setInterestedUser","fullName","email","city","fullNameError","setFullNameError","emailError","setEmailError","cityError","setCityError","handlingInputChange","e","target","name","value","console","log","toggleFullNameError","toggleEmailError","toggleCityError","handlingSubmit","preventDefault","response","responseErrors","test","map","x","message"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react'\n\n\nconst InterestedUsersForm = ({ \n    handlingSubmitInterestedUser,\n    // fullNameError,\n    // emailError,\n    // cityError,\n    // toggleFullNameError,\n    // toggleEmailError,\n    // toggleCityError,\n    // errorFlags,\n    // initializeErrors\n}) => {\n    // console.log(fullNameError)\n    // console.log(emailError)\n    // console.log(cityError)\n    let array = []\n\n    const [ interestedUser , setInterestedUser ] = useState({\n        fullName: '',\n        email: '',\n        city: ''   \n    })\n    const [ fullNameError, setFullNameError ] = useState(false)\n    const [ emailError, setEmailError ] = useState(false)\n    const [ cityError, setCityError ] = useState(false)\n\n    \n    const handlingInputChange = (e) => {\n        setInterestedUser({\n            ...interestedUser, [e.target.name]: e.target.value\n        })\n        console.log(interestedUser)\n    }\n    \n    const toggleFullNameError = () => {\n        setFullNameError(false)\n        // setErrorFlags({\n        //     fullNameError: false\n        // })\n    } \n    const toggleEmailError = () => {\n        setEmailError(false)\n        // setErrorFlags({\n        //     emailError: false\n        // })\n        \n    } \n    const toggleCityError = () => {\n        setCityError(false)\n        // setErrorFlags({\n        //     cityError: false\n        // })\n        \n    } \n\n\n    const handlingSubmit = async(e) => {\n        e.preventDefault()\n        const response = await handlingSubmitInterestedUser(interestedUser)\n        console.log(response)\n        if (response === 201){\n            setInterestedUser({\n                fullName: '',\n                email: '',\n                city: ''\n            })\n        }\n        const responseErrors = response\n        console.log(responseErrors)\n        array = responseErrors\n        console.log(array)\n        const test = array.map((x) => {\n            if (x.message === \"\\\"fullName\\\" is not allowed to be empty\"){\n                setFullNameError(true)\n                \n            }\n            if (x.message === \"\\\"email\\\" is not allowed to be empty\"){\n                setEmailError(true)\n                \n            }\n            if (x.message === \"\\\"city\\\" is not allowed to be empty\"){\n                setCityError(true)\n                \n            }\n            if (x.message === \"\\\"email\\\" must be a valid email\"){\n                setEmailError(true)\n                \n                \n            }\n        })\n        \n    }\n\n    \n    return (\n        <>\n        <form className=\"form-1\"  \n        onSubmit={(e)=> handlingSubmit(e)}\n        >\n            \n            <input\n            className={`${fullNameError ? 'form1InputFullNameError' : 'form1InputFullName'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            onFocus={toggleFullNameError}\n            // onFocus={initializeErrors}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"fullName\" \n            placeholder=\"Nombre completo\"\n            required\n            value={interestedUser.fullName}\n            />\n            <input\n            className={`${emailError ? 'form1InputEmailError' : 'form1InputEmail'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            onFocus={toggleEmailError}\n            // onFocus={initializeErrors}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"email\" \n            placeholder=\"Correo electrónico\"\n            required\n            value={interestedUser.email}\n                \n            />\n            <input\n            className={`${cityError ? 'form1InputCityError' : 'form1InputCity'}`}\n            onChange={ (e) => handlingInputChange(e)}\n            onFocus={toggleCityError} \n            // onFocus={initializeErrors}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"city\" \n            placeholder=\"Ciudad\"\n            required\n            value={interestedUser.city}\n            \n            />\n            <button\n            onClick={(e) => handlingSubmit(e) } \n            type=\"submit\">Enviar</button>  \n        </form>\n        </>\n    )\n}\n\nexport default InterestedUsersForm"]},"metadata":{},"sourceType":"module"}