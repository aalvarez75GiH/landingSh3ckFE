{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/dataSection/interestedUsersForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet array = [];\nlet flagFullNameError = false;\nlet flagEmailError = false;\nlet flagCityError = false;\n\nconst InterestedUsersForm = ({\n  handlingSubmitInterestedUser,\n  // fullNameError,\n  // emailError,\n  // cityError,\n  // toggleFullNameError,\n  // toggleEmailError,\n  // toggleCityError,\n  errorData\n}) => {\n  _s();\n\n  console.log(errorData);\n  const [interestedUser, setInterestedUser] = useState({\n    fullName: '',\n    email: '',\n    city: ''\n  });\n  const [fullNameError, setFullNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [cityError, setCityError] = useState(false);\n  useEffect(() => {}, []);\n\n  const handlingInputChange = e => {\n    setInterestedUser({ ...interestedUser,\n      [e.target.name]: e.target.value\n    });\n    console.log(interestedUser);\n  };\n\n  const gettingErrorsMessages = async () => {\n    const test = errorData.map(x => {\n      if (x.message === \"\\\"fullName\\\" is not allowed to be empty\") {\n        setFullNameError(true);\n      } // return console.log(x.message)\n\n    });\n  };\n\n  const handlingSubmit = async e => {\n    const response = await handlingSubmitInterestedUser(interestedUser);\n    console.log(response);\n\n    if (response.status === 201) {\n      setInterestedUser({\n        fullName: '',\n        email: '',\n        city: ''\n      });\n    } else {\n      gettingErrorsMessages();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-1\",\n      onSubmit: e => handlingSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: `${fullNameError ? 'form1InputFullNameError' : 'form1InputFullName'}`,\n        onChange: e => handlingInputChange(e) // onFocus={toggleFullNameError}\n        ,\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"fullName\",\n        placeholder: \"Nombre completo\",\n        required: true,\n        value: interestedUser.fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // className={`${emailError ? 'form1InputEmailError' : 'form1InputEmail'}`}\n        className: `${flagEmailError ? 'form1InputEmailError' : 'form1InputEmail'}`,\n        onChange: e => handlingInputChange(e) // onFocus={toggleEmailError}\n        ,\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"email\",\n        placeholder: \"Correo electr\\xF3nico\",\n        required: true,\n        value: interestedUser.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // className={`${cityError ? 'form1InputCityError' : 'form1InputCity'}`}\n        className: `${flagCityError ? 'form1InputCityError' : 'form1InputCity'}`,\n        onChange: e => handlingInputChange(e) // onFocus={toggleCityError}\n        ,\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"city\",\n        placeholder: \"Ciudad\",\n        required: true,\n        value: interestedUser.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handlingSubmit(e),\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(InterestedUsersForm, \"kYk0sE1CCLFyCDDuYTxaZus93Qc=\");\n\n_c = InterestedUsersForm;\nexport default InterestedUsersForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterestedUsersForm\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/dataSection/interestedUsersForm.js"],"names":["React","useState","useEffect","array","flagFullNameError","flagEmailError","flagCityError","InterestedUsersForm","handlingSubmitInterestedUser","errorData","console","log","interestedUser","setInterestedUser","fullName","email","city","fullNameError","setFullNameError","emailError","setEmailError","cityError","setCityError","handlingInputChange","e","target","name","value","gettingErrorsMessages","test","map","x","message","handlingSubmit","response","status"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react'\nlet array = []\nlet flagFullNameError = false\nlet flagEmailError = false\nlet flagCityError = false\n\nconst InterestedUsersForm = ({ \n    handlingSubmitInterestedUser,\n    // fullNameError,\n    // emailError,\n    // cityError,\n    // toggleFullNameError,\n    // toggleEmailError,\n    // toggleCityError,\n    errorData\n}) => {\n  \n    console.log(errorData)\n\n    const [ interestedUser , setInterestedUser ] = useState({\n        fullName: '',\n        email: '',\n        city: ''   \n    })\n\n    const [ fullNameError, setFullNameError ] = useState(false)\n    const [ emailError, setEmailError ] = useState(false)\n    const [ cityError, setCityError ] = useState(false)\n    \n    useEffect(() => {\n        \n        \n    }, [])\n\n    \n    const handlingInputChange = (e) => {\n        setInterestedUser({\n            ...interestedUser, [e.target.name]: e.target.value\n        })\n        console.log(interestedUser)\n    }\n\n    const gettingErrorsMessages = async() => {\n        const test = errorData.map( x => {\n            if (x.message === \"\\\"fullName\\\" is not allowed to be empty\" ){\n                setFullNameError(true)\n            }\n            // return console.log(x.message)\n        })\n\n    }\n\n    const handlingSubmit = async(e) => {\n            const response  = await handlingSubmitInterestedUser(interestedUser)       \n            console.log(response)\n            if (response.status === 201){\n                setInterestedUser({\n                    fullName: '',\n                    email: '',\n                    city: ''\n                })\n            }else{\n                gettingErrorsMessages()\n            }\n            \n    }\n\n    \n    return (\n        <>\n        <form className=\"form-1\"  \n        onSubmit={(e)=> handlingSubmit(e)}\n        >\n            \n            <input\n            className={`${fullNameError ? 'form1InputFullNameError' : 'form1InputFullName'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            // onFocus={toggleFullNameError}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"fullName\" \n            placeholder=\"Nombre completo\"\n            required\n            value={interestedUser.fullName}\n            />\n            <input\n            // className={`${emailError ? 'form1InputEmailError' : 'form1InputEmail'}`}\n            className={`${flagEmailError ? 'form1InputEmailError' : 'form1InputEmail'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            // onFocus={toggleEmailError}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"email\" \n            placeholder=\"Correo electrónico\"\n            required\n            value={interestedUser.email}\n                \n            />\n            <input\n            // className={`${cityError ? 'form1InputCityError' : 'form1InputCity'}`}\n            className={`${flagCityError ? 'form1InputCityError' : 'form1InputCity'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            // onFocus={toggleCityError}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"city\" \n            placeholder=\"Ciudad\"\n            required\n            value={interestedUser.city}\n            \n            />\n            <button\n            onClick={(e) => handlingSubmit(e) } \n            type=\"submit\">Enviar</button>  \n        </form>\n        </>\n    )\n}\n\nexport default InterestedUsersForm"]},"metadata":{},"sourceType":"module"}