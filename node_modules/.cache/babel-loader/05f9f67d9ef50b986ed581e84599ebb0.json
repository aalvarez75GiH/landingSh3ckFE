{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/interestedUserForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useFormik, Formik, Field } from 'formik';\nimport * as yup from 'yup';\nimport DropDownList from './dropDownList';\nimport SelectCity from './selectCity';\nimport { MdKeyboardArrowDown } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  fullName: yup.string().min(3).max(100).required('hola, no te olvides de colocar tu nombre completo'),\n  email: yup.string().email('Por favor introduce una dirección de correo válida').required('No te olvides de colocar tu correo electrónico'),\n  city: yup.string().min(3, 'Por favor introduce la ciudad').max(100).required('No te olvides de colocar la ciudad donde resides')\n});\n\nconst InterestedUserForm = ({\n  handlingSubmitInterestedUser\n}) => {\n  _s();\n\n  // const [ selected, setSelected ] = useState('Escoge una ciudad')\n  const onSubmit = values => {\n    handlingSubmitInterestedUser(values);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      fullName: \"\",\n      email: \"\",\n      city: \"\"\n    },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema\n  }); // console.log(formik.values)\n\n  console.log(formik.errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"boxContainer\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          name: \"fullName\",\n          placeholder: \"Nombre completo\",\n          type: \"text\",\n          value: formik.values.fullName,\n          onChange: formik.handleChange,\n          autoComplete: \"on\",\n          onBlur: formik.handleBlur,\n          style: {\n            borderBottom: `${formik.touched.fullName && formik.errors.fullName ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          name: \"email\",\n          placeholder: \"Correo electr\\xF3nico\",\n          type: \"email\",\n          autoComplete: \"on\",\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          style: {\n            borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MdKeyboardArrowDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SelectCity, {\n          onChange: formik.handleChange,\n          error: formik.errors.city ? formik.errors : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InterestedUserForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = InterestedUserForm;\nexport default InterestedUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterestedUserForm\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/interestedUserForm.js"],"names":["React","useState","useFormik","Formik","Field","yup","DropDownList","SelectCity","MdKeyboardArrowDown","validationSchema","object","fullName","string","min","max","required","email","city","InterestedUserForm","handlingSubmitInterestedUser","onSubmit","values","formik","initialValues","validateOnBlur","console","log","errors","handleSubmit","handleChange","handleBlur","borderBottom","touched"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { useFormik, Formik, Field } from 'formik'\nimport * as yup from 'yup'\nimport DropDownList from './dropDownList' \nimport SelectCity from './selectCity'\nimport { MdKeyboardArrowDown } from 'react-icons/md'\n\n\n\nconst validationSchema = yup.object({\n    fullName: yup.string().min(3).max(100).required('hola, no te olvides de colocar tu nombre completo'),\n    email: yup.string().email('Por favor introduce una dirección de correo válida').required('No te olvides de colocar tu correo electrónico'),\n    city: yup.string().min(3, 'Por favor introduce la ciudad').max(100).required('No te olvides de colocar la ciudad donde resides'),   \n})\n\n\nconst InterestedUserForm = ({ handlingSubmitInterestedUser }) => {\n\n    // const [ selected, setSelected ] = useState('Escoge una ciudad')\n    \n    const onSubmit = (values) => {\n        handlingSubmitInterestedUser(values)\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            fullName: \"\",\n            email: \"\",\n            city: \"\"\n        },\n        validateOnBlur: true,\n        onSubmit,\n        validationSchema: validationSchema\n\n    })\n\n    // console.log(formik.values)\n    console.log(formik.errors)\n\n    return (\n        <div className=\"boxContainer\">\n            <Formik>\n            <form \n            onSubmit={formik.handleSubmit}\n            className=\"formContainer\">\n                <input\n                className=\"input\"\n                name=\"fullName\"\n                placeholder=\"Nombre completo\" \n                type=\"text\" \n                value={formik.values.fullName}\n                onChange={formik.handleChange}\n                autoComplete=\"on\"\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.fullName && formik.errors.fullName ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <input\n                className=\"input\"\n                name=\"email\"\n                placeholder=\"Correo electrónico\" \n                type=\"email\" \n                autoComplete=\"on\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <MdKeyboardArrowDown/>\n                <SelectCity\n                onChange={formik.handleChange}\n                error={formik.errors.city ? formik.errors : null}\n                />\n                {/* <DropDownList\n                selected={selected}\n                setSelected={setSelected}\n                /> */}\n\n                {/* <Field name=\"colors\" as=\"select\" className=\"my-select\">\n                   <option value=\"red\">Red</option>\n                   <option value=\"green\">Green</option>\n                   <option value=\"blue\">Blue</option>\n                 </Field> */}\n\n                \n                \n                {/* <input\n                className=\"input\"\n                name=\"city\"\n                autoComplete=\"on\"\n                placeholder=\"Ciudad\" \n                type=\"text\" \n                value={formik.values.city}\n                onChange={formik.handleChange}                \n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.city && formik.errors.city ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                /> */}\n\n                <button\n                type=\"submit\"\n                >Enviar</button>\n            </form>\n            </Formik>\n            \n\n        </div>\n    )\n}\n\nexport default InterestedUserForm\n"]},"metadata":{},"sourceType":"module"}