{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/views/home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport NavBar from '../components/navBar/navBar';\nimport SideBar from '../components/sideBar/sideBar'; // import StyledSideBar from '../components/sideBar/styledSideBar'\n\nimport HeroSection from '../components/heroSection/heroSection'; // import StyledNavBar from '../components/navBar/styledNavbar'\n// import StyledHeroSection from '../components/heroSection/styledHeroSection'\n\nimport VideoSection from '../components/videoSection/videoSection';\nimport HiwSection from '../components/hiwSection/hiwSection';\nimport { infoHero, infoVideo, infoData } from '../utils/data';\nimport { infoHiW } from '../components/hiwSection/data';\nimport useMobilDetection from '../utils/mobilDetection';\nimport useMobilDetect from '../utils/mobilHook';\nimport NavBarMobil from '../components/navBar/navBarMobil';\nimport DataSection from '../components/dataSection/dataSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet array = [];\n\nconst Home = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [login, setLogin] = useState(false);\n  const [error, setError] = useState(null);\n  const [loadingUser, setLoadingUser] = useState(false);\n  const [errorFlags, setErrorFlags] = useState({\n    fullNameError: false,\n    emailError: false,\n    cityError: false\n  }); // const [ fullNameError, setFullNameError ] = useState(false)\n  // const [ emailError, setEmailError ] = useState(false)\n  // const [ cityError, setCityError ] = useState(false)\n\n  const url_users = \"http://localhost:5000/api/interestedUsers\";\n  const mobil = useMobilDetect();\n  const mobil2 = useMobilDetection();\n\n  const initializeErrors = () => {\n    setErrorFlags({\n      fullNameError: false,\n      emailError: false,\n      cityError: false\n    });\n  };\n\n  const toggleFullNameError = () => {\n    // setFullNameError(false)\n    setErrorFlags({\n      fullNameError: false,\n      emailError: false,\n      cityError: false\n    });\n  };\n\n  const toggleEmailError = () => {\n    // setEmailError(false)\n    setErrorFlags({\n      fullNameError: false,\n      emailError: false,\n      cityError: false\n    });\n  };\n\n  const toggleCityError = () => {\n    // setCityError(false)\n    setErrorFlags({\n      fullNameError: false,\n      emailError: false,\n      cityError: false\n    });\n  };\n\n  const handlingSubmitInterestedUser = async interestedUser => {\n    setLoadingUser(true);\n    setTimeout(async () => {\n      try {\n        const response = await axios.post(url_users, interestedUser);\n        console.log(response);\n\n        if (response.status === 201) {\n          setLoadingUser(false);\n          console.log('Gracias por enviarnos tus datos, estaremos en contacto...');\n          return response.status;\n        }\n      } catch (error) {\n        if (error.response.status === 400) {\n          setLoadingUser(false);\n          console.log(error.response.data);\n          const responseErrors = error.response.data;\n          console.log(responseErrors);\n          array = responseErrors;\n          console.log(array);\n          const test = array.map(x => {\n            if (x.message === \"\\\"fullName\\\" is not allowed to be empty\") {\n              // setFullNameError(true)\n              setErrorFlags({\n                fullNameError: true // emailError: false,\n                // cityError: false\n\n              });\n            }\n\n            if (x.message === \"\\\"email\\\" is not allowed to be empty\") {\n              // setEmailError(true)\n              setErrorFlags({\n                // fullNameError: false,\n                emailError: true // cityError: false\n\n              });\n            }\n\n            if (x.message === \"\\\"city\\\" is not allowed to be empty\") {\n              // setCityError(true)\n              setErrorFlags({\n                // fullNameError: false,\n                // emailError: false,\n                cityError: true\n              });\n            }\n\n            if (x.message === \"\\\"email\\\" must be a valid email\") {\n              // setEmailError(true)\n              setErrorFlags({\n                // fullNameError: false,\n                emailError: true // cityError: false\n\n              });\n            }\n          });\n        }\n\n        console.error(error.response.data);\n        showError(error.response.data);\n      }\n    }, 3000);\n  };\n\n  const showError = message => {\n    setError(message);\n    console.log(error);\n  };\n\n  const toggleSideBar = () => {\n    console.log('this is toggle...');\n    setIsOpen(!isOpen);\n  };\n\n  const onLogin = e => {\n    e.preventDefault();\n    setLogin(!login);\n  }; // console.log(fullNameError)\n  // console.log(emailError)\n  // console.log(cityError)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {\n      isOpen: isOpen,\n      toggleSideBar: toggleSideBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), mobil2.screenWidth <= 1098 || mobil ? /*#__PURE__*/_jsxDEV(NavBarMobil, {\n      toggleSideBar: toggleSideBar,\n      username: 'hola, arnoldo',\n      login: login,\n      onLogin: onLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(NavBar, {\n      toggleSideBar: toggleSideBar,\n      username: 'hola, arnoldo',\n      login: login,\n      onLogin: onLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(HeroSection, { ...infoHero\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VideoSection, { ...infoVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HiwSection, { ...infoHiW\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataSection, { ...infoData,\n      showError: showError,\n      handlingSubmitInterestedUser: handlingSubmitInterestedUser // fullNameError={fullNameError}\n      // emailError={emailError}\n      // cityError={cityError}\n      ,\n      errorFlags: errorFlags,\n      toggleFullNameError: toggleFullNameError,\n      toggleEmailError: toggleEmailError,\n      toggleCityError: toggleCityError,\n      loadingUser: loadingUser,\n      initializeErrors: initializeErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"t1HPjqV+RAzVYGTlAp2kBRfvVkY=\", false, function () {\n  return [useMobilDetect, useMobilDetection];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/views/home.js"],"names":["React","useState","axios","NavBar","SideBar","HeroSection","VideoSection","HiwSection","infoHero","infoVideo","infoData","infoHiW","useMobilDetection","useMobilDetect","NavBarMobil","DataSection","array","Home","isOpen","setIsOpen","login","setLogin","error","setError","loadingUser","setLoadingUser","errorFlags","setErrorFlags","fullNameError","emailError","cityError","url_users","mobil","mobil2","initializeErrors","toggleFullNameError","toggleEmailError","toggleCityError","handlingSubmitInterestedUser","interestedUser","setTimeout","response","post","console","log","status","data","responseErrors","test","map","x","message","showError","toggleSideBar","onLogin","e","preventDefault","screenWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport NavBar from '../components/navBar/navBar'\nimport SideBar from '../components/sideBar/sideBar'\n// import StyledSideBar from '../components/sideBar/styledSideBar'\nimport HeroSection from '../components/heroSection/heroSection'\n// import StyledNavBar from '../components/navBar/styledNavbar'\n// import StyledHeroSection from '../components/heroSection/styledHeroSection'\nimport VideoSection from '../components/videoSection/videoSection'\nimport HiwSection from '../components/hiwSection/hiwSection'\nimport { infoHero, infoVideo, infoData } from '../utils/data'\nimport { infoHiW  } from '../components/hiwSection/data'\nimport useMobilDetection from '../utils/mobilDetection'\nimport useMobilDetect from '../utils/mobilHook'\nimport NavBarMobil from '../components/navBar/navBarMobil'\nimport DataSection from '../components/dataSection/dataSection'\nlet array = []\n\n\nconst Home = () => {\n\n    const [ isOpen, setIsOpen ] = useState(false)\n    const [ login, setLogin ] = useState(false)\n    const [ error, setError ] = useState(null)\n    const [ loadingUser, setLoadingUser ] = useState(false)\n    \n    \n    const [ errorFlags, setErrorFlags ] = useState({\n        fullNameError: false,\n        emailError: false,\n        cityError: false\n    })\n\n    // const [ fullNameError, setFullNameError ] = useState(false)\n    // const [ emailError, setEmailError ] = useState(false)\n    // const [ cityError, setCityError ] = useState(false)\n\n    const url_users = \"http://localhost:5000/api/interestedUsers\"\n    const mobil = useMobilDetect()\n    const mobil2 = useMobilDetection()\n    \n    const initializeErrors = () => {\n        setErrorFlags({\n            fullNameError: false,\n            emailError: false,\n            cityError: false\n        })\n    }\n\n   \n\n    const toggleFullNameError = () => {\n        // setFullNameError(false)\n        setErrorFlags({\n            fullNameError: false,\n            emailError: false,\n            cityError: false\n\n        })\n    } \n    const toggleEmailError = () => {\n        // setEmailError(false)\n        setErrorFlags({\n            fullNameError: false,\n            emailError: false,\n            cityError: false\n        })\n        \n    } \n    const toggleCityError = () => {\n        // setCityError(false)\n        setErrorFlags({\n            fullNameError: false,\n            emailError: false,\n            cityError: false\n        })\n        \n    } \n\n    const handlingSubmitInterestedUser = async(interestedUser) => {\n        setLoadingUser(true)\n        setTimeout(async()=> {\n            try {\n                const response = await axios.post(url_users, interestedUser)\n                console.log(response)\n                if (response.status === 201){\n                    setLoadingUser(false)\n                    console.log('Gracias por enviarnos tus datos, estaremos en contacto...')\n                    return response.status\n                } \n            }catch(error) {\n                if (error.response.status === 400){\n                    setLoadingUser(false)\n                    console.log(error.response.data)\n                    const responseErrors = error.response.data\n                    \n                    console.log(responseErrors)\n                    array = responseErrors\n                    console.log(array)\n                    const test = array.map((x) => {\n                        if (x.message === \"\\\"fullName\\\" is not allowed to be empty\"){\n                            // setFullNameError(true)\n                            setErrorFlags({\n                                fullNameError: true,\n                                // emailError: false,\n                                // cityError: false\n                            })\n                        }\n                        if (x.message === \"\\\"email\\\" is not allowed to be empty\"){\n                            // setEmailError(true)\n                            setErrorFlags({\n                                // fullNameError: false,\n                                emailError: true,\n                                // cityError: false\n                            })\n                        }\n                        if (x.message === \"\\\"city\\\" is not allowed to be empty\"){\n                            // setCityError(true)\n                            setErrorFlags({\n                                // fullNameError: false,\n                                // emailError: false,\n                                cityError: true\n\n                            })\n                        }\n                        if (x.message === \"\\\"email\\\" must be a valid email\"){\n                            // setEmailError(true)\n                            setErrorFlags({\n                                // fullNameError: false,\n                                emailError: true,\n                                // cityError: false\n\n                            })\n                            \n                        }\n                    })\n                }\n                console.error(error.response.data)\n                showError(error.response.data)\n                    \n            }\n        },3000)\n        \n    }\n\n\n\n    const showError = (message) => {\n        setError(message)\n        console.log(error)\n    }\n\n    const toggleSideBar = () => {\n        console.log('this is toggle...')\n        setIsOpen(!isOpen)\n        \n    } \n    const onLogin = (e) => {\n        e.preventDefault()\n        setLogin(!login)\n    }\n\n    // console.log(fullNameError)\n    // console.log(emailError)\n    // console.log(cityError)\n\n    return (\n  \n        <>\n            <SideBar isOpen={ isOpen } toggleSideBar={ toggleSideBar }/>\n            { mobil2.screenWidth <= 1098 || mobil ?  \n                <NavBarMobil \n                toggleSideBar={ toggleSideBar }  \n                username={'hola, arnoldo'}\n                login={ login }\n                onLogin={ onLogin }\n            /> : <NavBar \n            toggleSideBar={ toggleSideBar }  \n            username={'hola, arnoldo'}\n            login={ login }\n            onLogin={ onLogin }\n        />\n            }\n            <HeroSection {...infoHero} />\n            <VideoSection {...infoVideo}/>\n            <HiwSection {...infoHiW}/>\n            <DataSection \n            {...infoData} \n            showError={showError}\n            handlingSubmitInterestedUser={handlingSubmitInterestedUser}\n            // fullNameError={fullNameError}\n            // emailError={emailError}\n            // cityError={cityError}\n            errorFlags={errorFlags}\n            toggleFullNameError={toggleFullNameError}\n            toggleEmailError={toggleEmailError}\n            toggleCityError={toggleCityError}\n            loadingUser={loadingUser}\n            initializeErrors={initializeErrors}\n            />\n        </>\n    )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}