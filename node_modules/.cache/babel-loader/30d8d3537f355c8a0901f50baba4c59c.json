{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/dataSection/interestedUsersForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst InterestedUsersForm = ({\n  handlingSubmitInterestedUser,\n  fullNameError,\n  emailError,\n  cityError\n}) => {\n  _s();\n\n  console.log(fullNameError);\n  console.log(emailError);\n  console.log(cityError);\n  const [interestedUser, setInterestedUser] = useState({\n    fullName: '',\n    email: '',\n    city: ''\n  });\n\n  const handlingInputChange = e => {\n    setInterestedUser({ ...interestedUser,\n      [e.target.name]: e.target.value\n    });\n    console.log(interestedUser);\n  };\n\n  const handlingSubmit = async e => {\n    e.preventDefault();\n    await handlingSubmitInterestedUser(interestedUser); // setInterestedUser({\n    //     fullName: '',\n    //     email: '',\n    //     city: ''\n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-1\",\n      onSubmit: e => handlingSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        // className=\"form1InputFullName\"\n        className: `${fullNameError ? 'form1InputFullNameError' : 'form1InputFullName'}`,\n        onChange: e => handlingInputChange(e),\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"fullName\",\n        placeholder: \"Nombre completo\",\n        required: true,\n        value: interestedUser.fullName // value={`${fullNameError ? '' : interestedUser.fullName}`}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // className=\"form1InputEmail\"\n        className: `${emailError ? 'form1InputEmailError' : 'form1InputEmail'}`,\n        onChange: e => handlingInputChange(e),\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"email\",\n        placeholder: \"Correo electr\\xF3nico\",\n        required: true,\n        value: interestedUser.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // className=\"form1InputCity\"\n        className: `${cityError ? 'form1InputCityError' : 'form1InputCity'}`,\n        onChange: e => handlingInputChange(e),\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"city\",\n        placeholder: \"Ciudad\",\n        required: true,\n        value: interestedUser.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handlingSubmit(e),\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(InterestedUsersForm, \"jPapBSxC8N0PseNcDZxtNWA+AKU=\");\n\n_c = InterestedUsersForm;\nexport default InterestedUsersForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterestedUsersForm\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/dataSection/interestedUsersForm.js"],"names":["React","useState","InterestedUsersForm","handlingSubmitInterestedUser","fullNameError","emailError","cityError","console","log","interestedUser","setInterestedUser","fullName","email","city","handlingInputChange","e","target","name","value","handlingSubmit","preventDefault"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react'\n\nconst InterestedUsersForm = ({ \n    handlingSubmitInterestedUser,\n    fullNameError,\n    emailError,\n    cityError\n\n}) => {\n    console.log(fullNameError)\n    console.log(emailError)\n    console.log(cityError)\n\n\n    const [ interestedUser , setInterestedUser ] = useState({\n        fullName: '',\n        email: '',\n        city: ''   \n    })\n\n    const handlingInputChange = (e) => {\n        setInterestedUser({\n            ...interestedUser, [e.target.name]: e.target.value\n        })\n        console.log(interestedUser)\n    }\n\n\n\n    const handlingSubmit = async(e) => {\n        e.preventDefault()\n        await handlingSubmitInterestedUser(interestedUser)\n        \n        // setInterestedUser({\n        //     fullName: '',\n        //     email: '',\n        //     city: ''\n        // })\n    }\n    \n    return (\n        <>\n        <form className=\"form-1\"  \n        onSubmit={(e)=> handlingSubmit(e)}\n        >\n            <input\n            // className=\"form1InputFullName\"\n            className={`${fullNameError ? 'form1InputFullNameError' : 'form1InputFullName'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"fullName\" \n            placeholder=\"Nombre completo\"\n            required\n            value={interestedUser.fullName}\n            // value={`${fullNameError ? '' : interestedUser.fullName}`}\n            />\n            <input\n            // className=\"form1InputEmail\"\n            className={`${emailError ? 'form1InputEmailError' : 'form1InputEmail'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"email\" \n            placeholder=\"Correo electrÃ³nico\"\n            required\n            value={interestedUser.email}\n                \n            />\n            <input\n            // className=\"form1InputCity\"\n            className={`${cityError ? 'form1InputCityError' : 'form1InputCity'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"city\" \n            placeholder=\"Ciudad\"\n            required\n            value={interestedUser.city}\n            \n            />\n            <button\n            onClick={(e) => handlingSubmit(e) } \n            type=\"submit\">Enviar</button>  \n        </form>\n        </>\n        \n        \n        \n        \n    )\n}\n\nexport default InterestedUsersForm"]},"metadata":{},"sourceType":"module"}