{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/customSelectCity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MdKeyboardArrowDown } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomSelectCity = ({\n  onChange\n}) => {\n  _s();\n\n  const [isActive, setIsActive] = useState(false);\n  const [selected, setSelected] = useState('');\n  const options = ['Caracas', 'Barquisimeto', 'Valencia', 'Maracaibo'];\n\n  const toggleDropDownList = () => {\n    console.log('something...'); // setIsActive(!isActive)\n  };\n\n  console.log(selected);\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-btn\",\n      onClick: toggleDropDownList,\n      children: [selected, /*#__PURE__*/_jsxDEV(MdKeyboardArrowDown, {\n        className: \"arrowDown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-content\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => {\n          setSelected(option);\n          setIsActive(false);\n        },\n        className: \"dropdown-item\",\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CustomSelectCity, \"M7IflYhry16APtVmPRWnKjkYiQA=\");\n\n_c = CustomSelectCity;\nexport default CustomSelectCity;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomSelectCity\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/customSelectCity.js"],"names":["React","useState","MdKeyboardArrowDown","CustomSelectCity","onChange","isActive","setIsActive","selected","setSelected","options","toggleDropDownList","console","log","map","option","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,mBAAT,QAAoC,gBAApC;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAEvC,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAEM,QAAF,EAAYC,WAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMQ,OAAO,GAAG,CAAC,SAAD,EAAY,cAAZ,EAA4B,UAA5B,EAAwC,WAAxC,CAAhB;;AAEA,QAAMC,kBAAkB,GAAG,MAAM;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAD6B,CAE7B;AACH,GAHD;;AAKAD,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,sBAEQ;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AACA,MAAA,OAAO,EAAEG,kBADT;AAAA,iBAGKH,QAHL,eAII,QAAC,mBAAD;AACA,QAAA,SAAS,EAAC;AADV;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EASMF,QAAQ,iBACN;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACKI,OAAO,CAACI,GAAR,CAAYC,MAAM,iBACf;AACA,QAAA,OAAO,EAAGC,CAAC,IAAI;AACXP,UAAAA,WAAW,CAACM,MAAD,CAAX;AACAR,UAAAA,WAAW,CAAC,KAAD,CAAX;AACH,SAJD;AAKA,QAAA,SAAS,EAAC,eALV;AAAA,kBAMKQ;AANL;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAVR;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AA4BH,CAxCD;;GAAMX,gB;;KAAAA,gB;AA0CN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react'\nimport { MdKeyboardArrowDown } from 'react-icons/md'\n\nconst CustomSelectCity = ({ onChange }) => {\n\n    const [ isActive, setIsActive ] = useState(false)\n    const [ selected, setSelected ] = useState('') \n    const options = ['Caracas', 'Barquisimeto', 'Valencia', 'Maracaibo']\n    \n    const toggleDropDownList = () => {\n        console.log('something...')\n        // setIsActive(!isActive)\n    }\n\n    console.log(selected)\n    return (\n      \n            <select className=\"dropdown\">\n                <div className=\"dropdown-btn\"\n                onClick={toggleDropDownList}\n                >\n                    {selected}\n                    <MdKeyboardArrowDown\n                    className=\"arrowDown\"\n                    />\n                </div>\n                { isActive && (\n                    <div className=\"dropdown-content\">\n                        {options.map(option => (\n                            <div \n                            onClick={ e => { \n                                setSelected(option)\n                                setIsActive(false)\n                            }}    \n                            className=\"dropdown-item\">\n                                {option}\n                            </div>\n                        ))}  \n                    </div>\n                )}\n            </select>\n        \n    )\n}\n\nexport default CustomSelectCity"]},"metadata":{},"sourceType":"module"}