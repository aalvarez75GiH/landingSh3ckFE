{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/views/home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport NavBar from '../components/navBar/navBar';\nimport SideBar from '../components/sideBar/sideBar'; // import StyledSideBar from '../components/sideBar/styledSideBar'\n\nimport HeroSection from '../components/heroSection/heroSection'; // import StyledNavBar from '../components/navBar/styledNavbar'\n// import StyledHeroSection from '../components/heroSection/styledHeroSection'\n\nimport VideoSection from '../components/videoSection/videoSection';\nimport HiwSection from '../components/hiwSection/hiwSection';\nimport { infoHero, infoVideo, infoData } from '../utils/data';\nimport { infoHiW } from '../components/hiwSection/data';\nimport useMobilDetection from '../utils/mobilDetection';\nimport useMobilDetect from '../utils/mobilHook';\nimport NavBarMobil from '../components/navBar/navBarMobil';\nimport DataSection from '../components/dataSection/dataSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet errorsArray = [];\nconst errorsObject = {\n  fullNameError: false,\n  emailError: false,\n  cityError: false\n};\n\nconst Home = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [login, setLogin] = useState(false);\n  const [error, setError] = useState(null);\n  const [loadingUser, setLoadingUser] = useState(false);\n  const [isThereErrors, setIsThereErrors] = useState(false); // const [ fullNameError, setFullNameError ] = useState(false)\n  // const [ emailError, setEmailError ] = useState(false)\n  // const [ cityError, setCityError ] = useState(false)\n  // const [ errorData, setErrorData ] = useState([])\n\n  const url_users = \"http://localhost:5000/api/interestedUsers\";\n  const mobil = useMobilDetect();\n  const mobil2 = useMobilDetection();\n\n  const toggleFullNameError = () => {\n    setFullNameError(false);\n  };\n\n  const toggleEmailError = () => {\n    setEmailError(false);\n  };\n\n  const toggleCityError = () => {\n    setCityError(false);\n  };\n\n  const handlingSubmitInterestedUser = async interestedUser => {\n    setLoadingUser(true);\n    setTimeout(async () => {\n      try {\n        const {\n          status\n        } = await axios.post(url_users, interestedUser);\n        console.log(status);\n\n        if (status === 201) {\n          setLoadingUser(false);\n          console.log('Gracias por enviarnos tus datos, estaremos en contacto...'); // return response\n        }\n      } catch (error) {\n        console.log(error.response);\n\n        const gettingData = () => {\n          // const whatever = error.response.data.map((item) => {\n          //     errorsArray.push(item.message) \n          // })\n          const whatever = error.response.data.map(error => {\n            if (error.message === \"\\\"fullName\\\" is not allowed to be empty\") {\n              console.log('pasa por fullNameError');\n              errorsObject.fullNameError = true;\n            }\n\n            if (error.message === \"\\\"email\\\" is not allowed to be empty\") {\n              console.log('pasa por fullNameError');\n              errorsObject.emailError = true;\n            }\n\n            if (error.message === \"\\\"city\\\" is not allowed to be empty\") {\n              console.log('pasa por fullNameError');\n              errorsObject.cityError = true;\n            }\n          });\n        };\n\n        gettingData();\n        console.log(errorsObject);\n        showError(error.response.data);\n        setLoadingUser(false);\n      }\n    }, 3000);\n  };\n\n  const showError = message => {\n    setError(message);\n    console.log(error);\n  };\n\n  const toggleSideBar = () => {\n    console.log('this is toggle...');\n    setIsOpen(!isOpen);\n  };\n\n  const onLogin = e => {\n    e.preventDefault();\n    setLogin(!login);\n  };\n\n  console.log(errorsArray);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {\n      isOpen: isOpen,\n      toggleSideBar: toggleSideBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), mobil2.screenWidth <= 1098 || mobil ? /*#__PURE__*/_jsxDEV(NavBarMobil, {\n      toggleSideBar: toggleSideBar,\n      username: 'hola, arnoldo',\n      login: login,\n      onLogin: onLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(NavBar, {\n      toggleSideBar: toggleSideBar,\n      username: 'hola, arnoldo',\n      login: login,\n      onLogin: onLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(HeroSection, { ...infoHero\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VideoSection, { ...infoVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HiwSection, { ...infoHiW\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataSection, { ...infoData,\n      showError: showError,\n      handlingSubmitInterestedUser: handlingSubmitInterestedUser // fullNameError={fullNameError}\n      // emailError={emailError}\n      // cityError={cityError}\n      ,\n      toggleFullNameError: toggleFullNameError,\n      toggleEmailError: toggleEmailError,\n      toggleCityError: toggleCityError,\n      loadingUser: loadingUser // errorsArray={errorsArray}\n      ,\n      errorsObject: errorsObject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"L8CYrix0wwPFIf7/e5mAsxutxbk=\", false, function () {\n  return [useMobilDetect, useMobilDetection];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/views/home.js"],"names":["React","useState","axios","NavBar","SideBar","HeroSection","VideoSection","HiwSection","infoHero","infoVideo","infoData","infoHiW","useMobilDetection","useMobilDetect","NavBarMobil","DataSection","errorsArray","errorsObject","fullNameError","emailError","cityError","Home","isOpen","setIsOpen","login","setLogin","error","setError","loadingUser","setLoadingUser","isThereErrors","setIsThereErrors","url_users","mobil","mobil2","toggleFullNameError","setFullNameError","toggleEmailError","setEmailError","toggleCityError","setCityError","handlingSubmitInterestedUser","interestedUser","setTimeout","status","post","console","log","response","gettingData","whatever","data","map","message","showError","toggleSideBar","onLogin","e","preventDefault","screenWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport NavBar from '../components/navBar/navBar'\nimport SideBar from '../components/sideBar/sideBar'\n// import StyledSideBar from '../components/sideBar/styledSideBar'\nimport HeroSection from '../components/heroSection/heroSection'\n// import StyledNavBar from '../components/navBar/styledNavbar'\n// import StyledHeroSection from '../components/heroSection/styledHeroSection'\nimport VideoSection from '../components/videoSection/videoSection'\nimport HiwSection from '../components/hiwSection/hiwSection'\nimport { infoHero, infoVideo, infoData } from '../utils/data'\nimport { infoHiW  } from '../components/hiwSection/data'\nimport useMobilDetection from '../utils/mobilDetection'\nimport useMobilDetect from '../utils/mobilHook'\nimport NavBarMobil from '../components/navBar/navBarMobil'\nimport DataSection from '../components/dataSection/dataSection'\nlet errorsArray = []\nconst errorsObject = {\n    fullNameError: false,\n    emailError: false,\n    cityError: false\n}\n\nconst Home = () => {\n\n    const [ isOpen, setIsOpen ] = useState(false)\n    const [ login, setLogin ] = useState(false)\n    const [ error, setError ] = useState(null)\n    const [ loadingUser, setLoadingUser ] = useState(false)\n    const [ isThereErrors, setIsThereErrors ] = useState(false)\n    // const [ fullNameError, setFullNameError ] = useState(false)\n    // const [ emailError, setEmailError ] = useState(false)\n    // const [ cityError, setCityError ] = useState(false)\n    // const [ errorData, setErrorData ] = useState([])\n   \n    const url_users = \"http://localhost:5000/api/interestedUsers\"\n    const mobil = useMobilDetect()\n    const mobil2 = useMobilDetection()\n    \n\n    const toggleFullNameError = () => {\n        setFullNameError(false)\n    } \n    const toggleEmailError = () => {\n        setEmailError(false)\n    } \n    const toggleCityError = () => {\n        setCityError(false)\n    } \n\n    const handlingSubmitInterestedUser = async(interestedUser) => {\n        setLoadingUser(true)\n        setTimeout(async()=> {\n            try {\n                const { status } = await axios.post(url_users, interestedUser)\n                console.log(status)\n                if (status === 201){\n                    setLoadingUser(false)\n                    console.log('Gracias por enviarnos tus datos, estaremos en contacto...')\n                    // return response\n                } \n            }catch(error) {\n                console.log(error.response)\n                const gettingData = () => {\n                    // const whatever = error.response.data.map((item) => {\n                    //     errorsArray.push(item.message) \n                         \n                    // })\n                    const whatever = error.response.data.map((error) => {\n                        if (error.message === \"\\\"fullName\\\" is not allowed to be empty\"){\n                            console.log('pasa por fullNameError')\n                            errorsObject.fullNameError = true\n                        }\n                        if (error.message === \"\\\"email\\\" is not allowed to be empty\"){\n                            console.log('pasa por fullNameError')\n                            errorsObject.emailError = true\n                        }\n                        if (error.message === \"\\\"city\\\" is not allowed to be empty\"){\n                            console.log('pasa por fullNameError')\n                            errorsObject.cityError = true\n                        }\n                    })\n                }\n                gettingData()\n                console.log(errorsObject)\n                showError(error.response.data)\n                setLoadingUser(false)    \n            }\n            \n        },3000)\n        \n    }\n\n    \n    const showError = (message) => {\n        setError(message)\n        console.log(error)\n    }\n\n    const toggleSideBar = () => {\n        console.log('this is toggle...')\n        setIsOpen(!isOpen)\n        \n    } \n    const onLogin = (e) => {\n        e.preventDefault()\n        setLogin(!login)\n    }\n\n    console.log(errorsArray)\n    return (\n        <>\n            <SideBar isOpen={ isOpen } toggleSideBar={ toggleSideBar }/>\n            { mobil2.screenWidth <= 1098 || mobil ?  \n                <NavBarMobil \n                toggleSideBar={ toggleSideBar }  \n                username={'hola, arnoldo'}\n                login={ login }\n                onLogin={ onLogin }\n            /> : <NavBar \n            toggleSideBar={ toggleSideBar }  \n            username={'hola, arnoldo'}\n            login={ login }\n            onLogin={ onLogin }\n        />\n            }\n            <HeroSection {...infoHero} />\n            <VideoSection {...infoVideo}/>\n            <HiwSection {...infoHiW}/>\n            <DataSection \n            {...infoData} \n            showError={showError}\n            handlingSubmitInterestedUser={handlingSubmitInterestedUser}\n            // fullNameError={fullNameError}\n            // emailError={emailError}\n            // cityError={cityError}\n            toggleFullNameError={toggleFullNameError}\n            toggleEmailError={toggleEmailError}\n            toggleCityError={toggleCityError}\n            loadingUser={loadingUser}\n            // errorsArray={errorsArray}\n            errorsObject={errorsObject}\n            />\n        </>\n    )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}