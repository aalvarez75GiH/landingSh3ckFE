{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/dataSection/interestedUsersForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet array = [];\nlet flagFullNameError = false;\nlet flagEmailError = false;\nlet flagCityError = false;\n\nconst InterestedUsersForm = ({\n  handlingSubmitInterestedUser,\n  // fullNameError,\n  // emailError,\n  // cityError,\n  toggleFullNameError,\n  toggleEmailError,\n  toggleCityError,\n  flag,\n  errorData\n}) => {\n  _s();\n\n  // console.log(fullNameError)\n  // console.log(emailError)\n  // console.log(cityError)\n  console.log(errorData);\n  const [interestedUser, setInterestedUser] = useState({\n    fullName: '',\n    email: '',\n    city: ''\n  });\n\n  const handlingInputChange = e => {\n    setInterestedUser({ ...interestedUser,\n      [e.target.name]: e.target.value\n    });\n    console.log(interestedUser);\n  };\n\n  const handlingSubmit = async e => {\n    e.preventDefault();\n    const response = await handlingSubmitInterestedUser(interestedUser);\n    console.log(response);\n\n    if (response === 201) {\n      setInterestedUser({\n        fullName: '',\n        email: '',\n        city: ''\n      });\n    }\n\n    array = errorData;\n    const test = array.map(x => {\n      console.log(x.message);\n\n      if (x.message === \"\\\"fullName\\\" is not allowed to be empty\") {\n        console.log('pasa por el nuevo fullNameError');\n        flagFullNameError = true;\n      }\n\n      if (x.message === \"\\\"email\\\" is not allowed to be empty\") {\n        console.log('pasa por el nuevo emailError');\n        flagEmailError = true;\n      }\n\n      if (x.message === \"\\\"city\\\" is not allowed to be empty\") {\n        console.log('pasa por el nuevo cityError');\n        flagCityError = true;\n      }\n\n      if (x.message === \"\\\"email\\\" must be a valid email\") {\n        console.log('pasa por emailError 2');\n        flagEmailError = true;\n      }\n    });\n    console.log(test);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-1\",\n      onSubmit: e => handlingSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        // className={`${fullNameError ? 'form1InputFullNameError' : 'form1InputFullName'}`}\n        className: `${flagFullNameError ? 'form1InputFullNameError' : 'form1InputFullName'}`,\n        onChange: e => handlingInputChange(e),\n        onFocus: toggleFullNameError,\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"fullName\",\n        placeholder: \"Nombre completo\",\n        required: true,\n        value: interestedUser.fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // className={`${emailError ? 'form1InputEmailError' : 'form1InputEmail'}`}\n        className: `${flagEmailError ? 'form1InputEmailError' : 'form1InputEmail'}`,\n        onChange: e => handlingInputChange(e),\n        onFocus: toggleEmailError,\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"email\",\n        placeholder: \"Correo electr\\xF3nico\",\n        required: true,\n        value: interestedUser.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // className={`${cityError ? 'form1InputCityError' : 'form1InputCity'}`}\n        className: `${flagCityError ? 'form1InputCityError' : 'form1InputCity'}`,\n        onChange: e => handlingInputChange(e),\n        onFocus: toggleCityError,\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"city\",\n        placeholder: \"Ciudad\",\n        required: true,\n        value: interestedUser.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handlingSubmit(e),\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(InterestedUsersForm, \"jPapBSxC8N0PseNcDZxtNWA+AKU=\");\n\n_c = InterestedUsersForm;\nexport default InterestedUsersForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterestedUsersForm\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/dataSection/interestedUsersForm.js"],"names":["React","useState","array","flagFullNameError","flagEmailError","flagCityError","InterestedUsersForm","handlingSubmitInterestedUser","toggleFullNameError","toggleEmailError","toggleCityError","flag","errorData","console","log","interestedUser","setInterestedUser","fullName","email","city","handlingInputChange","e","target","name","value","handlingSubmit","preventDefault","response","test","map","x","message"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,iBAAiB,GAAG,KAAxB;AACA,IAAIC,cAAc,GAAG,KAArB;AACA,IAAIC,aAAa,GAAG,KAApB;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AACzBC,EAAAA,4BADyB;AAEzB;AACA;AACA;AACAC,EAAAA,mBALyB;AAMzBC,EAAAA,gBANyB;AAOzBC,EAAAA,eAPyB;AAQzBC,EAAAA,IARyB;AASzBC,EAAAA;AATyB,CAAD,KAUtB;AAAA;;AACF;AACA;AACA;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEA,QAAM,CAAEG,cAAF,EAAmBC,iBAAnB,IAAyCf,QAAQ,CAAC;AACpDgB,IAAAA,QAAQ,EAAE,EAD0C;AAEpDC,IAAAA,KAAK,EAAE,EAF6C;AAGpDC,IAAAA,IAAI,EAAE;AAH8C,GAAD,CAAvD;;AAQA,QAAMC,mBAAmB,GAAIC,CAAD,IAAO;AAC/BL,IAAAA,iBAAiB,CAAC,EACd,GAAGD,cADW;AACK,OAACM,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAD/B,KAAD,CAAjB;AAGAX,IAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ;AACH,GALD;;AAOA,QAAMU,cAAc,GAAG,MAAMJ,CAAN,IAAY;AAE/BA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAMC,QAAQ,GAAI,MAAMpB,4BAA4B,CAACQ,cAAD,CAApD;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYa,QAAZ;;AACA,QAAIA,QAAQ,KAAK,GAAjB,EAAqB;AACjBX,MAAAA,iBAAiB,CAAC;AACdC,QAAAA,QAAQ,EAAE,EADI;AAEdC,QAAAA,KAAK,EAAE,EAFO;AAGdC,QAAAA,IAAI,EAAE;AAHQ,OAAD,CAAjB;AAKH;;AACDjB,IAAAA,KAAK,GAAGU,SAAR;AACA,UAAMgB,IAAI,GAAG1B,KAAK,CAAC2B,GAAN,CAAWC,CAAD,IAAO;AAC1BjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,CAAC,CAACC,OAAd;;AACA,UAAID,CAAC,CAACC,OAAF,KAAc,yCAAlB,EAA4D;AACxDlB,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAX,QAAAA,iBAAiB,GAAG,IAApB;AACH;;AACD,UAAI2B,CAAC,CAACC,OAAF,KAAc,sCAAlB,EAAyD;AACrDlB,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAV,QAAAA,cAAc,GAAG,IAAjB;AACH;;AACD,UAAI0B,CAAC,CAACC,OAAF,KAAc,qCAAlB,EAAwD;AACpDlB,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAT,QAAAA,aAAa,GAAG,IAAhB;AACH;;AACD,UAAIyB,CAAC,CAACC,OAAF,KAAc,iCAAlB,EAAoD;AAChDlB,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAV,QAAAA,cAAc,GAAG,IAAjB;AACH;AACJ,KAlBY,CAAb;AAmBAS,IAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ;AAEH,GAlCD;;AAqCA,sBACI;AAAA,2BACA;AAAM,MAAA,SAAS,EAAC,QAAhB;AACA,MAAA,QAAQ,EAAGP,CAAD,IAAMI,cAAc,CAACJ,CAAD,CAD9B;AAAA,8BAII;AACA;AACA,QAAA,SAAS,EAAG,GAAElB,iBAAiB,GAAG,yBAAH,GAA+B,oBAAqB,EAFnF;AAGA,QAAA,QAAQ,EAAIkB,CAAD,IAAOD,mBAAmB,CAACC,CAAD,CAHrC;AAIA,QAAA,OAAO,EAAEb,mBAJT;AAKA,QAAA,IAAI,EAAC,MALL;AAMA,QAAA,YAAY,EAAC,KANb;AAOA,QAAA,IAAI,EAAC,UAPL;AAQA,QAAA,WAAW,EAAC,iBARZ;AASA,QAAA,QAAQ,MATR;AAUA,QAAA,KAAK,EAAEO,cAAc,CAACE;AAVtB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAgBI;AACA;AACA,QAAA,SAAS,EAAG,GAAEb,cAAc,GAAG,sBAAH,GAA4B,iBAAkB,EAF1E;AAGA,QAAA,QAAQ,EAAIiB,CAAD,IAAOD,mBAAmB,CAACC,CAAD,CAHrC;AAIA,QAAA,OAAO,EAAEZ,gBAJT;AAKA,QAAA,IAAI,EAAC,MALL;AAMA,QAAA,YAAY,EAAC,KANb;AAOA,QAAA,IAAI,EAAC,OAPL;AAQA,QAAA,WAAW,EAAC,uBARZ;AASA,QAAA,QAAQ,MATR;AAUA,QAAA,KAAK,EAAEM,cAAc,CAACG;AAVtB;AAAA;AAAA;AAAA;AAAA,cAhBJ,eA6BI;AACA;AACA,QAAA,SAAS,EAAG,GAAEb,aAAa,GAAG,qBAAH,GAA2B,gBAAiB,EAFvE;AAGA,QAAA,QAAQ,EAAIgB,CAAD,IAAOD,mBAAmB,CAACC,CAAD,CAHrC;AAIA,QAAA,OAAO,EAAEX,eAJT;AAKA,QAAA,IAAI,EAAC,MALL;AAMA,QAAA,YAAY,EAAC,KANb;AAOA,QAAA,IAAI,EAAC,MAPL;AAQA,QAAA,WAAW,EAAC,QARZ;AASA,QAAA,QAAQ,MATR;AAUA,QAAA,KAAK,EAAEK,cAAc,CAACI;AAVtB;AAAA;AAAA;AAAA;AAAA,cA7BJ,eA0CI;AACA,QAAA,OAAO,EAAGE,CAAD,IAAOI,cAAc,CAACJ,CAAD,CAD9B;AAEA,QAAA,IAAI,EAAC,QAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAkDH,CAxHD;;GAAMf,mB;;KAAAA,mB;AA0HN,eAAeA,mBAAf","sourcesContent":["\nimport React, { useState } from 'react'\nlet array = []\nlet flagFullNameError = false\nlet flagEmailError = false\nlet flagCityError = false\n\nconst InterestedUsersForm = ({ \n    handlingSubmitInterestedUser,\n    // fullNameError,\n    // emailError,\n    // cityError,\n    toggleFullNameError,\n    toggleEmailError,\n    toggleCityError,\n    flag,\n    errorData\n}) => {\n    // console.log(fullNameError)\n    // console.log(emailError)\n    // console.log(cityError)\n    \n\n    console.log(errorData)\n\n    const [ interestedUser , setInterestedUser ] = useState({\n        fullName: '',\n        email: '',\n        city: ''   \n    })\n    \n\n    \n    const handlingInputChange = (e) => {\n        setInterestedUser({\n            ...interestedUser, [e.target.name]: e.target.value\n        })\n        console.log(interestedUser)\n    }\n    \n    const handlingSubmit = async(e) => {\n        \n        e.preventDefault()\n        const response  = await handlingSubmitInterestedUser(interestedUser)\n        console.log(response)\n        if (response === 201){\n            setInterestedUser({\n                fullName: '',\n                email: '',\n                city: ''\n            })\n        }\n        array = errorData\n        const test = array.map((x) => {\n            console.log(x.message)\n            if (x.message === \"\\\"fullName\\\" is not allowed to be empty\"){\n                console.log('pasa por el nuevo fullNameError')\n                flagFullNameError = true\n            }\n            if (x.message === \"\\\"email\\\" is not allowed to be empty\"){\n                console.log('pasa por el nuevo emailError')\n                flagEmailError = true\n            }\n            if (x.message === \"\\\"city\\\" is not allowed to be empty\"){\n                console.log('pasa por el nuevo cityError')\n                flagCityError = true\n            }\n            if (x.message === \"\\\"email\\\" must be a valid email\"){\n                console.log('pasa por emailError 2')\n                flagEmailError = true\n            }\n        })\n        console.log(test)\n        \n    }\n\n    \n    return (\n        <>\n        <form className=\"form-1\"  \n        onSubmit={(e)=> handlingSubmit(e)}\n        >\n            \n            <input\n            // className={`${fullNameError ? 'form1InputFullNameError' : 'form1InputFullName'}`}\n            className={`${flagFullNameError ? 'form1InputFullNameError' : 'form1InputFullName'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            onFocus={toggleFullNameError}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"fullName\" \n            placeholder=\"Nombre completo\"\n            required\n            value={interestedUser.fullName}\n            />\n            <input\n            // className={`${emailError ? 'form1InputEmailError' : 'form1InputEmail'}`}\n            className={`${flagEmailError ? 'form1InputEmailError' : 'form1InputEmail'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            onFocus={toggleEmailError}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"email\" \n            placeholder=\"Correo electrónico\"\n            required\n            value={interestedUser.email}\n                \n            />\n            <input\n            // className={`${cityError ? 'form1InputCityError' : 'form1InputCity'}`}\n            className={`${flagCityError ? 'form1InputCityError' : 'form1InputCity'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            onFocus={toggleCityError}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"city\" \n            placeholder=\"Ciudad\"\n            required\n            value={interestedUser.city}\n            \n            />\n            <button\n            onClick={(e) => handlingSubmit(e) } \n            type=\"submit\">Enviar</button>  \n        </form>\n        </>\n    )\n}\n\nexport default InterestedUsersForm"]},"metadata":{},"sourceType":"module"}