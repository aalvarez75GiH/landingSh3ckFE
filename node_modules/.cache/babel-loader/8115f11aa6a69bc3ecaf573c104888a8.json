{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/dropDownList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MdKeyboardArrowDown } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropDownList = ({\n  onChange,\n  city,\n  selected,\n  setSelected,\n  options\n}) => {\n  _s();\n\n  const [isActive, setIsActive] = useState(false); // const [ selected, setSelected ] = useState('') \n  // const options = ['Caracas', 'Barquisimeto', 'Valencia', 'Maracaibo']\n\n  const toggleDropDownList = () => {\n    setIsActive(!isActive);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-btn\",\n      onClick: toggleDropDownList,\n      children: [selected, /*#__PURE__*/_jsxDEV(MdKeyboardArrowDown, {\n        className: \"arrowDown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-content\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => {\n          setSelected(option);\n          setIsActive(false);\n        },\n        className: \"dropdown-item\",\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DropDownList, \"+oN8n9zeDh0J01XdQQdKuvlp2Lw=\");\n\n_c = DropDownList;\nexport default DropDownList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDownList\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/dropDownList.js"],"names":["React","useState","MdKeyboardArrowDown","DropDownList","onChange","city","selected","setSelected","options","isActive","setIsActive","toggleDropDownList","map","option","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,mBAAT,QAAoC,gBAApC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAClBC,EAAAA,QADkB;AAElBC,EAAAA,IAFkB;AAGlBC,EAAAA,QAHkB;AAIlBC,EAAAA,WAJkB;AAKlBC,EAAAA;AALkB,CAAD,KAOf;AAAA;;AAEF,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C,CAFE,CAGF;AACA;;AACA,QAAMU,kBAAkB,GAAG,MAAM;AAC7BD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AACA,MAAA,OAAO,EAAEE,kBADT;AAAA,iBAGKL,QAHL,eAII,QAAC,mBAAD;AACA,QAAA,SAAS,EAAC;AADV;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EASMG,QAAQ,iBACN;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACKD,OAAO,CAACI,GAAR,CAAYC,MAAM,iBACf;AACA,QAAA,OAAO,EAAGC,CAAC,IAAI;AACXP,UAAAA,WAAW,CAACM,MAAD,CAAX;AACAH,UAAAA,WAAW,CAAC,KAAD,CAAX;AACH,SAJD;AAKA,QAAA,SAAS,EAAC,eALV;AAAA,kBAMKG;AANL;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAVR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA1CD;;GAAMV,Y;;KAAAA,Y;AA4CN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react'\nimport { MdKeyboardArrowDown } from 'react-icons/md'\n\nconst DropDownList = ({ \n    onChange, \n    city,\n    selected,\n    setSelected,\n    options \n\n}) => {\n\n    const [ isActive, setIsActive ] = useState(false)\n    // const [ selected, setSelected ] = useState('') \n    // const options = ['Caracas', 'Barquisimeto', 'Valencia', 'Maracaibo']\n    const toggleDropDownList = () => {\n        setIsActive(!isActive)\n    }\n\n    return (\n        <div className=\"dropdown\">\n            <div className=\"dropdown-btn\"\n            onClick={toggleDropDownList}\n            >\n                {selected}\n                <MdKeyboardArrowDown\n                className=\"arrowDown\"\n                />\n            </div>\n            { isActive && (\n                <div className=\"dropdown-content\">\n                    {options.map(option => (\n                        <div \n                        onClick={ e => { \n                            setSelected(option)\n                            setIsActive(false)\n                        }}    \n                        className=\"dropdown-item\">\n                            {option}\n                        </div>\n                    ))}  \n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default DropDownList\n"]},"metadata":{},"sourceType":"module"}