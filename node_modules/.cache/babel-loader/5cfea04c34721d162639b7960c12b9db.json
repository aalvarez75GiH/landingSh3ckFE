{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/dataSection/interestedUsersForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet array = [];\nlet flagFullNameError = false;\nlet flagEmailError = false;\nlet flagCityError = false;\n\nconst InterestedUsersForm = ({\n  handlingSubmitInterestedUser,\n  // fullNameError,\n  // emailError,\n  // cityError,\n  // toggleFullNameError,\n  // toggleEmailError,\n  // toggleCityError,\n  errorData\n}) => {\n  _s();\n\n  console.log(errorData);\n  let error1 = '';\n  let error2 = '';\n  let error3 = '';\n  const [interestedUser, setInterestedUser] = useState({\n    fullName: '',\n    email: '',\n    city: ''\n  });\n  const [fullNameError, setFullNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [cityError, setCityError] = useState(false);\n\n  const handlingInputChange = e => {\n    setInterestedUser({ ...interestedUser,\n      [e.target.name]: e.target.value\n    });\n    console.log(interestedUser);\n  };\n\n  const gettingErrorsMessages = async () => {\n    const test = errorData.map(x => {\n      if (x.message === \"\\\"fullName\\\" is not allowed to be empty\") {\n        console.log('error 1');\n        error1 = '1';\n      }\n\n      if (x.message === \"\\\"email\\\" is not allowed to be empty\") {\n        console.log('error 2');\n        error2 = '2';\n      }\n\n      if (x.message === \"\\\"city\\\" is not allowed to be empty\") {\n        console.log('error 1');\n        error3 = '3';\n      }\n    });\n  };\n\n  const handlingSubmit = async e => {\n    gettingErrorsMessages();\n\n    try {\n      const response = await handlingSubmitInterestedUser(interestedUser);\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-1\",\n      onSubmit: e => handlingSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        // className={`${fullNameError ? 'form1InputFullNameError' : 'form1InputFullName'}`}\n        className: `${error1 === '1' ? 'form1InputFullNameError' : 'form1InputFullName'}`,\n        onChange: e => handlingInputChange(e) // onFocus={toggleFullNameError}\n        ,\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"fullName\",\n        placeholder: \"Nombre completo\",\n        required: true,\n        value: interestedUser.fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // className={`${emailError ? 'form1InputEmailError' : 'form1InputEmail'}`}\n        // className={`${flagEmailError ? 'form1InputEmailError' : 'form1InputEmail'}`}\n        className: `${error2 === '2' ? 'form1InputEmailError' : 'form1InputEmail'}`,\n        onChange: e => handlingInputChange(e) // onFocus={toggleEmailError}\n        ,\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"email\",\n        placeholder: \"Correo electr\\xF3nico\",\n        required: true,\n        value: interestedUser.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // className={`${cityError ? 'form1InputCityError' : 'form1InputCity'}`}\n        // className={`${flagCityError ? 'form1InputCityError' : 'form1InputCity'}`}\n        className: `${error3 === '3' ? 'form1InputCityError' : 'form1InputCity'}`,\n        onChange: e => handlingInputChange(e) // onFocus={toggleCityError}\n        ,\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"city\",\n        placeholder: \"Ciudad\",\n        required: true,\n        value: interestedUser.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handlingSubmit(e),\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(InterestedUsersForm, \"tQUXB1+aC+pWteLYID1J94lYsHk=\");\n\n_c = InterestedUsersForm;\nexport default InterestedUsersForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterestedUsersForm\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/dataSection/interestedUsersForm.js"],"names":["React","useState","useEffect","array","flagFullNameError","flagEmailError","flagCityError","InterestedUsersForm","handlingSubmitInterestedUser","errorData","console","log","error1","error2","error3","interestedUser","setInterestedUser","fullName","email","city","fullNameError","setFullNameError","emailError","setEmailError","cityError","setCityError","handlingInputChange","e","target","name","value","gettingErrorsMessages","test","map","x","message","handlingSubmit","response","error"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react'\nlet array = []\nlet flagFullNameError = false\nlet flagEmailError = false\nlet flagCityError = false\n\nconst InterestedUsersForm = ({ \n    handlingSubmitInterestedUser,\n    // fullNameError,\n    // emailError,\n    // cityError,\n    // toggleFullNameError,\n    // toggleEmailError,\n    // toggleCityError,\n    errorData\n}) => {\n  \n    console.log(errorData)\n    let error1=''\n    let error2=''\n    let error3=''\n\n    const [ interestedUser , setInterestedUser ] = useState({\n        fullName: '',\n        email: '',\n        city: ''   \n    })\n\n    const [ fullNameError, setFullNameError ] = useState(false)\n    const [ emailError, setEmailError ] = useState(false)\n    const [ cityError, setCityError ] = useState(false)\n    \n \n    const handlingInputChange = (e) => {\n        setInterestedUser({\n            ...interestedUser, [e.target.name]: e.target.value\n        })\n        console.log(interestedUser)\n    }\n\n    const gettingErrorsMessages = async() => {\n        const test = errorData.map( x => {\n            if (x.message === \"\\\"fullName\\\" is not allowed to be empty\" ){\n                console.log('error 1')\n                error1='1'\n            }\n            if (x.message === \"\\\"email\\\" is not allowed to be empty\" ){\n                console.log('error 2')\n                error2='2'\n            }\n            if (x.message === \"\\\"city\\\" is not allowed to be empty\" ){\n                console.log('error 1')\n                error3='3'\n            }\n            \n        })\n\n    }\n\n    const handlingSubmit = async(e) => {\n        gettingErrorsMessages()\n        try {\n            const response  = await handlingSubmitInterestedUser(interestedUser)       \n            console.log(response)\n            \n        } catch (error) {\n            console.log(error)\n        }\n            \n    }\n\n\n    \n    return (\n        <>\n        <form className=\"form-1\"  \n        onSubmit={(e)=> handlingSubmit(e)}\n        >\n            \n            <input\n            // className={`${fullNameError ? 'form1InputFullNameError' : 'form1InputFullName'}`}\n            className={`${error1 === '1' ? 'form1InputFullNameError' : 'form1InputFullName'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            // onFocus={toggleFullNameError}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"fullName\" \n            placeholder=\"Nombre completo\"\n            required\n            value={interestedUser.fullName}\n            />\n            <input\n            // className={`${emailError ? 'form1InputEmailError' : 'form1InputEmail'}`}\n            // className={`${flagEmailError ? 'form1InputEmailError' : 'form1InputEmail'}`}\n            className={`${error2 === '2' ? 'form1InputEmailError' : 'form1InputEmail'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            // onFocus={toggleEmailError}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"email\" \n            placeholder=\"Correo electrónico\"\n            required\n            value={interestedUser.email}\n                \n            />\n            <input\n            // className={`${cityError ? 'form1InputCityError' : 'form1InputCity'}`}\n            // className={`${flagCityError ? 'form1InputCityError' : 'form1InputCity'}`}\n            className={`${error3 === '3' ? 'form1InputCityError' : 'form1InputCity'}`}\n            onChange={ (e) => handlingInputChange(e)} \n            // onFocus={toggleCityError}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"city\" \n            placeholder=\"Ciudad\"\n            required\n            value={interestedUser.city}\n            \n            />\n            <button\n            onClick={(e) => handlingSubmit(e) } \n            type=\"submit\">Enviar</button>  \n        </form>\n        </>\n    )\n}\n\nexport default InterestedUsersForm"]},"metadata":{},"sourceType":"module"}