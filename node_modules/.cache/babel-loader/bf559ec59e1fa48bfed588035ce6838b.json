{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/interestedUserForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  fullName: yup.string().min(3).max(100).required('Debes colocar tu nombre completo'),\n  email: yup.string().email('Por favor introduce una dirección de email válida').required(),\n  city: yup.string().min(3, 'Por favor introduce la ciudad').max(100, 'Por favor introduce la ciudad').required()\n});\n\nconst InterestedUserForm = () => {\n  _s();\n\n  const onSubmit = values => {\n    alert(JSON.stringify(values));\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      fullName: \"\",\n      email: \"\",\n      city: \"\"\n    },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema\n  }); // console.log(formik.values)\n\n  console.log(formik.errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"boxContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"formContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        name: \"fullName\",\n        placeholder: \"Nombre completo\",\n        type: \"text\",\n        value: formik.values.fullName,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        name: \"email\",\n        placeholder: \"Correo electr\\xF3nico\",\n        type: \"text\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        name: \"city\",\n        placeholder: \"Ciudad\",\n        type: \"text\",\n        value: formik.values.city,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InterestedUserForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = InterestedUserForm;\nexport default InterestedUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterestedUserForm\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/interestedUserForm.js"],"names":["React","useFormik","yup","validationSchema","object","fullName","string","min","max","required","email","city","InterestedUserForm","onSubmit","values","alert","JSON","stringify","formik","initialValues","validateOnBlur","console","log","errors","handleSubmit","handleChange","handleBlur"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAIA,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,MAAJ,CAAW;AAChCC,EAAAA,QAAQ,EAAEH,GAAG,CAACI,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,QAA7B,CAAsC,kCAAtC,CADsB;AAEhCC,EAAAA,KAAK,EAAER,GAAG,CAACI,MAAJ,GAAaI,KAAb,CAAmB,mDAAnB,EAAwED,QAAxE,EAFyB;AAGhCE,EAAAA,IAAI,EAAET,GAAG,CAACI,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoB,+BAApB,EAAqDC,GAArD,CAAyD,GAAzD,EAA8D,+BAA9D,EAA+FC,QAA/F;AAH0B,CAAX,CAAzB;;AAOA,MAAMG,kBAAkB,GAAG,MAAM;AAAA;;AAE7B,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzBC,IAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,CAAD,CAAL;AACH,GAFD;;AAIA,QAAMI,MAAM,GAAGjB,SAAS,CAAC;AACrBkB,IAAAA,aAAa,EAAE;AACXd,MAAAA,QAAQ,EAAE,EADC;AAEXK,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,IAAI,EAAE;AAHK,KADM;AAMrBS,IAAAA,cAAc,EAAE,IANK;AAOrBP,IAAAA,QAPqB;AAQrBV,IAAAA,gBAAgB,EAAEA;AARG,GAAD,CAAxB,CAN6B,CAkB7B;;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,MAAnB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACI;AACA,MAAA,QAAQ,EAAEL,MAAM,CAACM,YADjB;AAEA,MAAA,SAAS,EAAC,eAFV;AAAA,8BAGI;AACA,QAAA,SAAS,EAAC,OADV;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,WAAW,EAAC,iBAHZ;AAIA,QAAA,IAAI,EAAC,MAJL;AAKA,QAAA,KAAK,EAAEN,MAAM,CAACJ,MAAP,CAAcT,QALrB;AAMA,QAAA,QAAQ,EAAEa,MAAM,CAACO,YANjB;AAOA,QAAA,MAAM,EAAEP,MAAM,CAACQ;AAPf;AAAA;AAAA;AAAA;AAAA,cAHJ,eAYI;AACA,QAAA,SAAS,EAAC,OADV;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,WAAW,EAAC,uBAHZ;AAIA,QAAA,IAAI,EAAC,MAJL;AAKA,QAAA,KAAK,EAAER,MAAM,CAACJ,MAAP,CAAcJ,KALrB;AAMA,QAAA,QAAQ,EAAEQ,MAAM,CAACO,YANjB;AAOA,QAAA,MAAM,EAAEP,MAAM,CAACQ;AAPf;AAAA;AAAA;AAAA;AAAA,cAZJ,eAqBI;AACA,QAAA,SAAS,EAAC,OADV;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,WAAW,EAAC,QAHZ;AAIA,QAAA,IAAI,EAAC,MAJL;AAKA,QAAA,KAAK,EAAER,MAAM,CAACJ,MAAP,CAAcH,IALrB;AAMA,QAAA,QAAQ,EAAEO,MAAM,CAACO,YANjB;AAOA,QAAA,MAAM,EAAEP,MAAM,CAACQ;AAPf;AAAA;AAAA;AAAA;AAAA,cArBJ,eA8BI;AACA,QAAA,IAAI,EAAC,QADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH,CA5DD;;GAAMd,kB;UAMaX,S;;;KANbW,kB;AA8DN,eAAeA,kBAAf","sourcesContent":["import React from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup' \n\n\n\nconst validationSchema = yup.object({\n    fullName: yup.string().min(3).max(100).required('Debes colocar tu nombre completo'),\n    email: yup.string().email('Por favor introduce una dirección de email válida').required(),\n    city: yup.string().min(3, 'Por favor introduce la ciudad').max(100, 'Por favor introduce la ciudad').required(),   \n})\n\n\nconst InterestedUserForm = () => {\n\n    const onSubmit = (values) => {\n        alert(JSON.stringify(values))\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            fullName: \"\",\n            email: \"\",\n            city: \"\"\n        },\n        validateOnBlur: true,\n        onSubmit,\n        validationSchema: validationSchema\n\n    })\n\n    // console.log(formik.values)\n    console.log(formik.errors)\n\n    return (\n        <div className=\"boxContainer\">\n            <form \n            onSubmit={formik.handleSubmit}\n            className=\"formContainer\">\n                <input\n                className=\"input\"\n                name=\"fullName\"\n                placeholder=\"Nombre completo\" \n                type=\"text\" \n                value={formik.values.fullName}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                />\n                <input\n                className=\"input\"\n                name=\"email\"\n                placeholder=\"Correo electrónico\" \n                type=\"text\" \n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                />\n                <input\n                className=\"input\"\n                name=\"city\"\n                placeholder=\"Ciudad\" \n                type=\"text\" \n                value={formik.values.city}\n                onChange={formik.handleChange}                \n                onBlur={formik.handleBlur}\n                />\n                <button\n                type=\"submit\"\n                >Enviar</button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default InterestedUserForm\n"]},"metadata":{},"sourceType":"module"}