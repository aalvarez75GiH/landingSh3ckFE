{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/views/home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NavBar from '../components/navBar/navBar';\nimport SideBar from '../components/sideBar/sideBar';\nimport LoginSideBar from '../components/loginSideBar/loginSideBar'; // import StyledSideBar from '../components/sideBar/styledSideBar'\n\nimport HeroSection from '../components/heroSection/heroSection'; // import StyledNavBar from '../components/navBar/styledNavbar'\n// import StyledHeroSection from '../components/heroSection/styledHeroSection'\n\nimport VideoSection from '../components/videoSection/videoSection';\nimport HiwSection from '../components/hiwSection/hiwSection';\nimport { infoHero, infoVideo, infoHIW, infoContact } from '../utils/data';\nimport useMobilDetection from '../utils/mobilDetection';\nimport useMobilDetect from '../utils/mobilHook';\nimport NavBarMobil from '../components/navBar/navBarMobil';\nimport ContactSection from '../components/contactSection/contactSection'; // import DataSection from '../components/dataSection/dataSection'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState('');\n  const [sideBarOpen, setSideBarOpen] = useState(false);\n  const mobil = useMobilDetect();\n  const mobil2 = useMobilDetection();\n  const url_userLogin = \"http://localhost:5000/api/users/login\";\n  useEffect(() => {\n    const getToken = async () => {\n      const token = localStorage.getItem('SH3CK_TOKEN');\n\n      if (token) {\n        const response = await axios.get('http://localhost:5000/api/users/me', {\n          headers: {\n            // 'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(response.data);\n        setCurrentUser(response.data);\n        return setLoggedIn(true);\n      }\n\n      setLoggedIn(false);\n    };\n\n    getToken();\n  }, []);\n\n  const handlingSubmitLoginUser = async user => {\n    try {\n      const {\n        data\n      } = await axios.post(url_userLogin, user);\n      console.log(data);\n      localStorage.setItem('SH3CK_TOKEN', data.token); // ******************************************\n\n      const response = await axios.get('http://localhost:5000/api/users/me', {\n        headers: {\n          // 'Content-Type': 'application/json',\n          Authorization: `Bearer ${data.token}`\n        }\n      });\n      console.log(response.data);\n      setCurrentUser(response.data); // ********************************************\n\n      setLoggedIn(true);\n      setSideBarOpen(false);\n      console.log('Usuaurio encontrado y hace login');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handlingSubmitLogOutUser = () => {\n    localStorage.removeItem('SH3CK_TOKEN');\n    setLoggedIn(false);\n    setSideBarOpen(false);\n  };\n\n  const toggleSideBar = () => {\n    console.log('this is toggle...');\n    setIsOpen(!isOpen);\n  };\n\n  const toggleLoginSideBar = () => {\n    console.log('this is toggle on LoginSideBar...');\n    setSideBarOpen(!sideBarOpen);\n  }; // const onLogin = (e) => {\n  //     e.preventDefault()\n  //     setLoggedIn(loggedIn)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LoginSideBar, {\n      handlingSubmitLoginUser: handlingSubmitLoginUser,\n      sideBarOpen: sideBarOpen,\n      toggleLoginSideBar: toggleLoginSideBar,\n      loggedIn: loggedIn,\n      handlingSubmitLogOutUser: handlingSubmitLogOutUser,\n      username: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideBar, {\n      isOpen: isOpen,\n      toggleSideBar: toggleSideBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), mobil2.screenWidth <= 1098 || mobil ? /*#__PURE__*/_jsxDEV(NavBarMobil, {\n      toggleSideBar: toggleSideBar,\n      username: currentUser,\n      login: loggedIn // onLogin={ onLogin }\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(NavBar, {\n      toggleLoginSideBar: toggleLoginSideBar,\n      username: currentUser,\n      login: loggedIn // onLogin={ onLogin }\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(HeroSection, { ...infoHero\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VideoSection, { ...infoVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HiwSection, { ...infoHIW\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContactSection, { ...infoContact,\n      loggedIn: loggedIn,\n      handlingSubmitLoginUser: handlingSubmitLoginUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"rnkIYpKWK4DjrYuJ2x2GzFWFRbM=\", false, function () {\n  return [useMobilDetect, useMobilDetection];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/views/home.js"],"names":["React","useState","useEffect","axios","NavBar","SideBar","LoginSideBar","HeroSection","VideoSection","HiwSection","infoHero","infoVideo","infoHIW","infoContact","useMobilDetection","useMobilDetect","NavBarMobil","ContactSection","Home","isOpen","setIsOpen","loggedIn","setLoggedIn","currentUser","setCurrentUser","sideBarOpen","setSideBarOpen","mobil","mobil2","url_userLogin","getToken","token","localStorage","getItem","response","get","headers","Authorization","console","log","data","handlingSubmitLoginUser","user","post","setItem","error","handlingSubmitLogOutUser","removeItem","toggleSideBar","toggleLoginSideBar","screenWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../components/navBar/navBar'\nimport SideBar from '../components/sideBar/sideBar'\nimport LoginSideBar from '../components/loginSideBar/loginSideBar'\n// import StyledSideBar from '../components/sideBar/styledSideBar'\nimport HeroSection from '../components/heroSection/heroSection'\n// import StyledNavBar from '../components/navBar/styledNavbar'\n// import StyledHeroSection from '../components/heroSection/styledHeroSection'\nimport VideoSection from '../components/videoSection/videoSection'\nimport HiwSection from '../components/hiwSection/hiwSection'\nimport { infoHero, infoVideo, infoHIW, infoContact  } from '../utils/data'\nimport useMobilDetection from '../utils/mobilDetection'\nimport useMobilDetect from '../utils/mobilHook'\nimport NavBarMobil from '../components/navBar/navBarMobil'\nimport ContactSection from '../components/contactSection/contactSection'\n// import DataSection from '../components/dataSection/dataSection'\n\n\nconst Home = () => {\n\n    const [ isOpen, setIsOpen ] = useState(false)\n    const [ loggedIn, setLoggedIn ] = useState(false)\n    const [currentUser, setCurrentUser ] = useState('')\n    const [ sideBarOpen, setSideBarOpen ] = useState(false)\n    \n    \n    \n    const mobil = useMobilDetect()\n    const mobil2 = useMobilDetection()\n    const url_userLogin = \"http://localhost:5000/api/users/login\"\n    \n    useEffect(() => {\n        const getToken = async() => {\n            const token = localStorage.getItem('SH3CK_TOKEN')\n            if (token){\n                const response = await axios.get('http://localhost:5000/api/users/me', {\n                    headers:{\n                        // 'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}` \n                    } \n                })\n                console.log(response.data)\n                setCurrentUser(response.data)\n                return setLoggedIn(true)\n            }\n            setLoggedIn(false)\n        }   \n        getToken()\n\n    },[])\n\n    const handlingSubmitLoginUser = async(user) => {\n            try {\n                const { data } = await axios.post(url_userLogin, user)\n                console.log(data)\n                localStorage.setItem('SH3CK_TOKEN', data.token)\n                // ******************************************\n                const response = await axios.get('http://localhost:5000/api/users/me', {\n                    headers:{\n                        // 'Content-Type': 'application/json',\n                        Authorization: `Bearer ${data.token}` \n                    } \n                })\n                console.log(response.data)\n                setCurrentUser(response.data)\n                // ********************************************\n                setLoggedIn(true) \n                setSideBarOpen(false)\n                console.log('Usuaurio encontrado y hace login')    \n            } catch (error) {\n                console.log(error)\n            }\n        \n    }\n\n    const handlingSubmitLogOutUser = () => {\n        localStorage.removeItem('SH3CK_TOKEN')\n        setLoggedIn(false)\n        setSideBarOpen(false)\n    }\n\n    \n    const toggleSideBar = () => {\n        console.log('this is toggle...')\n        setIsOpen(!isOpen)\n        \n    } \n    const toggleLoginSideBar = () => {\n        console.log('this is toggle on LoginSideBar...')\n        setSideBarOpen(!sideBarOpen)\n        \n    } \n    // const onLogin = (e) => {\n    //     e.preventDefault()\n    //     setLoggedIn(loggedIn)\n    // }\n\n    \n    return (\n        <>\n            <LoginSideBar\n            handlingSubmitLoginUser={handlingSubmitLoginUser} \n            sideBarOpen={ sideBarOpen } \n            toggleLoginSideBar={ toggleLoginSideBar }\n            loggedIn={loggedIn}\n            handlingSubmitLogOutUser={handlingSubmitLogOutUser}\n            username={currentUser}\n            \n            />\n            <SideBar isOpen={ isOpen } toggleSideBar={ toggleSideBar }/>\n            { mobil2.screenWidth <= 1098 || mobil ?  \n                <NavBarMobil \n                toggleSideBar={ toggleSideBar }  \n                username={currentUser}\n                login={ loggedIn }\n                // onLogin={ onLogin }\n            /> : <NavBar\n            toggleLoginSideBar={toggleLoginSideBar} \n            username={currentUser}\n            login={ loggedIn }\n            // onLogin={ onLogin }\n        />\n            }\n            <HeroSection {...infoHero} />\n            <VideoSection {...infoVideo}/>\n            <HiwSection {...infoHIW}/>\n            <ContactSection \n            {...infoContact} \n            loggedIn={loggedIn}\n            handlingSubmitLoginUser={ handlingSubmitLoginUser}\n            />\n            {/* <DataSection {...infoData} /> */}\n        </>\n    )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}