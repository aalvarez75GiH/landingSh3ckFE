{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/views/home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport NavBar from '../components/navBar/navBar';\nimport SideBar from '../components/sideBar/sideBar'; // import StyledSideBar from '../components/sideBar/styledSideBar'\n\nimport HeroSection from '../components/heroSection/heroSection'; // import StyledNavBar from '../components/navBar/styledNavbar'\n// import StyledHeroSection from '../components/heroSection/styledHeroSection'\n\nimport VideoSection from '../components/videoSection/videoSection';\nimport HiwSection from '../components/hiwSection/hiwSection';\nimport { infoHero, infoVideo, infoData } from '../utils/data';\nimport { infoHiW } from '../components/hiwSection/data';\nimport useMobilDetection from '../utils/mobilDetection';\nimport useMobilDetect from '../utils/mobilHook';\nimport NavBarMobil from '../components/navBar/navBarMobil';\nimport DataSection from '../components/dataSection/dataSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet array = [];\n\nconst Home = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [login, setLogin] = useState(false);\n  const [error, setError] = useState(null);\n  let fullNameError = false;\n  let emailError = false;\n  let cityError = false; // const [ fullNameError, setFullNameError ] = useState(false)\n  // const [ emailError, setEmailError ] = useState(false)\n  // const [ cityError, setCityError ] = useState(false)\n\n  const url_users = \"http://localhost:5000/api/interestedUsers\";\n  const mobil = useMobilDetect();\n  const mobil2 = useMobilDetection();\n\n  const handlingSubmitInterestedUser = async interestedUser => {\n    try {\n      const response = await axios.post(url_users, interestedUser);\n\n      if (response.status === 201) {\n        console.log('Gracias por enviarnos tus datos, estaremos en contacto...');\n      }\n    } catch (error) {\n      const responseErrors = error.response.data;\n      console.log(responseErrors);\n      array = responseErrors;\n      console.log(array);\n      const test = array.map(x => {\n        if (x.message === \"fullName is not allowed to be empty\") {\n          fullNameError = true;\n          console.log(fullNameError); // setFullNameError(true)\n        }\n\n        if (x.message === \"email is not allowed to be empty\") {\n          // setEmailError(true)\n          emailError = true;\n          console.log(emailError);\n        }\n\n        if (x.message === \"city is not allowed to be empty\") {\n          // setCityError(true)\n          cityError = true;\n          console.log(cityError);\n        }\n      }); // if(error.response.data === 'Errors at the request: [\"fullName\" is not allowed to be empty]'){\n      //     console.log('Debes colocar tu nombre completo...')\n      // }else{\n      //     console.error(error.response.data)\n      //     showError(error.response.data)\n      // }\n    }\n  };\n\n  const showError = message => {\n    setError(message);\n    console.log(error);\n  };\n\n  const toggleSideBar = () => {\n    console.log('this is toggle...');\n    setIsOpen(!isOpen);\n  };\n\n  const onLogin = e => {\n    e.preventDefault();\n    setLogin(!login);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {\n      isOpen: isOpen,\n      toggleSideBar: toggleSideBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), mobil2.screenWidth <= 1098 || mobil ? /*#__PURE__*/_jsxDEV(NavBarMobil, {\n      toggleSideBar: toggleSideBar,\n      username: 'hola, arnoldo',\n      login: login,\n      onLogin: onLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(NavBar, {\n      toggleSideBar: toggleSideBar,\n      username: 'hola, arnoldo',\n      login: login,\n      onLogin: onLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(HeroSection, { ...infoHero\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VideoSection, { ...infoVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HiwSection, { ...infoHiW\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataSection, { ...infoData,\n      showError: showError,\n      handlingSubmitInterestedUser: handlingSubmitInterestedUser,\n      fullNameError: fullNameError,\n      emailError: emailError,\n      cityError: cityError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"+468ARs2ewL8rwgLw/m3Xq5sOYw=\", false, function () {\n  return [useMobilDetect, useMobilDetection];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/views/home.js"],"names":["React","useState","axios","NavBar","SideBar","HeroSection","VideoSection","HiwSection","infoHero","infoVideo","infoData","infoHiW","useMobilDetection","useMobilDetect","NavBarMobil","DataSection","array","Home","isOpen","setIsOpen","login","setLogin","error","setError","fullNameError","emailError","cityError","url_users","mobil","mobil2","handlingSubmitInterestedUser","interestedUser","response","post","status","console","log","responseErrors","data","test","map","x","message","showError","toggleSideBar","onLogin","e","preventDefault","screenWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport NavBar from '../components/navBar/navBar'\nimport SideBar from '../components/sideBar/sideBar'\n// import StyledSideBar from '../components/sideBar/styledSideBar'\nimport HeroSection from '../components/heroSection/heroSection'\n// import StyledNavBar from '../components/navBar/styledNavbar'\n// import StyledHeroSection from '../components/heroSection/styledHeroSection'\nimport VideoSection from '../components/videoSection/videoSection'\nimport HiwSection from '../components/hiwSection/hiwSection'\nimport { infoHero, infoVideo, infoData } from '../utils/data'\nimport { infoHiW  } from '../components/hiwSection/data'\nimport useMobilDetection from '../utils/mobilDetection'\nimport useMobilDetect from '../utils/mobilHook'\nimport NavBarMobil from '../components/navBar/navBarMobil'\nimport DataSection from '../components/dataSection/dataSection'\nlet array = []\n\n\nconst Home = () => {\n\n    const [ isOpen, setIsOpen ] = useState(false)\n    const [ login, setLogin ] = useState(false)\n    const [ error, setError ] = useState(null)\n    let fullNameError = false\n    let emailError = false\n    let cityError = false\n\n    // const [ fullNameError, setFullNameError ] = useState(false)\n    // const [ emailError, setEmailError ] = useState(false)\n    // const [ cityError, setCityError ] = useState(false)\n\n    const url_users = \"http://localhost:5000/api/interestedUsers\"\n    const mobil = useMobilDetect()\n    const mobil2 = useMobilDetection()\n    \n\n\n\n    const handlingSubmitInterestedUser = async(interestedUser) => {\n        try {\n            const response = await axios.post(url_users, interestedUser)\n            if (response.status === 201){\n                console.log('Gracias por enviarnos tus datos, estaremos en contacto...')\n            }\n            \n            }catch(error) {\n                const responseErrors = error.response.data\n                console.log(responseErrors)\n                array = responseErrors\n                console.log(array)\n                const test = array.map((x) => {\n                    if (x.message === \"fullName is not allowed to be empty\"){\n                        fullNameError = true \n                        console.log(fullNameError)\n                        // setFullNameError(true)\n                    }\n                    if (x.message === \"email is not allowed to be empty\"){\n                        // setEmailError(true)\n                        emailError = true\n                        console.log(emailError)\n                    }\n                    if (x.message === \"city is not allowed to be empty\"){\n                        // setCityError(true)\n                        cityError = true\n                        console.log(cityError)\n                    }\n                })\n\n                // if(error.response.data === 'Errors at the request: [\"fullName\" is not allowed to be empty]'){\n                //     console.log('Debes colocar tu nombre completo...')\n                // }else{\n                //     console.error(error.response.data)\n                //     showError(error.response.data)\n                // }\n            }\n    }\n\n    const showError = (message) => {\n        setError(message)\n        console.log(error)\n    }\n\n    const toggleSideBar = () => {\n        console.log('this is toggle...')\n        setIsOpen(!isOpen)\n        \n    } \n    const onLogin = (e) => {\n        e.preventDefault()\n        setLogin(!login)\n    }\n    return (\n        <>\n            <SideBar isOpen={ isOpen } toggleSideBar={ toggleSideBar }/>\n            { mobil2.screenWidth <= 1098 || mobil ?  \n                <NavBarMobil \n                toggleSideBar={ toggleSideBar }  \n                username={'hola, arnoldo'}\n                login={ login }\n                onLogin={ onLogin }\n            /> : <NavBar \n            toggleSideBar={ toggleSideBar }  \n            username={'hola, arnoldo'}\n            login={ login }\n            onLogin={ onLogin }\n        />\n            }\n            <HeroSection {...infoHero} />\n            <VideoSection {...infoVideo}/>\n            <HiwSection {...infoHiW}/>\n            <DataSection \n            {...infoData} \n            showError={showError}\n            handlingSubmitInterestedUser={handlingSubmitInterestedUser}\n            fullNameError={fullNameError}\n            emailError={emailError}\n            cityError={cityError}\n            />\n        </>\n    )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}