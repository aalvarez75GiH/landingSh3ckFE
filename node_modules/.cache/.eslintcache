[{"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/index.js":"1","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/App.js":"2","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/sideBar/sideBar.js":"3","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/navBar/styledNavbar.js":"4","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/navBar/styledNavBarElements.js":"5","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/views/home.js":"6","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/sideBar/styledSideBar.js":"7","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/sideBar/styledSideBarElements.js":"8","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/navBar/navBar.js":"9","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/heroSection/heroSection.js":"10","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/buttons/button.js":"11","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/heroSection/styledHeroSection.js":"12","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/heroSection/styledHeroSectionElements.js":"13","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/buttons/styledButton.js":"14","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/mobilDetection.js":"15","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/mobilHook.js":"16","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/videoSection/videoSection.js":"17","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/buttons/button2.js":"18","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/video.js":"19","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/navBar/navBarMobil.js":"20","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/data.js":"21","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/hiwSection/hiwSection.js":"22","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/loading.js":"23","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/contactSection.js":"24","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/interestedUserForm.js":"25","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/optionsForms.js":"26","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/registerForm.js":"27","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/loginForm.js":"28","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/formHeader.js":"29","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/loginSideBar/loginSideBar.js":"30","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/loginSideBar/loginSideBarForm.js":"31","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/logoutSideBar/logoutSideBar.js":"32","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/loadingSpinner.js":"33","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/notifications/NotificationBox.js":"34","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/notifications/notificationData.js":"35","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/mainSideBar/mainSideBar.js":"36","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/settingOffsets.js":"37","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/dropDownList.js":"38","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/checkSection.js":"39","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/footerSection/footerElements.js":"40","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/footerSection/styledFooterSection.js":"41","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/footerSection/footerSection.js":"42","/Users/p3rolix/code/landingSh3ckFE/src/index.js":"43","/Users/p3rolix/code/landingSh3ckFE/src/App.js":"44","/Users/p3rolix/code/landingSh3ckFE/src/views/home.js":"45","/Users/p3rolix/code/landingSh3ckFE/src/utils/data.js":"46","/Users/p3rolix/code/landingSh3ckFE/src/components/navBar/navBarMobil.js":"47","/Users/p3rolix/code/landingSh3ckFE/src/components/loginSideBar/loginSideBar.js":"48","/Users/p3rolix/code/landingSh3ckFE/src/components/hiwSection/hiwSection.js":"49","/Users/p3rolix/code/landingSh3ckFE/src/components/videoSection/videoSection.js":"50","/Users/p3rolix/code/landingSh3ckFE/src/components/navBar/navBar.js":"51","/Users/p3rolix/code/landingSh3ckFE/src/utils/mobilHook.js":"52","/Users/p3rolix/code/landingSh3ckFE/src/utils/mobilDetection.js":"53","/Users/p3rolix/code/landingSh3ckFE/src/components/mainSideBar/mainSideBar.js":"54","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/contactSection.js":"55","/Users/p3rolix/code/landingSh3ckFE/src/components/heroSection/heroSection.js":"56","/Users/p3rolix/code/landingSh3ckFE/src/components/footerSection/footerSection.js":"57","/Users/p3rolix/code/landingSh3ckFE/src/components/sideBar/sideBar.js":"58","/Users/p3rolix/code/landingSh3ckFE/src/components/loginSideBar/loginSideBarForm.js":"59","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/optionsForms.js":"60","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/interestedUserForm.js":"61","/Users/p3rolix/code/landingSh3ckFE/src/utils/settingOffsets.js":"62","/Users/p3rolix/code/landingSh3ckFE/src/components/video.js":"63","/Users/p3rolix/code/landingSh3ckFE/src/utils/loadingSpinner.js":"64","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/formHeader.js":"65","/Users/p3rolix/code/landingSh3ckFE/src/components/notifications/NotificationBox.js":"66","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/loginForm.js":"67","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/button.js":"68","/Users/p3rolix/code/landingSh3ckFE/src/components/notifications/notificationData.js":"69","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/dropDownList.js":"70","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/registerForm.js":"71","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/forgotPINForm.js":"72","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuthButtons.js":"73","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/applications.js":"74","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuth3.js":"75","/Users/p3rolix/code/landingSh3ckFE/src/views/homeTest.js":"76","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuth4.js":"77","/Users/p3rolix/code/landingSh3ckFE/src/views/homeTest2.js":"78","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuth5.js":"79","/Users/p3rolix/code/landingSh3ckFE/src/views/homeTest3.js":"80","/Users/p3rolix/code/landingSh3ckFE/src/components/nextStepSection.js/nextStepSection.js":"81","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/contactSectionTest.js":"82","/Users/p3rolix/code/landingSh3ckFE/src/components/checkSection/checkSection.js":"83","/Users/p3rolix/code/landingSh3ckFE/src/components/navBar/navBarForCS.js":"84"},{"size":218,"mtime":1633401436376,"results":"85","hashOfConfig":"86"},{"size":285,"mtime":1634526310052,"results":"87","hashOfConfig":"86"},{"size":1595,"mtime":1633701790024,"results":"88","hashOfConfig":"86"},{"size":2707,"mtime":1633702018208,"results":"89","hashOfConfig":"86"},{"size":1921,"mtime":1633972356741,"results":"90","hashOfConfig":"86"},{"size":6702,"mtime":1639761944173,"results":"91","hashOfConfig":"86"},{"size":1394,"mtime":1633701787724,"results":"92","hashOfConfig":"86"},{"size":1990,"mtime":1633701785760,"results":"93","hashOfConfig":"86"},{"size":5393,"mtime":1636386875935,"results":"94","hashOfConfig":"86"},{"size":2881,"mtime":1639064859801,"results":"95","hashOfConfig":"86"},{"size":986,"mtime":1634231358420,"results":"96","hashOfConfig":"86"},{"size":2106,"mtime":1633974762680,"results":"97","hashOfConfig":"86"},{"size":3891,"mtime":1633976797134,"results":"98","hashOfConfig":"86"},{"size":679,"mtime":1633701804377,"results":"99","hashOfConfig":"86"},{"size":451,"mtime":1635603542963,"results":"100","hashOfConfig":"86"},{"size":463,"mtime":1634004977231,"results":"101","hashOfConfig":"86"},{"size":2636,"mtime":1636383728607,"results":"102","hashOfConfig":"86"},{"size":737,"mtime":1633979468768,"results":"103","hashOfConfig":"86"},{"size":295,"mtime":1634102755152,"results":"104","hashOfConfig":"86"},{"size":3639,"mtime":1639064888014,"results":"105","hashOfConfig":"86"},{"size":2216,"mtime":1635509828743,"results":"106","hashOfConfig":"86"},{"size":3815,"mtime":1636383858481,"results":"107","hashOfConfig":"86"},{"size":767,"mtime":1634656636767,"results":"108","hashOfConfig":"86"},{"size":8655,"mtime":1639761478231,"results":"109","hashOfConfig":"86"},{"size":3232,"mtime":1639065440783,"results":"110","hashOfConfig":"86"},{"size":787,"mtime":1635179653105,"results":"111","hashOfConfig":"86"},{"size":4107,"mtime":1639757205984,"results":"112","hashOfConfig":"86"},{"size":2593,"mtime":1639759335172,"results":"113","hashOfConfig":"86"},{"size":1736,"mtime":1639496379474,"results":"114","hashOfConfig":"86"},{"size":1669,"mtime":1636127383545,"results":"115","hashOfConfig":"86"},{"size":2147,"mtime":1635603911073,"results":"116","hashOfConfig":"86"},{"size":2057,"mtime":1635603476245,"results":"117","hashOfConfig":"86"},{"size":474,"mtime":1635433892853,"results":"118","hashOfConfig":"86"},{"size":3816,"mtime":1639422469746,"results":"119","hashOfConfig":"86"},{"size":1007,"mtime":1635692919317,"results":"120","hashOfConfig":"86"},{"size":3217,"mtime":1636206226529,"results":"121","hashOfConfig":"86"},{"size":2801,"mtime":1636386819185,"results":"122","hashOfConfig":"86"},{"size":1853,"mtime":1639064803530,"results":"123","hashOfConfig":"86"},{"size":717,"mtime":1639241546455,"results":"124","hashOfConfig":"86"},{"size":2032,"mtime":1639413422816,"results":"125","hashOfConfig":"86"},{"size":4527,"mtime":1639496379466,"results":"126","hashOfConfig":"86"},{"size":3872,"mtime":1639420095664,"results":"127","hashOfConfig":"86"},{"size":281,"mtime":1643902885062,"results":"128","hashOfConfig":"129"},{"size":474,"mtime":1644862574319,"results":"130","hashOfConfig":"129"},{"size":12700,"mtime":1644862846764,"results":"131","hashOfConfig":"129"},{"size":11764,"mtime":1645285326675,"results":"132","hashOfConfig":"129"},{"size":4870,"mtime":1644937194061,"results":"133","hashOfConfig":"129"},{"size":1855,"mtime":1644859698127,"results":"134","hashOfConfig":"129"},{"size":4246,"mtime":1640535910778,"results":"135","hashOfConfig":"129"},{"size":2867,"mtime":1640535278204,"results":"136","hashOfConfig":"129"},{"size":5826,"mtime":1644858804028,"results":"137","hashOfConfig":"129"},{"size":463,"mtime":1634004977231,"results":"138","hashOfConfig":"129"},{"size":451,"mtime":1635603542963,"results":"139","hashOfConfig":"129"},{"size":5076,"mtime":1645031013068,"results":"140","hashOfConfig":"129"},{"size":6158,"mtime":1644865618998,"results":"141","hashOfConfig":"129"},{"size":3153,"mtime":1640535251022,"results":"142","hashOfConfig":"129"},{"size":4837,"mtime":1640795331228,"results":"143","hashOfConfig":"129"},{"size":2797,"mtime":1640966131751,"results":"144","hashOfConfig":"129"},{"size":2916,"mtime":1644859720930,"results":"145","hashOfConfig":"129"},{"size":947,"mtime":1640616601260,"results":"146","hashOfConfig":"129"},{"size":3614,"mtime":1643902806070,"results":"147","hashOfConfig":"129"},{"size":4306,"mtime":1644937166596,"results":"148","hashOfConfig":"129"},{"size":295,"mtime":1634102755152,"results":"149","hashOfConfig":"129"},{"size":676,"mtime":1644855167213,"results":"150","hashOfConfig":"129"},{"size":3243,"mtime":1644941717313,"results":"151","hashOfConfig":"129"},{"size":8817,"mtime":1645030597447,"results":"152","hashOfConfig":"129"},{"size":4601,"mtime":1644934772558,"results":"153","hashOfConfig":"129"},{"size":986,"mtime":1634231358420,"results":"154","hashOfConfig":"129"},{"size":2714,"mtime":1645026875121,"results":"155","hashOfConfig":"129"},{"size":1826,"mtime":1643902771713,"results":"156","hashOfConfig":"129"},{"size":3786,"mtime":1644934727942,"results":"157","hashOfConfig":"129"},{"size":2834,"mtime":1644680918571,"results":"158","hashOfConfig":"129"},{"size":981,"mtime":1643558166638,"results":"159","hashOfConfig":"129"},{"size":2969,"mtime":1643649966545,"results":"160","hashOfConfig":"129"},{"size":1148,"mtime":1644339711046,"results":"161","hashOfConfig":"129"},{"size":10580,"mtime":1644369714169,"results":"162","hashOfConfig":"129"},{"size":898,"mtime":1644329086891,"results":"163","hashOfConfig":"129"},{"size":10886,"mtime":1644789460005,"results":"164","hashOfConfig":"129"},{"size":1681,"mtime":1644852583068,"results":"165","hashOfConfig":"129"},{"size":16846,"mtime":1645204909938,"results":"166","hashOfConfig":"129"},{"size":4450,"mtime":1644867358931,"results":"167","hashOfConfig":"129"},{"size":5647,"mtime":1644945269525,"results":"168","hashOfConfig":"129"},{"size":1386,"mtime":1645285376803,"results":"169","hashOfConfig":"129"},{"size":1589,"mtime":1645201341461,"results":"170","hashOfConfig":"129"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},"17eu4l2",{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"180"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"173"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},"1xaydh6",{"filePath":"264","messages":"265","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"263"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"263"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"263"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"263"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"263"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"263"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"263"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"263"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"336"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"263"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"263"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"263"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"263"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"263"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"263"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"263"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"263"},"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/index.js",[],["366","367"],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/App.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/sideBar/sideBar.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/navBar/styledNavbar.js",[],["368","369"],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/navBar/styledNavBarElements.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/views/home.js",["370"],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/sideBar/styledSideBar.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/sideBar/styledSideBarElements.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/navBar/navBar.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/heroSection/heroSection.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/buttons/button.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/heroSection/styledHeroSection.js",["371"],"import React, { useState } from 'react'\nimport useMobilDetection from '../../utils/mobilDetection'\nimport useMobilDetect from '../../utils/mobilHook'\nimport { \n    HeroContainer,\n    HeroBG,\n    ImageBG,\n    HeroContent,\n    HeroH1,\n    HeroBtnWrapper,\n    HeroContainerMobil,\n    HeroBGMobil,\n    HeroContentMobil,\n    HeroH1Mobil,\n    HeroPMobil,\n    HeroBtnWrapperMobil\n\n} from './styledHeroSectionElements'\nimport Image from '../../images/pexels-andrea-piacquadio-3928268.jpg'\nimport { StyledButton } from '../buttons/styledButton'\n\n\nconst StyledHeroSection = () => {\nconst mobil = useMobilDetect()\nconst mobil2 = useMobilDetection()\n    \nif (mobil2.screenWidth < 768 || mobil) {\n    return (\n        <HeroContainerMobil>\n            <HeroContentMobil>\n                <HeroH1Mobil>Compra sin miedo por internet</HeroH1Mobil>\n                <HeroPMobil>Nosotros chequeamos los productos que tu quieres comprar...</HeroPMobil>\n                <HeroBtnWrapperMobil>\n                    <StyledButton\n                    primary={ true }\n                    dark={ true }\n                    >\n                        Ver video\n                    </StyledButton>\n                </HeroBtnWrapperMobil>\n            </HeroContentMobil>\n            <HeroBGMobil>\n                <ImageBG\n                src={Image}\n                />\n            </HeroBGMobil>\n        </HeroContainerMobil>\n    )\n}\nif (mobil2.screenWidth > 768 || !mobil) {\n    return (\n        <HeroContainer>\n            <HeroBG>\n                <ImageBG\n                src={Image}\n                />\n            </HeroBG>\n            <HeroContent>\n                <HeroH1>Somos la nueva forma de comprar sin miedo</HeroH1>\n                <HeroH1>por internet</HeroH1>\n                <HeroBtnWrapper>\n                    <StyledButton\n                    primary={ true }\n                    dark={ true }\n                    >\n                        Ver video\n                    </StyledButton>\n                </HeroBtnWrapper>\n            </HeroContent>\n        </HeroContainer>\n    )\n}\n    \n}\n\nexport default StyledHeroSection\n","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/heroSection/styledHeroSectionElements.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/buttons/styledButton.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/mobilDetection.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/mobilHook.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/videoSection/videoSection.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/buttons/button2.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/video.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/navBar/navBarMobil.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/data.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/hiwSection/hiwSection.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/loading.js",[],["372","373"],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/contactSection.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/interestedUserForm.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/optionsForms.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/registerForm.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/loginForm.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/formHeader.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/loginSideBar/loginSideBar.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/loginSideBar/loginSideBarForm.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/logoutSideBar/logoutSideBar.js",[],["374","375"],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/loadingSpinner.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/notifications/NotificationBox.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/notifications/notificationData.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/mainSideBar/mainSideBar.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/settingOffsets.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/dropDownList.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/checkSection.js",["376"],"import React from 'react'\nimport Button from '../buttons/button'\n\nconst CheckSection = () => {\n    return (\n        <div className=\"checkSectionContainer\">\n            <div className=\"checkSection-formTitle\">\n                <h1 className=\"checkSection-title\">Estas listo para Chequear un producto? </h1>\n            </div>\n\n            <div className=\"checkSection-BtnWrap\">\n                    <button className=\"checkSectionBtn-toCheck\">\n                        Si, Quiero chequear un producto\n                    </button>\n            </div>\n            <div className=\"checkSection-notNow\">   \n                <p>No ahora</p>\n            </div>\n            \n        </div>\n    )   \n}\n\nexport default CheckSection","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/footerSection/footerElements.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/footerSection/styledFooterSection.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/footerSection/footerSection.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/index.js",[],["377","378"],"/Users/p3rolix/code/landingSh3ckFE/src/App.js",["379","380","381"],"import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Home from './views/home'\nimport HomeTest from './views/homeTest'\nimport HomeTest2 from './views/homeTest2'\nimport HomeTest3 from './views/homeTest3'\n\n// import './App.css'\nimport './sh3ck.css'\n// import './main.css'\n\nconst App = () => {\n    return (\n        <Router>\n            {/* <GoogleAuth5/> */}\n           <HomeTest3/> \n        </Router>\n        \n    )\n}\n\nexport default App\n","/Users/p3rolix/code/landingSh3ckFE/src/views/home.js",["382","383","384"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../components/navBar/navBar'\nimport SideBar from '../components/sideBar/sideBar'\nimport LoginSideBar from '../components/loginSideBar/loginSideBar'\nimport MainSideBar from '../components/mainSideBar/mainSideBar'\nimport HeroSection from '../components/heroSection/heroSection'\nimport VideoSection from '../components/videoSection/videoSection'\nimport HiwSection from '../components/hiwSection/hiwSection'\nimport useMobilDetection from '../utils/mobilDetection'\nimport useMobilDetect from '../utils/mobilHook'\nimport NavBarMobil from '../components/navBar/navBarMobil'\nimport ContactSection from '../components/contactSection/contactSection'\n// import ContactSectionTest from '../components/contactSection/contactSectionTest'\nimport NextStepSection from '../components/nextStepSection.js/nextStepSection'\nimport FooterSection from '../components/footerSection/footerSection'\nimport LoadingSpinner from '../utils/loadingSpinner'\n\n\n// Home version for testing separation of NextStepSection and ContactSection\n\nconst Home = () => {\n\n    const [ isOpen, setIsOpen ] = useState(false)\n    const [ loggedIn, setLoggedIn ] = useState(false)\n    const [ loggedOut, setLoggedOut ] = useState(true)\n    const [currentUser, setCurrentUser ] = useState('')\n    const [ loginSideBarOpen, setLoginSideBarOpen ] = useState(false)\n    const [ mainSideBarOpen, setMainSideBarOpen ] = useState(false)\n    const [ loginResponse, setLoginResponse ] = useState(null)\n    const [ loading, setLoading ] = useState(false)\n    const [ language, setLanguage ] = useState('ES')\n    const [ regView, setRegView ] = useState(false)\n    const [ forgotPIN, setForgotPIN ] = useState(false)\n    const [ active , setActive ] = useState(null) \n    const [ contactSectionOpen, setContactSectionOpen ] = useState(false)\n    const [ loginSideBarLoading, setLoginSideBarLoading ] = useState(false)\n\n    // Google OAuth States *****************************************\n    const [ loginData, setLoginData ] = useState(null)\n    const [isSignedIn, setIsSignedIn] = useState(null)\n    // console.log(isSignedIn)\n    // **************************************************************\n    \n    \n    const mobil = useMobilDetect()\n    const mobil2 = useMobilDetection()\n    // const url_userLogin = \"http://192.168.1.102:5000/api/users/login\"\n    const url_userLoginITC = \"https://intense-atoll-00786.herokuapp.com/api/users/login\"\n    let auth\n    useEffect(() => {\n        gettingTokenForLocalSignIn()\n        insertGapiScript()\n    },[])\n\n    const gettingTokenForLocalSignIn = () => {\n        const getToken = async() => {\n            const token = localStorage.getItem('SH3CK_TOKEN')\n            if (token){\n                const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n                    headers:{\n                        // 'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}` \n                    } \n                })\n                console.log(response.data)\n                setCurrentUser(response.data)\n                return setLoggedIn(true)\n            }\n            setLoggedIn(false)\n            setLoggedOut(true)\n            \n            \n        }   \n        getToken()\n    }\n\n    // **************************************************************\n\n    const handlingInterestedUser = () => {\n        setActive('interested')\n        setContactSectionOpen(true)\n        setRegView(false)\n    }\n\n    const handlingCheckUser = () => {\n        setActive('check')\n        setContactSectionOpen(true)\n        setRegView(false)\n        setForgotPIN(false)\n    }\n\n    const toggleRegView = () => {\n        // setResponse(null)\n        setRegView(true)\n    }\n\n    const settinRegViewAndForgotPINToFalse = () => {\n        setRegView(false)\n        setForgotPIN(false)\n    }\n    const toggleForgotPINState = () => {\n        setForgotPIN(!forgotPIN)\n    }\n    // ***************************************************************\n\n\n    const handlingSubmitLoginUser = async(user) => {\n        setLoginSideBarOpen(false)   \n        setLoading(true)\n        setTimeout(async() => {\n            try {\n                const { data } = await axios.post(url_userLoginITC, user)\n                console.log(data)\n                localStorage.setItem('SH3CK_TOKEN', data.token)\n                // ******************************************\n                const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n                    headers:{\n                        // 'Content-Type': 'application/json',\n                        Authorization: `Bearer ${data.token}` \n                    } \n                })\n                setLoading(false)\n                setLoginResponse(response)\n                // console.log(response.data)\n                setCurrentUser(response.data)\n                setLoggedIn(true)\n                setLoggedOut(false)\n                console.log('Usuaurio encontrado y hace login')    \n            } catch (error) {\n                console.log(error)\n                setLoginResponse(error.response)\n                setLoading(false)\n            }\n        },3000)\n        \n    }\n\n    const handlingSubmitLogOutUser = async() => {\n        if (isSignedIn) {\n            const auth = window.gapi.auth2.getAuthInstance()\n            await auth.signOut()\n            setIsSignedIn(false)\n            setMainSideBarOpen(!mainSideBarOpen)\n            setLoginResponse(null)\n        }\n        if (loggedIn){\n            localStorage.removeItem('SH3CK_TOKEN')\n            setMainSideBarOpen(!mainSideBarOpen)\n            setLoggedIn(false)\n            setLoggedOut(true)\n            setLoginResponse(null)\n        }\n        \n        \n    }\n \n    \n    const toggleSideBar = () => {\n        setIsOpen(!isOpen)\n        \n    } \n    const toggleLoginSideBarToOpen = () => {\n        setLoginSideBarOpen(true)\n        \n    }\n    const toggleLoginSideBarToClose = () => {\n        setLoginSideBarOpen(false)\n    }\n    \n    const toggleMainSideBar = () => {\n        setMainSideBarOpen(!mainSideBarOpen)\n    } \n    const toggleNotification = () => {\n        setLoginResponse(null)\n    }\n\n    const toggleLanguage = () => {\n        if (language === 'ES') {\n            setLanguage('EN')\n            return\n        }\n        if (language === 'EN'){\n            setLanguage('ES')\n            return\n        } \n    }\n\n  \n  //  ************* Google OAuth Processes and functions (with googleAuth5) ****************\n\n \n        const insertGapiScript = () => {\n            const script = document.createElement('script')\n            script.src = \"https://apis.google.com/js/platform.js\"\n            script.onload = () => {\n                initializeGooglesignIn()\n            }\n            document.body.appendChild(script)\n          } \n          \n          const initializeGooglesignIn = () => {\n            window.gapi.load('client:auth2', () => {\n              window.gapi.client.init({\n                client_id: '915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com',\n                scope:'profile'\n              }).then(()=> {\n              console.log('gapi initialized...')\n            //   const response = window.gapi.auth2.getAuthResponse()\n            //   console.log(response)\n              auth = window.gapi.auth2.getAuthInstance()\n              const isSignedIn = auth.isSignedIn.get()\n              {isSignedIn ? setLoggedIn(true) : setLoggedIn(false)}\n              setIsSignedIn(isSignedIn)\n              console.log(isSignedIn)\n              auth.isSignedIn.listen(isSignedIn => {\n                  setIsSignedIn(auth.isSignedIn.get())\n              })   \n              })\n          })\n          \n        }\n        const googleTest = async(user, token) => {\n            // const test = JSON.parse(user)\n            // *****************************************\n            try {\n                console.log('Sending request to BackEnd api...')\n                console.log(token)\n                const res = await axios.post('https://intense-atoll-00786.herokuapp.com/api/extUsers/google', {\n                    token,\n                    headers:{\n                        'Content-Type': 'application/json',\n                    },\n                })\n                console.log(res)\n                // const res = await axios.post('http://localhost:5000/api/extUsers/google',token)\n                const data = await res.data\n                if (res.status === 201){\n                    console.log(data)\n                    setLoginData(data)   \n                    setCurrentUser(data.fullName)\n                    setLoggedIn(true) \n                    setLoggedOut(false)\n                    return res.status\n                }\n            } catch (error) {\n                console.log(error)\n                console.log(error.response.data)\n                setCurrentUser(error.response.data.fullName)\n                setLoginData(error.response.data)\n                setLoggedIn(true) \n                setLoggedOut(false)\n            }\n            // *************************************************\n            \n            // setLoggedIn(true)\n            // setLoggedOut(false)\n            \n        }\n// console.log(googleUser)\n// console.log(loginData)\n    \n    return (\n        <>\n            <LoadingSpinner \n            loading={loading}\n            language={language}\n            />\n\n            \n            {/* { loading ?\n            <LoadingSpinner\n            language={language}\n            />\n            :\n            null\n            } */}\n            \n            \n\n            {/* {!loggedIn && loginSideBarOpen ? */}\n            <LoginSideBar\n            loginSideBarOpen={loginSideBarOpen}\n            toggleLoginSideBarToClose={ toggleLoginSideBarToClose }\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            // handlingLogin={handlingLogin}\n            loading = {loading}\n            language={language}\n            loginSideBarLoading={loginSideBarLoading}\n            handlingSubmitLoginUser={ handlingSubmitLoginUser}\n            />\n            {/* : null */}\n            {/* } */}\n\n            {/* {!loggedOut && logoutSideBarOpen ? */}\n            <MainSideBar\n            mainSideBarOpen={mainSideBarOpen}\n            toggleMainSideBar={toggleMainSideBar}\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            handlingSubmitLogOutUser={handlingSubmitLogOutUser}\n            username={currentUser}\n            language={language}\n            loginData={loginData}           \n            />\n            {/* : null */}\n            {/* } */}\n            \n            <SideBar \n            isOpen={ isOpen } \n            toggleSideBar={ toggleSideBar }\n            language={language}\n            toggleLanguage={toggleLanguage}\n            />\n            \n            { mobil2.screenWidth <= 1098 || mobil ?  \n                <NavBarMobil \n                toggleLoginSideBarToOpen={toggleLoginSideBarToOpen}\n                toggleMainSideBar={toggleMainSideBar}\n                toggleSideBar={ toggleSideBar }  \n                login={ loggedIn }\n                language={language}\n                \n            /> : <NavBar\n            toggleLoginSideBarToOpen={toggleLoginSideBarToOpen}\n            toggleMainSideBar={toggleMainSideBar} \n            login={ loggedIn }\n            language={language}\n            \n        />\n            }\n            <HeroSection language={language} />\n            <VideoSection language={language}/>\n            <HiwSection language={language}/>\n            <NextStepSection\n            handlingInterestedUser={handlingInterestedUser}\n            handlingCheckUser={handlingCheckUser} \n            language={language}\n            />\n            <ContactSection\n                active={active}\n                regView={regView}\n                forgotPIN={forgotPIN}\n                loggedIn={loggedIn}\n                isSignedIn={isSignedIn}\n                handlingSubmitLoginUser={ handlingSubmitLoginUser}\n                loginResponse={loginResponse}\n                toggleNotificationLogin={toggleNotification}\n                googleTest={googleTest}\n                language={language}\n                toggleRegView={toggleRegView}\n                settinRegViewAndForgotPINToFalse={settinRegViewAndForgotPINToFalse}\n                toggleForgotPINState={toggleForgotPINState}\n                contactSectionOpen={contactSectionOpen}\n                />\n                \n            <FooterSection language={language}/>\n        </>\n    )\n}\n\nexport default Home\n","/Users/p3rolix/code/landingSh3ckFE/src/utils/data.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/navBar/navBarMobil.js",["385","386","387"],"import React, {useState, useEffect} from 'react'\nimport { FaBars,FaSign,FaPuzzlePiece, FaVideo, FaHome } from 'react-icons/fa'\nimport { Link as LinkR } from 'react-router-dom'\nimport { Link as LinkS } from 'react-scroll'\nimport { IoMdCart } from 'react-icons/io'\nimport { BiUser, BiUserCheck } from 'react-icons/bi'\nimport { OffsetHandler } from '../../utils/settingOffsets'\nimport { infoNavBarMobil } from '../../utils/data'\n\n\nconst NavBarMobil = ({ \n    toggleSideBar, \n    login, \n    toggleMainSideBar,\n    language,\n    toggleLoginSideBarToOpen\n\n}) => {\n\n\n        return (\n            <>\n                <nav \n                className=\"navMobil\" >\n                <div className=\"navBarContainerMobil\">\n                    <LinkR to=\"/\" className=\"navLogoMobil\">sh3ck</LinkR>\n                    <div \n                    // onClick={ toggleSideBar }\n                    className=\"mobileIconMobil\">\n                        {/* <FaRegUser className=\"faIcon\"/> */}\n                        {login ?\n                        <BiUserCheck \n                        onClick={toggleMainSideBar}\n                        className=\"faUserIcon\"/> \n                         :   \n                        <BiUser \n                        onClick={toggleLoginSideBarToOpen}\n                        className=\"faUserIcon\" />\n                        }\n                        <FaBars \n                        onClick={toggleSideBar}\n                        className=\"faBarsIcon\"/>\n                    </div>\n                </div>\n                <div className=\"navMenuButtonsContainer\">\n                <div className=\"navMenuButton\">\n                        <LinkS \n                        to=\"videoSection\" \n                        className=\"navLinksMobil\" \n                        activeClass=\"active\"\n                        spy={true}\n                        smooth={true}\n                        // offset={100}\n                        offset={OffsetHandler('video')}\n                        duration={1000}\n                        >\n                        <div className=\"iconMobilContainer\">\n                                <FaVideo className=\"faIcon\"/>\n                        </div>\n                        {language === 'ES' ? infoNavBarMobil.option1Copy : infoNavBarMobil.option1Copy_EN}\n                        </LinkS>\n                    </div>\n\n                    <div className=\"navMenuButton\">\n                        <LinkS \n                        to=\"hiwSection\" \n                        className=\"navLinksMobil\" \n                        activeClass=\"active\"\n                        spy={true}\n                        smooth={true}\n                        offset={OffsetHandler('howItWorks')}\n                        duration={1000}\n                        >\n                        <div className=\"iconMobilContainer\">\n                                <FaPuzzlePiece className=\"faIcon\"/>\n                        </div>\n                        {language === 'ES' ? infoNavBarMobil.option2Copy : infoNavBarMobil.option2Copy_EN}\n                        </LinkS>\n                    </div>\n                    \n                    <div className=\"navMenuButton\">\n                        <LinkS \n                        to=\"nextStepSection\" \n                        className=\"navLinksMobil\" \n                        activeClass=\"active\"\n                        spy={true}\n                        smooth={true}\n                        offset={OffsetHandler('checkAProduct')}\n                        duration={1000}\n                        >\n                        <div className=\"iconMobilContainer\">\n                                <IoMdCart className=\"faIcon\"/>\n                        </div>\n                        {language === 'ES' ? infoNavBarMobil.option4Copy : infoNavBarMobil.option4Copy_EN}\n                        </LinkS>\n                    </div>\n\n                    <div className=\"navMenuButton\">\n                        <LinkS \n                        to=\"nextStepSection\" \n                        className=\"navLinksMobil\" \n                        activeClass=\"active\"\n                        spy={true}\n                        smooth={true}\n                        offset= { OffsetHandler('home')}\n                        duration={1000}\n                        >\n                            <div \n                            className=\"iconMobilContainer\">\n                                <FaHome className=\"faIcon\"/>\n                            </div>\n                            {language === 'ES' ? infoNavBarMobil.option3Copy : infoNavBarMobil.option3Copy_EN}\n                        </LinkS>\n                        \n                    </div>\n                    \n                    \n                    \n                </div>\n            </nav>\n            </>\n        )\n}\n    \n\n    \n    \n        \n\n\nexport default NavBarMobil","/Users/p3rolix/code/landingSh3ckFE/src/components/loginSideBar/loginSideBar.js",["388"],"import React from 'react'\nimport { FaTimes } from 'react-icons/fa'\nimport LoginSideBarForm from './loginSideBarForm'\nimport LoadingSpinner from '../../utils/loadingSpinner'\nimport { infoLoginSB } from '../../utils/data'\n\n\n\n\nconst LoginSideBar = ({ \n    loginSideBarOpen,  \n    // handlingLogin,\n    loggedIn, \n    loggedOut,\n    loading,\n    language,\n    loginSideBarLoading,\n    handlingSubmitLoginUser,\n    toggleLoginSideBarToClose\n}) => {\n    // console.log(loggedIn)\n    // console.log(loggedOut)\n    // console.log(loginSideBarOpen)\n    \n    if (loggedOut){\n        return (\n            <aside\n            className={`${loginSideBarOpen ? \"loginSideBarContainerOpen\" : \"loginSideBarContainer\" }`}>\n                <div className=\"loginContactForms\">\n                    <div \n                        className=\"loginSideBarIcon\"\n                        onClick={ toggleLoginSideBarToClose }\n                    >\n                        <FaTimes className=\"loginCloseIcon\"/>\n                    </div>\n                    <div className=\"loginSideHeader\">\n    \n                    </div>\n                    <div className=\"loginSideBarFormTitle\">\n                        <h1 className=\"loginSideBarTitle\">{language === 'ES' ? infoLoginSB.title : infoLoginSB.title_EN}</h1>\n                    </div>\n                    <div className=\"loginSideBarFormDescription\">\n                        <p>{language === 'ES' ? infoLoginSB.description : infoLoginSB.description_EN}</p>\n                    </div>\n                        \n                    <LoginSideBarForm\n                    handlingSubmitLoginUser={ handlingSubmitLoginUser}\n                    language={language}\n                    />\n                        \n                </div>\n            </aside>\n        )\n    }else{\n        return null\n    }\n    \n}\n\nexport default LoginSideBar","/Users/p3rolix/code/landingSh3ckFE/src/components/hiwSection/hiwSection.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/videoSection/videoSection.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/navBar/navBar.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/utils/mobilHook.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/utils/mobilDetection.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/mainSideBar/mainSideBar.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/contactSection.js",["389","390","391","392","393"],"import React, { useState } from 'react'\nimport  { motion } from 'framer-motion'\n\nimport InterestedUsersForm from '../contactSection/interestedUserForm'\nimport LoadingSpinner from '../../utils/loadingSpinner' \nimport OptionsForms from './optionsForms'\nimport LoginForm from './loginForm'\nimport NotificationBox from '../notifications/NotificationBox'\nimport axios from 'axios'\nimport picture from '../../images/2034873_chat_app_media_mobile_social_icon.svg'\nimport FormHeader from './formHeader'\nimport { responseDataInterested, responseDataRegister, responseDataLogin, responseDataNewPIN } from '../notifications/notificationData'\nimport { infoContact } from '../../utils/data'\n\nconst ContactSection = ({\n    language,\n    loggedIn,\n    handlingSubmitLoginUser,\n    loginResponse,\n    toggleNotificationLogin,\n    isSignedIn,\n    googleTest,\n    active,\n    regView,\n    forgotPIN,\n    toggleRegView,\n    settinRegViewAndForgotPINToFalse,\n    toggleForgotPINState,\n    contactSectionOpen\n\n}) => {\n   \n    const [ upLoadingUser, setUpLoadingUser ] = useState(false)\n    const [response, setResponse ] = useState(null)\n    // const url_interestedUsers = \"http://192.168.1.102:5000/api/interestedUsers\"\n    // const url_users = \"http://192.168.1.102:5000/api/users\"\n    const url_interestedUsersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/interestedUsers\"\n    const url_usersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/users\"\n    const url_generatePIN_ITC = \"https://intense-atoll-00786.herokuapp.com/api/users/newPIN\"\n    \n\n    const toggleNotification = () => {\n        setResponse(null)\n    }\n\n\n    const handlingSubmitInterestedUser = (interestedUser) => {\n        \n        setUpLoadingUser(true)\n        setTimeout(async()=> {\n            try {\n                const response = await axios.post(url_interestedUsersInTheCloud, interestedUser)\n                    console.log(response)\n                    if (response.status === 201){\n                        setResponse(response)\n                        setUpLoadingUser(false)\n                        console.log('Gracias por enviarnos tus datos, estaremos en contacto...')\n                        return response.status\n                    }\n            } catch (error) {\n                console.log(error.response)\n                setUpLoadingUser(false)\n                setResponse(error.response)\n            }\n        },2000)\n        \n    }\n\n    const handlingSubmitUser = async(user) => {\n        setUpLoadingUser(true)\n        setTimeout(async()=> {\n            try {\n                const response = await axios.post(url_usersInTheCloud, user)\n                    console.log(response)\n                    if (response.status === 201){\n                        setResponse(response)\n                        setUpLoadingUser(false)\n                        settinRegViewAndForgotPINToFalse()\n                        console.log('Gracias por registrarte')\n                        return response.status\n                    }\n            } catch (error) {\n                console.log(error)\n                setUpLoadingUser(false)\n                setResponse(error.response)\n            }\n        },2000)\n    } \n\n    const handlingNewPINRequest = async(dataToRequest) => {\n        // console.log(dataToRequest)\n        setUpLoadingUser(true)\n        try {\n            const response = await axios.put(url_generatePIN_ITC, dataToRequest)\n            console.log(response.status)\n            if (response.status === 200){\n                console.log(response)\n                setResponse(response)\n                setUpLoadingUser(false)\n                return response.status\n            }\n        } catch (error) {\n            console.log(error)\n            setUpLoadingUser(false)\n            setResponse(response.error)\n        }\n    }\n\nconst togglingResponseData = () => {\n    if (response && active === 'interested'){\n        return responseDataInterested\n    }\n    if (response && forgotPIN){\n        return responseDataNewPIN\n    }\n    if (response && active === 'check'){\n        return responseDataRegister\n    }\n    if (loginResponse && active === 'check'){\n        return responseDataLogin\n    } \n}\n\nreturn (\n    <div \n    id={infoContact.id}\n    className={contactSectionOpen ? 'contactContainer_open' : 'contactContainer' }>\n        <div className={contactSectionOpen ? 'contactWrapper_open' : 'contactWrapper' }>\n            <div className=\"contactForms\">\n             \n             {response || loginResponse ?\n            <NotificationBox\n             toggleNotification={response ? toggleNotification : toggleNotificationLogin} \n             response={response ? response : loginResponse }\n             responseData={togglingResponseData()} \n             language={language}\n             />\n             : null\n             }\n            \n            { !loggedIn  ? \n            <>\n            <FormHeader\n            active = {active}\n            loggedIn={loggedIn}\n            regView={regView}\n            forgotPIN = {forgotPIN}\n            language={language}\n            />\n            </>\n            :\n            null\n            }\n            \n            { active === 'interested' && !loggedIn ? \n             <>\n             <InterestedUsersForm \n             handlingSubmitInterestedUser={handlingSubmitInterestedUser}\n             language={language}\n             />\n            </>                     \n             :\n             null\n            }\n            \n            { active === 'check'  && !loggedIn  ? \n            <LoginForm\n            regView={regView}\n            forgotPIN = {forgotPIN}\n            toggleRegView={toggleRegView}\n            toggleForgotPINState={toggleForgotPINState}\n            handlingSubmitUser={handlingSubmitUser}\n            handlingSubmitLoginUser={handlingSubmitLoginUser}\n            handlingNewPINRequest={handlingNewPINRequest}\n            language={language}\n            isSignedIn={isSignedIn}\n            googleTest={googleTest}\n            />\n            :\n            null\n            }\n            </div>\n            \n        </div>\n        \n    </div>\n)\n}\n\nexport default ContactSection","/Users/p3rolix/code/landingSh3ckFE/src/components/heroSection/heroSection.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/footerSection/footerSection.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/sideBar/sideBar.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/loginSideBar/loginSideBarForm.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/optionsForms.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/interestedUserForm.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/utils/settingOffsets.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/video.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/utils/loadingSpinner.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/formHeader.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/notifications/NotificationBox.js",["394"],"import React from 'react'\nimport successImage from '../../images/ok_success_icon.svg'\nimport foundImage from '../../images/ok_success_verified_icon.svg'\nimport { FaTimes } from 'react-icons/fa'\nimport { regularCopy } from './notificationData'\nimport { Link as LinkS } from 'react-scroll'\nimport { OffsetHandler } from '../../utils/settingOffsets'\n\n\nconst NotificationBox = ({ \n    response, \n    responseData, \n    toggleNotification,\n    language,\n}) => {\n    console.log(response)\n    console.log(response.config)\n    const url = response.config.url\n    const url_regUsers = \"https://intense-atoll-00786.herokuapp.com/api/users\"\n    const url_interestedUsers = \"https://intense-atoll-00786.herokuapp.com/api/interestedUsers\"\n\n    const capitalizeFirstLetter = (string) => {\n        // const str = 'flexiple';\n        const str2 = string.charAt(0).toUpperCase() + string.slice(1)\n        console.log(str2.split(' ')[0]);\n        return str2.split(' ')[0]    \n    }\n\n      \n    \n    const nameSplittedAndCapitalized = capitalizeFirstLetter(response.data)\n    // console.log('splitting response: ', responseSplitted[0])\n    if (response){\n        if (response.status === 400){\n            return (\n            // <div className=\"notificationContainer\">\n            <div className={response ? 'notificationContainer_open' : 'notificationContainer'}>\n                <LinkS \n                onClick={toggleNotification}\n                to=\"nextStepSection\"  \n                activeClass=\"active\"\n                spy={true}\n                smooth={true}\n                offset={OffsetHandler('checkAProduct')}\n                duration={500} \n                className=\"closeIconContainer\">\n                    <FaTimes/>\n                </LinkS>\n                <div className=\"notificationWrapper\">\n                    <img src={foundImage} alt=\"successImage\" />\n                    <div className=\"notificationName\"> \n                        <span className=\"notificationSpan\">\n                            {/* <b>{language === 'ES' ? regularCopy.hola : regularCopy.hello} {''}{responseSplitted[0]}</b> */}\n                            <b>{language === 'ES' ? regularCopy.hola : regularCopy.hello} {''}{nameSplittedAndCapitalized}</b>    \n                        </span>    \n                    </div>\n                    <div className=\"notificationResponse\">\n                    {language === 'ES' ? responseData.errorMessage : responseData.errorMessage_EN}\n                    </div>\n                    \n                    <LinkS \n                    className=\"notificationBtn\"\n                    onClick={toggleNotification}\n                    to=\"nextStepSection\"  \n                    activeClass=\"active\"\n                    spy={true}\n                    smooth={true}\n                    offset={OffsetHandler('checkAProduct')}\n                    duration={500}\n                    >{language === 'Es' ? regularCopy.continueBtnCopy : regularCopy.continueBtnCopy_EN}</LinkS>     \n                </div>\n            </div>   \n            )\n        }\n        if (response.status === 409){\n            return (\n            <div className={response ? 'notificationContainer_open' : 'notificationContainer'}>\n                <LinkS \n                onClick={toggleNotification}\n                to=\"nextStepSection\"  \n                activeClass=\"active\"\n                spy={true}\n                smooth={true}\n                offset={OffsetHandler('checkAProduct')}\n                duration={500}\n                className=\"closeIconContainer\">\n                    <FaTimes/>\n                </LinkS>\n                <div className=\"notificationWrapper\">\n                    <img src={foundImage} alt=\"successImage\" />\n                    <div className=\"notificationName\"> \n                        <span className=\"notificationSpan\">\n                            <b>{language === 'ES' ? regularCopy.hola : regularCopy.hello} {''}{nameSplittedAndCapitalized}</b>\n                            {/* <b>{language === 'ES' ? regularCopy.hola : regularCopy.hello} {''}{responseSplitted[0]}</b>      */}\n                        </span>    \n                    </div>\n                    <div className=\"notificationResponse\">\n                    {language === 'ES' ? responseData.errorMessage : responseData.errorMessage_EN}\n                    </div>\n                    <LinkS\n                    to=\"nextStepSection\"  \n                    activeClass=\"active\"\n                    spy={true}\n                    smooth={true}\n                    offset={OffsetHandler('checkAProduct')}\n                    duration={500} \n                    className=\"notificationBtn\"\n                    onClick={toggleNotification}\n                    >{language === 'Es' ? regularCopy.continueBtnCopy : regularCopy.continueBtnCopy_EN}</LinkS>\n                </div>\n            </div>   \n            )\n        }\n        if (response.status === 201){\n            return (\n            <div className={response ? 'notificationContainer_open' : 'notificationContainer'}>\n                <LinkS\n                to=\"nextStepSection\"  \n                activeClass=\"active\"\n                spy={true}\n                smooth={true}\n                offset={url === url_interestedUsers ? -5000 : OffsetHandler('checkAProduct') }\n                duration={url === url_interestedUsers ? 1000 : 500} \n                onClick={toggleNotification}\n                className=\"closeIconContainer\">\n                    <FaTimes/>\n                </LinkS>\n                <div className=\"notificationWrapper\">\n                    <img src={successImage} alt=\"successImage\" />\n                    <div className=\"notificationName\">\n                        <span className=\"notificationSpan\">\n                            <b>{language === 'ES' ? regularCopy.hola : regularCopy.hello} {''}{nameSplittedAndCapitalized}</b>    \n                        </span>    \n                    </div>\n                    <div className=\"notificationResponse\">\n                    {language === 'ES' ? responseData.successMessage : responseData.successMessage_EN }\n                    </div>\n                    <LinkS\n                    to=\"nextStepSection\"  \n                    activeClass=\"active\"\n                    spy={true}\n                    smooth={true}\n                    offset={url === url_interestedUsers ? -5000 : OffsetHandler('checkAProduct') }\n                    duration={url === url_interestedUsers ? 1000 : 500} \n                    className=\"notificationBtn\"\n                    onClick={toggleNotification}\n                    >{language === 'Es' ? regularCopy.continueBtnCopy : regularCopy.continueBtnCopy_EN}</LinkS>\n                </div>\n                \n            </div>\n            )\n        }\n        if (response.status === 200){\n            return (\n            <div className={response ? 'notificationContainer_open' : 'notificationContainer'}>\n                <LinkS\n                to=\"nextStepSection\"  \n                activeClass=\"active\"\n                spy={true}\n                smooth={true}\n                offset={OffsetHandler('checkAProduct')}\n                duration={500} \n                onClick={toggleNotification}\n                className=\"closeIconContainer\">\n                    <FaTimes/>\n                </LinkS>\n                <div className=\"notificationWrapper\">\n                    <img src={successImage} alt=\"successImage\" />\n                    <div className=\"notificationName\">\n                        <span className=\"notificationSpan\">\n                            <b>{language === 'ES' ? regularCopy.hola : regularCopy.hello} {''}{nameSplittedAndCapitalized}</b>    \n                        </span>    \n                    </div>\n                    <div className=\"notificationResponse\">\n                        {language === 'ES' ? responseData.successMessage : responseData.successMessage_EN }\n                    </div>\n                    <LinkS\n                    to=\"nextStepSection\"  \n                    activeClass=\"active\"\n                    spy={true}\n                    smooth={true}\n                    offset={OffsetHandler('checkAProduct')}\n                    duration={500}\n                    className=\"notificationBtn\"\n                    onClick={toggleNotification}\n                    >{language === 'Es' ? regularCopy.continueBtnCopy : regularCopy.continueBtnCopy_EN}</LinkS>\n                </div>\n                \n            </div>\n            )\n        }\n        if (response.status === 500) {\n            return (\n                <div>\n                    <b>{language === 'Es' ? regularCopy.error500Copy : regularCopy.continueBtnCopy_EN}</b>\n                </div>\n            )\n        }\n    }\n    return null     \n   \n}\n\nexport default NotificationBox\n","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/loginForm.js",["395","396"],"import React, { useState } from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup' \nimport RegisterForm from './registerForm'\nimport ForgotPINForm from './forgotPINForm'\nimport {MdOutlineVisibility} from 'react-icons/md'\nimport { infoContact } from '../../utils/data'\nimport GoogleAuth3 from '../buttons/googleAuth3'\nimport GoogleAuth4 from '../buttons/googleAuth4'\nimport GoogleAuth5 from '../buttons/googleAuth5'\n\n\n\nconst validationSchema = yup.object({\n    email: yup.string().email('Por favor introduce una dirección de correo válida').required('hola, no te olvídes de colocar tu correo electrónico'),\n    pin: yup.string().min(4).max(4).required('No te olvides de colocar tu PIN de seguridad'),   \n})\n\n\nconst LoginForm = ({ \n    // handlingLoginUser,\n    regView, \n    toggleRegView,\n    handlingSubmitUser,\n    forgotPIN,\n    handlingNewPINRequest,\n    language,\n    isSignedIn,\n    googleTest,\n    toggleForgotPINState,\n    handlingSubmitLoginUser,\n}) => {\n    // console.log(isSignedIn)\n    const [typeOfPIN, setTypeOfPIN ] = useState(false)\n    \n    const onSubmit = async(values) => {\n        handlingSubmitLoginUser(values)\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            pin: \"\"\n        },\n        validateOnBlur: true,\n        onSubmit,\n        validationSchema: validationSchema\n\n    })\n\n    // console.log(formik.errors)\n\n    const togglingPINVisibility = () => {\n        setTypeOfPIN(!typeOfPIN)\n    }\n\n    if (regView){\n        return(\n            <RegisterForm \n            handlingSubmitUser={handlingSubmitUser}\n            language={language}\n            isSignedIn={isSignedIn}\n            />\n        )\n    }\n\n    if (forgotPIN){\n        return(\n            <ForgotPINForm\n            handlingNewPINRequest={handlingNewPINRequest}\n            language={language}\n            toggleForgotPINState={toggleForgotPINState}\n            />\n        ) \n        \n    }\n\n    return (\n        <div className=\"boxContainer\">\n            <form \n            onSubmit={formik.handleSubmit}\n            className=\"formContainer\">\n                \n                <input\n                className=\"input\"\n                autoComplete=\"on\"\n                name=\"email\"\n                placeholder={language === 'ES' ? infoContact.loginFormPH1 : infoContact.loginFormPH1_EN} \n                type=\"email\" \n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <div className=\"inputWrapper\">\n                <input\n                className=\"inputPassword\"\n                name=\"pin\"\n                autoComplete=\"on\"\n                placeholder={language === 'ES' ? infoContact.loginFormPH2 : infoContact.loginFormPH2_EN} \n                type={!typeOfPIN ? 'password' : 'text'} \n                value={formik.values.pin}\n                onChange={formik.handleChange}                \n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.city && formik.errors.city ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                    <div className=\"eyeWrapper\">\n                        <MdOutlineVisibility\n                        onClick={togglingPINVisibility}\n                        className=\"eyeIcon\"\n                        />\n                    </div>\n                \n                </div>\n                \n                \n                <button\n                className=\"sendDataBtn\"\n                type=\"submit\"\n                >{language === 'ES' ? infoContact.loginFormSendBtn : infoContact.loginFormSendBtn_EN}</button>\n                <button\n                onClick={toggleRegView}\n                className=\"regButton\"\n                type=\"submit\"\n                >{language === 'ES' ? infoContact.loginFormRegBtn : infoContact.loginFormRegBtn_EN}</button>\n                <span\n                onClick={toggleForgotPINState} \n                className=\"forgotPINSpan\">{language === 'ES' ? infoContact.loginFormSpan : infoContact.loginFormSpan_EN}</span>\n                <GoogleAuth5\n                isSignedIn={isSignedIn}\n                googleTest={googleTest}\n                language={language}\n                />\n            </form>\n\n        </div>\n    )\n}\n\nexport default LoginForm","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/button.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/notifications/notificationData.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/dropDownList.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/registerForm.js",["397","398","399"],"import React, {useEffect} from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup' \nimport { infoContact } from '../../utils/data'\nimport GoogleAuth3 from '../buttons/googleAuth3'\nimport GoogleAuth4 from '../buttons/googleAuth4'\nimport GoogleAuth5 from '../buttons/googleAuth5'\n\n\nconst validationSchema = yup.object({\n    fullName: yup.string().min(3).max(100).required('hola, no te olvides de colocar tu nombre completo'),\n    // password: yup.string().min(6).max(200).required('No te olvides de colocar tu clave'),\n    email: yup.string().email('Por favor introduce una dirección de correo válida').required('No te olvides de colocar tu correo electrónico'),\n    phoneNumber: yup.string().length(11).required('No te olvides de colocar tu número de teléfono')\n})\n\n\nconst RegisterForm = ({ \n    handlingSubmitUser, \n    language,\n    googleTest,\n    isSignedIn\n}) => {\n\n    // useEffect(() => {\n     \n\n    // },[])\n\n    const onSubmit = (values) => {\n        handlingSubmitUser(values)\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            fullName: \"\",\n            email: \"\",\n            phoneNumber: \"\"\n        },\n        validateOnBlur: true,\n        onSubmit,\n        validationSchema: validationSchema\n\n    })\n\n    // console.log(formik.errors)\n\n    return (\n        <div className=\"boxContainer\">\n            <form \n            onSubmit={formik.handleSubmit}\n            className=\"formContainer\">\n                <input\n                className=\"input\"\n                name=\"fullName\"\n                placeholder={language === 'ES' ? infoContact.regUsersFormPH1 : infoContact.regUsersFormPH1_EN} \n                autoComplete=\"on\"\n                type=\"text\" \n                value={formik.values.fullName}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.fullName && formik.errors.fullName ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <input\n                className=\"input\"\n                name=\"email\"\n                placeholder={language === 'ES' ? infoContact.regUsersFormPH2 : infoContact.regUsersFormPH2_EN} \n                type=\"text\" \n                autoComplete=\"on\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <input\n                className=\"input\"\n                name=\"phoneNumber\"\n                placeholder={language === 'ES' ? infoContact.regUsersFormPH3 : infoContact.regUsersFormPH3_EN} \n                type=\"text\" \n                autoComplete=\"on\"\n                value={formik.values.phoneNumber}\n                onChange={formik.handleChange}                \n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.phoneNumber && formik.errors.phoneNumber ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <button\n                className=\"sendDataBtn\"\n                type=\"submit\"\n                >{language === 'ES' ? infoContact.regUsersFormSendBtn : infoContact.regUsersFormSendBtn_EN}</button>\n\n                <GoogleAuth5\n                googleTest={googleTest}\n                isSignedIn={isSignedIn}\n                language={language}\n                />\n                \n                \n            \n            </form>\n\n        </div>\n    )\n}\n\nexport default RegisterForm","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/forgotPINForm.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuthButtons.js",[],["400","401"],"/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/applications.js",["402"],"import React, { useState, useEffect } from 'react'\nimport {BrowserRouter, Routes, Route, Link} from 'react-router-dom'\nimport { Dropdown } from 'react-bootstrap'\n// import '../../bookface.css'\n\n\nconst Dashboard = () => {\n\n  const auth = window.gapi.auth2.getAuthInstance()\n  const user = auth.currentUser.get()\n  const profile = user.getBasicProfile()\n  const email = profile.getEmail()\n  const imageUrl = profile.getImageUrl()\n\n  return (\n    <>\n      <nav>\n        <div>Bookface</div>\n        <img className=\"push\" src={imageUrl} alt=\"cdcdcdc\"/>\n        <Dropdown>\n          <Dropdown.Toggle as=\"a\">\n            {email}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n              <Dropdown.Item\n              onClick={auth.signOut}\n              >Sign out</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </nav>\n      <div className=\"container\">\n        <p>Look at this bookface</p>\n        <img src=\"https://christianlauersen.files.wordpress.com/2015/11/img_0423.png\" alt=\"Christian\" />\n      </div>\n    </>  \n  )\n\n}\n\nconst LoginPage = ({isSignedIn}) => {\n\n  useEffect(()=> {\n    window.gapi.load('signin2',() =>{\n      window.gapi.signin2.render('login-button')\n    })\n  },[])\n\n  return (\n    <div className=\"container\">\n      <div id=\"login-button\"></div>\n    </div>\n  )\n}\n\nconst LandingPage = () => {\n  return (\n      <div className=\"container\">\n          <h1>BookFace</h1>\n          <p>Leading provider of bookfaces</p>\n          <Link to=\"/dashboard\">Go to Dashboard</Link>\n      </div>\n  )\n}\n\nconst Application = () => {\n\n  useEffect(()=> {\n    insertGapiScript()\n  },[])\n  \n  const [isSignedIn, setIsSignedIn ] = useState(null)\n  \n  const insertGapiScript = () => {\n    const script = document.createElement('script')\n    script.src = \"https://apis.google.com/js/platform.js\"\n    script.onload = () => {\n        initializeGooglesignIn()\n    }\n    document.body.appendChild(script)\n  } \n\nconst initializeGooglesignIn = () => {\n  window.gapi.load('client:auth2', () => {\n    window.gapi.client.init({\n      client_id: '915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com',\n      scope:'profile'\n    }).then(()=> {\n      console.log('gapi initialized...')\n      const auth = window.gapi.auth2.getAuthInstance()\n      const isSignedIn = auth.isSignedIn.get()\n      setIsSignedIn(isSignedIn)\n      console.log(isSignedIn)\n      auth.isSignedIn.listen(isSignedIn => {\n        setIsSignedIn(isSignedIn)\n      })\n    })\n})\n}\n\n\n  const ifUserSignedIn = (Component) => {\n    console.log(isSignedIn)\n    if (isSignedIn === null){\n      return(\n        <h1>Checking if you are signed in...</h1>\n      )\n    }\n    return isSignedIn ? <Component/> : <LoginPage/>\n  }\n\n  return (\n   <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<LandingPage/>} exact></Route>\n        <Route path=\"/dashboard\" element={ ifUserSignedIn(Dashboard)}/>\n      </Routes>\n   \n   </BrowserRouter> \n  )\n}\n\nexport default Application",["403","404"],"/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuth3.js",["405","406"],"import React, { useState, useEffect } from 'react'\n// import '../../bookface.css'\n\nconst GoogleAuth3 = ({isSignedIn, googleTest}) => {\n    \n    useEffect(()=> {\n        window.gapi.load('signin2', () => {\n            const params = {\n                onsuccess: (user) => {\n                    console.log(user)\n                    let response = user.getAuthResponse()\n                    console.log(response)\n                    googleTest(response.id_token)\n                },\n                'theme': 'dark',\n                'width': 370,\n                'height': 85,\n                longtitle: true\n            }\n            window.gapi.signin2.render('loginButton', params )\n          })\n    },[])\n   \n    if (isSignedIn === null){\n      return(\n        <h1>Checking if you are signed in...</h1>\n      )\n    }\n\n    return (\n        <>\n        <div className=\"googleAuthContainer\">\n            <div\n            id=\"loginButton\"\n            >Inicia sesion con Google</div>\n        </div>    \n        \n        </>\n    )\n    \n    // return isSignedIn ? <h1>You are logged in</h1> : <h1>You are NOT logged in</h1>\n  \n}\n\nexport default GoogleAuth3","/Users/p3rolix/code/landingSh3ckFE/src/views/homeTest.js",["407","408","409","410"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../components/navBar/navBar'\nimport SideBar from '../components/sideBar/sideBar'\nimport LoginSideBar from '../components/loginSideBar/loginSideBar'\nimport MainSideBar from '../components/mainSideBar/mainSideBar'\n\nimport HeroSection from '../components/heroSection/heroSection'\nimport VideoSection from '../components/videoSection/videoSection'\nimport HiwSection from '../components/hiwSection/hiwSection'\n\nimport useMobilDetection from '../utils/mobilDetection'\nimport useMobilDetect from '../utils/mobilHook'\nimport NavBarMobil from '../components/navBar/navBarMobil'\nimport ContactSection from '../components/contactSection/contactSection'\nimport FooterSection from '../components/footerSection/footerSection'\nimport LoadingSpinner from '../utils/loadingSpinner'\n\n\n// f31c5fee13aef74568ac client id\n// 5029d96a85c6c31586054f0c2d8d3010d8fdae69  client secret\n\nconst HomeTest = () => {\n\n    const [ isOpen, setIsOpen ] = useState(false)\n    const [ loggedIn, setLoggedIn ] = useState(false)\n    const [ loggedOut, setLoggedOut ] = useState(true)\n    const [currentUser, setCurrentUser ] = useState('')\n    const [ loginSideBarOpen, setLoginSideBarOpen ] = useState(false)\n    const [ mainSideBarOpen, setMainSideBarOpen ] = useState(false)\n    const [ loginResponse, setLoginResponse ] = useState(null)\n    const [ loading, setLoading ] = useState(false)\n    const [ language, setLanguage ] = useState('ES')\n\n    // Google OAuth States *****************************************\n    const [googleUser, setGoogleUser] = useState({\n        fullName: '',\n        email: '',\n        id: '',\n        imageUrl: '',\n        token_id: ''\n    })\n    const [ loginData, setLoginData ] = useState(null)\n    const [isSignedIn, setIsSignedIn] = useState(null)\n    // console.log(isSignedIn)\n    // **************************************************************\n    \n    \n    const mobil = useMobilDetect()\n    const mobil2 = useMobilDetection()\n    // const url_userLogin = \"http://192.168.1.102:5000/api/users/login\"\n    const url_userLoginITC = \"https://intense-atoll-00786.herokuapp.com/api/users/login\"\n    let auth\n    useEffect(() => {\n        gettingTokenForLocalSignIn()\n        insertGapiScript()\n    },[])\n\n    const gettingTokenForLocalSignIn = () => {\n        const getToken = async() => {\n            const token = localStorage.getItem('SH3CK_TOKEN')\n            if (token){\n                const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n                    headers:{\n                        // 'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}` \n                    } \n                })\n                console.log(response.data)\n                setCurrentUser(response.data)\n                return setLoggedIn(true)\n            }\n            setLoggedIn(false)\n            setLoggedOut(true)\n            \n            \n        }   \n        getToken()\n    }\n\n    \n\n    const handlingSubmitLoginUser = async(user) => {    \n        try {\n            const { data } = await axios.post(url_userLoginITC, user)\n            console.log(data)\n            localStorage.setItem('SH3CK_TOKEN', data.token)\n            // ******************************************\n            const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n                headers:{\n                    // 'Content-Type': 'application/json',\n                    Authorization: `Bearer ${data.token}` \n                } \n            })\n            setLoginResponse(response)\n            console.log(response.data)\n            setCurrentUser(response.data)\n            setLoading(false)\n            setLoggedIn(true)\n            setLoggedOut(false)\n            console.log('Usuaurio encontrado y hace login')    \n        } catch (error) {\n            console.log(error)\n            setLoginResponse(error.response)\n        }\n    }\n\n    const handlingLogin = (user) => {\n        setLoading(true)\n        setTimeout(async() => {\n            handlingSubmitLoginUser(user)\n            setLoading(false)\n            setLoginSideBarOpen(!loginSideBarOpen)\n        }, 2000);\n    }\n\n    const handlingSubmitLogOutUser = async() => {\n        if (isSignedIn) {\n            const auth = window.gapi.auth2.getAuthInstance()\n            await auth.signOut()\n            setIsSignedIn(false)\n            setMainSideBarOpen(!mainSideBarOpen)\n        }\n        if (loggedIn){\n            localStorage.removeItem('SH3CK_TOKEN')\n            setMainSideBarOpen(!mainSideBarOpen)\n            setLoggedIn(false)\n            setLoggedOut(true)\n        }\n        \n        \n    }\n \n    \n    const toggleSideBar = () => {\n        setIsOpen(!isOpen)\n        \n    } \n    const toggleLoginSideBar = () => {\n        setLoginSideBarOpen(!loginSideBarOpen)\n        \n    }\n    \n    const toggleMainSideBar = () => {\n        setMainSideBarOpen(!mainSideBarOpen)\n    } \n    const toggleNotification = () => {\n        setLoginResponse(null)\n    }\n\n    const toggleLanguage = () => {\n        if (language === 'ES') {\n            setLanguage('EN')\n            return\n        }\n        if (language === 'EN'){\n            setLanguage('ES')\n            return\n        } \n    }\n\n  \n  //  ************* Google OAuth Processes and functions (with googleAuth3) ****************\n\n \n        const insertGapiScript = () => {\n            const script = document.createElement('script')\n            script.src = \"https://apis.google.com/js/platform.js\"\n            script.onload = () => {\n                initializeGooglesignIn()\n            }\n            document.body.appendChild(script)\n          } \n          \n          const initializeGooglesignIn = () => {\n            window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n              client_id: '915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com',\n              scope:'profile'\n            }).then(()=> {\n            console.log('gapi initialized...')\n            auth = window.gapi.auth2.getAuthInstance()\n            const isSignedIn = auth.isSignedIn.get()\n            {isSignedIn ? setLoggedIn(true) : setLoggedIn(false)}\n            setIsSignedIn(isSignedIn)\n            console.log(isSignedIn)\n            auth.isSignedIn.listen(isSignedIn => {\n                setIsSignedIn(auth.isSignedIn.get())\n            })   \n            })\n          })\n          \n        }\n        const googleTest = async(token) => {\n            // const test = JSON.parse(user)\n            // *****************************************\n            try {\n                console.log('Sending request to BackEnd api...')\n                console.log(token)\n                const res = await axios.post('https://intense-atoll-00786.herokuapp.com/api/extUsers/google', {\n                    token,\n                    headers:{\n                        'Content-Type': 'application/json',\n                    },\n                })\n                console.log(res)\n                // const res = await axios.post('http://localhost:5000/api/extUsers/google',token)\n                const data = await res.data\n                if (res.status === 201){\n                    console.log(data)\n                    setLoginData(data)   \n                    setCurrentUser(data.fullName)\n                    setLoggedIn(true) \n                    setLoggedOut(false)\n                    return res.status\n                }\n            } catch (error) {\n                console.log(error)\n                console.log(error.response.data)\n                setCurrentUser(error.response.data.fullName)\n                setLoginData(error.response.data)\n                setLoggedIn(true) \n                setLoggedOut(false)\n            }\n            // *************************************************\n            \n            // setLoggedIn(true)\n            // setLoggedOut(false)\n            \n        }\n// console.log(googleUser)\n// console.log(loginData)\n    \n    return (\n        <>\n            { loading ?\n            <LoadingSpinner/>\n            :\n            null\n            }\n            \n            {/* {!loggedIn && loginSideBarOpen ? */}\n            <LoginSideBar\n            loginSideBarOpen={ loginSideBarOpen } \n            toggleLoginSideBar={ toggleLoginSideBar }\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            handlingLogin={handlingLogin}\n            loading = {loading}\n            language={language}\n            />\n            {/* : null */}\n            {/* } */}\n\n            {/* {!loggedOut && logoutSideBarOpen ? */}\n            <MainSideBar\n            mainSideBarOpen={mainSideBarOpen}\n            toggleMainSideBar={toggleMainSideBar}\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            handlingSubmitLogOutUser={handlingSubmitLogOutUser}\n            username={currentUser}\n            language={language}\n            loginData={loginData}           \n            />\n            {/* : null */}\n            {/* } */}\n            \n            <SideBar \n            isOpen={ isOpen } \n            toggleSideBar={ toggleSideBar }\n            language={language}\n            toggleLanguage={toggleLanguage}\n            />\n            \n            { mobil2.screenWidth <= 1098 || mobil ?  \n                <NavBarMobil \n                toggleLoginSideBar={toggleLoginSideBar}\n                toggleMainSideBar={toggleMainSideBar}\n                toggleSideBar={ toggleSideBar }  \n                username={currentUser}\n                login={ loggedIn }\n                language={language}\n                // onLogin={ onLogin }\n            /> : <NavBar\n            toggleLoginSideBar={toggleLoginSideBar}\n            toggleMainSideBar={toggleMainSideBar} \n            username={currentUser}\n            login={ loggedIn }\n            language={language}\n            // onLogin={ onLogin }\n        />\n            }\n            <HeroSection language={language} />\n            <VideoSection language={language}/>\n            <HiwSection language={language}/>\n            <ContactSection \n            language={language}\n            loggedIn={loggedIn}\n            isSignedIn={isSignedIn}\n            handlingSubmitLoginUser={ handlingSubmitLoginUser}\n            loginResponse={loginResponse}\n            toggleNotificationLogin={toggleNotification}\n            googleTest={googleTest}\n            />\n            <FooterSection language={language}/>\n        </>\n    )\n}\n\nexport default HomeTest\n","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuth4.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/views/homeTest2.js",["411"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../components/navBar/navBar'\nimport SideBar from '../components/sideBar/sideBar'\nimport LoginSideBar from '../components/loginSideBar/loginSideBar'\nimport MainSideBar from '../components/mainSideBar/mainSideBar'\nimport HeroSection from '../components/heroSection/heroSection'\nimport VideoSection from '../components/videoSection/videoSection'\nimport HiwSection from '../components/hiwSection/hiwSection'\nimport useMobilDetection from '../utils/mobilDetection'\nimport useMobilDetect from '../utils/mobilHook'\nimport NavBarMobil from '../components/navBar/navBarMobil'\nimport ContactSectionTest from '../components/contactSection/contactSectionTest'\nimport FooterSection from '../components/footerSection/footerSection'\nimport NextStepSection from '../components/nextStepSection.js/nextStepSection'\nimport LoadingSpinner from '../utils/loadingSpinner'\n\n\n// f31c5fee13aef74568ac client id\n// 5029d96a85c6c31586054f0c2d8d3010d8fdae69  client secret\n\nconst HomeTest2 = () => {\n\n    const [ isOpen, setIsOpen ] = useState(false)\n    const [ loggedIn, setLoggedIn ] = useState(false)\n    const [ loggedOut, setLoggedOut ] = useState(true)\n    const [currentUser, setCurrentUser ] = useState('')\n    const [ loginSideBarOpen, setLoginSideBarOpen ] = useState(false)\n    const [ mainSideBarOpen, setMainSideBarOpen ] = useState(false)\n    const [ loginResponse, setLoginResponse ] = useState(null)\n    const [ loading, setLoading ] = useState(false)\n    const [ language, setLanguage ] = useState('ES')\n    const [ regView, setRegView ] = useState(false)\n    const [ active , setActive ] = useState(null)\n    const [ contactSectionOpen, setContactSectionOpen ] = useState(false)\n    const [ forgotPIN, setForgotPIN ] = useState(false)\n\n\n    // Google OAuth States *****************************************\n  \n    const [ loginData, setLoginData ] = useState(null)\n    const [isSignedIn, setIsSignedIn] = useState(null)\n    \n    const mobil = useMobilDetect()\n    const mobil2 = useMobilDetection()\n    // const url_userLogin = \"http://192.168.1.102:5000/api/users/login\"\n    const url_userLoginITC = \"https://intense-atoll-00786.herokuapp.com/api/users/login\"\n    useEffect(() => {\n        gettingTokenForLocalSignIn()\n        window.onload = function () {\n            window.google.accounts.id.initialize({\n              client_id: \"915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com\",\n              context: 'signin',\n              //   ux_mode: \"redirect\", \n              callback: handleCredentialResponse,\n            })\n        }\n    },[])\n\n    const gettingTokenForLocalSignIn = () => {\n        const getToken = async() => {\n            const token = localStorage.getItem('SH3CK_TOKEN')\n            if (token){\n                const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n                    headers:{\n                        // 'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}` \n                    } \n                })\n                console.log(response.data)\n                setCurrentUser(response.data)\n                return setLoggedIn(true)\n            }\n            setLoggedIn(false)\n            setLoggedOut(true)\n            \n            \n        }   \n        getToken()\n    }\n\n    \n\n    const handlingSubmitLoginUser = async(user) => {    \n        try {\n            const { data } = await axios.post(url_userLoginITC, user)\n            console.log(data)\n            localStorage.setItem('SH3CK_TOKEN', data.token)\n            // ******************************************\n            const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n                headers:{\n                    // 'Content-Type': 'application/json',\n                    Authorization: `Bearer ${data.token}` \n                } \n            })\n            setLoginResponse(response)\n            console.log(response.data)\n            setCurrentUser(response.data)\n            setLoading(false)\n            setLoggedIn(true)\n            setLoggedOut(false)\n            console.log('Usuaurio encontrado y hace login')    \n        } catch (error) {\n            console.log(error)\n            setLoginResponse(error.response)\n        }\n    }\n\n    const handlingLogin = (user) => {\n        setLoading(true)\n        setTimeout(async() => {\n            handlingSubmitLoginUser(user)\n            setLoading(false)\n            setLoginSideBarOpen(!loginSideBarOpen)\n        }, 2000);\n    }\n\n    const handlingSubmitLogOutUser = async() => {\n        if (isSignedIn) {\n            // window.google.accounts.id.disableAutoSelect()\n            // const auth = window.gapi.auth2.getAuthInstance()\n            // await auth.signOut()\n            // setIsSignedIn(false)\n            setMainSideBarOpen(!mainSideBarOpen)\n        }\n        if (loggedIn){\n            console.log('pasando por aqui')\n            localStorage.removeItem('google_token')\n            window.google.accounts.id.disableAutoSelect()\n            setMainSideBarOpen(!mainSideBarOpen)\n            setLoggedIn(false)\n            setLoggedOut(true)\n        }\n        \n        \n    }\n \n    const toggleRegView = () => {\n        // setResponse(null)\n        setRegView(true)\n    }\n\n    const handlingCheckUser = () => {\n        setActive('check')\n        setContactSectionOpen(true)\n        setRegView(false)\n        setForgotPIN(false)\n    }\n\n    const handlingInterestedUser = () => {\n        setActive('interested')\n        setContactSectionOpen(true)\n        setRegView(false)\n    }\n    const settinRegViewAndForgotPINToFalse = () => {\n        setRegView(false)\n        setForgotPIN(false)\n    }\n\n    const toggleForgotPINState = () => {\n        setForgotPIN(!forgotPIN)\n    }\n    \n    const toggleSideBar = () => {\n        setIsOpen(!isOpen)\n        \n    } \n    const toggleLoginSideBar = () => {\n        setLoginSideBarOpen(!loginSideBarOpen)\n        \n    }\n    \n    const toggleMainSideBar = () => {\n        setMainSideBarOpen(!mainSideBarOpen)\n    } \n    const toggleNotification = () => {\n        setLoginResponse(null)\n    }\n\n    const toggleLanguage = () => {\n        if (language === 'ES') {\n            setLanguage('EN')\n            return\n        }\n        if (language === 'EN'){\n            setLanguage('ES')\n            return\n        } \n    }\n\n  \n//  ************* Google OAuth Processes and functions (with googleAuth4) ****************\n\n        const handleCredentialResponse = async(response) => {\n            console.log(\"Encoded JWT ID token: \" + response.select_by)\n            response.credential ? setLoggedIn(true) : setLoggedIn(false)\n            const token = response.credential\n        try {\n            console.log('Sending request to BackEnd api...')\n            console.log(token)\n            localStorage.setItem('google_token', token)\n            const res = await axios.post('https://intense-atoll-00786.herokuapp.com/api/extUsers/google', {\n                token,\n                headers:{\n                    'Content-Type': 'application/json',\n                },\n            })\n            console.log(res.data)\n            if (res.status === 201){\n                console.log(res.data)\n                setLoginData(res.data)   \n                setCurrentUser(res.data.fullName)\n                setLoggedIn(true) \n                setLoggedOut(false)\n                return res.status\n            }\n            // const res = await axios.post('http://localhost:5000/api/extUsers/google',token)\n            \n        } catch (error) {\n            console.log(error)\n            console.log(error.response.data)\n            setCurrentUser(error.response.data.fullName)\n            setLoginData(error.response.data)\n            setLoggedIn(true) \n            setLoggedOut(false)\n        }\n        }\n\n\n    \n    return (\n        <>\n            { loading ?\n            <LoadingSpinner/>\n            :\n            null\n            }\n            \n            {/* {!loggedIn && loginSideBarOpen ? */}\n            <LoginSideBar\n            loginSideBarOpen={ loginSideBarOpen } \n            toggleLoginSideBar={ toggleLoginSideBar }\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            handlingLogin={handlingLogin}\n            loading = {loading}\n            language={language}\n            />\n            {/* : null */}\n            {/* } */}\n\n            {/* {!loggedOut && logoutSideBarOpen ? */}\n            <MainSideBar\n            mainSideBarOpen={mainSideBarOpen}\n            toggleMainSideBar={toggleMainSideBar}\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            handlingSubmitLogOutUser={handlingSubmitLogOutUser}\n            username={currentUser}\n            language={language}\n            loginData={loginData}           \n            />\n            {/* : null */}\n            {/* } */}\n            \n            <SideBar \n            isOpen={ isOpen } \n            toggleSideBar={ toggleSideBar }\n            language={language}\n            toggleLanguage={toggleLanguage}\n            />\n            \n            { mobil2.screenWidth <= 1098 || mobil ?  \n                <NavBarMobil \n                toggleLoginSideBar={toggleLoginSideBar}\n                toggleMainSideBar={toggleMainSideBar}\n                toggleSideBar={ toggleSideBar }  \n                username={currentUser}\n                login={ loggedIn }\n                language={language}\n                \n            /> : <NavBar\n            toggleLoginSideBar={toggleLoginSideBar}\n            toggleMainSideBar={toggleMainSideBar} \n            username={currentUser}\n            login={ loggedIn }\n            language={language}\n            \n        />\n            }\n            <HeroSection language={language} />\n            <VideoSection language={language}/>\n            <HiwSection language={language}/>\n            <NextStepSection\n            handlingInterestedUser={handlingInterestedUser}\n            handlingCheckUser={handlingCheckUser} \n            language={language}\n            />\n            <ContactSectionTest \n            language={language}\n            loggedIn={loggedIn}\n            isSignedIn={isSignedIn}\n            handlingSubmitLoginUser={ handlingSubmitLoginUser}\n            loginResponse={loginResponse}\n            toggleNotificationLogin={toggleNotification}\n            active={active}\n            regView={regView}\n            contactSectionOpen={contactSectionOpen}  \n            forgotPIN={forgotPIN}\n            toggleRegView={toggleRegView}\n            settinRegViewAndForgotPINToFalse={settinRegViewAndForgotPINToFalse}\n            toggleForgotPINState={toggleForgotPINState}\n            \n            />\n            <FooterSection language={language}/>\n        </>\n    )\n}\n\nexport default HomeTest2\n","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuth5.js",["412"],"import React, { useState, useEffect } from 'react'\nimport { FcGoogle } from 'react-icons/fc'\nimport { infoContact } from '../../utils/data'\n// import '../../bookface.css'\n\nconst GoogleAuth5 = ({googleTest, language}) => {\n\n    // var googleUser = {}\n    \n    useEffect(()=> {\n        window.gapi.load('auth2', () => {\n            // Retrieve the singleton for the GoogleAuth library and set up the client.\n            const auth = window.gapi.auth2.getAuthInstance()\n            // console.log(auth)\n            const element = document.getElementById('googleAuth5')\n            auth.attachClickHandler(element, {},\n                function(googleUser) {\n                    console.log(googleUser)\n                    let response = googleUser.getAuthResponse()\n                    console.log(response)\n                    console.log(response.id_token)\n                    googleTest(googleUser, response.id_token)\n            })\n        },[])\n    })\n\n    return (\n        <>\n        {/* <div className=\"googleAuthContainer\"> */}\n            <div\n            id=\"googleAuth5\"\n            >\n                <div className=\"googleIcon\">\n                <FcGoogle className=\"fcGoogle\"/>\n\n                </div>\n                <div className=\"googleAuth5_label\">{language === 'ES' ? infoContact.loginFormGoogleButton : infoContact.loginFormGoogleButton_EN}</div></div>\n                {/* {language === 'ES' ? infoContact.loginFormGoogleButton : infoContact.loginFormGoogleButton_EN}</div> */}\n        {/* </div>   */}\n\n         \n        \n        </>\n    )\n    \n    // return isSignedIn ? <h1>You are logged in</h1> : <h1>You are NOT logged in</h1>\n  \n}\n\nexport default GoogleAuth5","/Users/p3rolix/code/landingSh3ckFE/src/views/homeTest3.js",["413","414"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../components/navBar/navBar'\nimport SideBar from '../components/sideBar/sideBar'\nimport LoginSideBar from '../components/loginSideBar/loginSideBar'\nimport MainSideBar from '../components/mainSideBar/mainSideBar'\nimport HeroSection from '../components/heroSection/heroSection'\nimport VideoSection from '../components/videoSection/videoSection'\nimport HiwSection from '../components/hiwSection/hiwSection'\nimport useMobilDetection from '../utils/mobilDetection'\nimport useMobilDetect from '../utils/mobilHook'\nimport NavBarMobil from '../components/navBar/navBarMobil'\nimport NavBarForCS from '../components/navBar/navBarForCS'\n// import ContactSection from '../components/contactSection/contactSection'\nimport ContactSectionTest from '../components/contactSection/contactSectionTest'\nimport NextStepSection from '../components/nextStepSection.js/nextStepSection'\nimport FooterSection from '../components/footerSection/footerSection'\nimport LoadingSpinner from '../utils/loadingSpinner'\nimport CheckSection from '../components/checkSection/checkSection'\nimport NotificationBox from '../components/notifications/NotificationBox'\nimport { responseDataInterested, responseDataRegister, responseDataLogin, responseDataNewPIN } from '../components/notifications/notificationData'\n\n// Home version for testing separation of NextStepSection and ContactSection\n\nconst HomeTest3 = () => {\n\n    const [ isOpen, setIsOpen ] = useState(false)\n    const [ loggedIn, setLoggedIn ] = useState(false)\n    const [ loggedOut, setLoggedOut ] = useState(true)\n    const [currentUser, setCurrentUser ] = useState('')\n    const [ loginSideBarOpen, setLoginSideBarOpen ] = useState(false)\n    const [ mainSideBarOpen, setMainSideBarOpen ] = useState(false)\n    const [ loginResponse, setLoginResponse ] = useState(null)\n    const [ loading, setLoading ] = useState(false)\n    const [ language, setLanguage ] = useState('ES')\n    const [ regView, setRegView ] = useState(false)\n    const [ forgotPIN, setForgotPIN ] = useState(false)\n    const [ active , setActive ] = useState(null) \n    const [ contactSectionOpen, setContactSectionOpen ] = useState(false)\n    const [ loginSideBarLoading, setLoginSideBarLoading ] = useState(false)\n    const [response, setResponse ] = useState(null)\n\n\n    // Google OAuth States *****************************************\n    const [ loginData, setLoginData ] = useState(null)\n    const [isSignedIn, setIsSignedIn] = useState(null)\n    // console.log(isSignedIn)\n    // **************************************************************\n    \n    \n    const mobil = useMobilDetect()\n    const mobil2 = useMobilDetection()\n    // const url_userLogin = \"http://192.168.1.102:5000/api/users/login\"\n    const url_userLoginITC = \"https://intense-atoll-00786.herokuapp.com/api/users/login\"\n    let auth\n    useEffect(() => {\n        gettingTokenForLocalSignIn()\n        insertGapiScript()\n    },[])\n\n    const gettingTokenForLocalSignIn = () => {\n        const getToken = async() => {\n            const token = localStorage.getItem('SH3CK_TOKEN')\n            if (token){\n                const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n                    headers:{\n                        // 'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}` \n                    } \n                })\n                console.log(response.data)\n                setCurrentUser(response.data)\n                return setLoggedIn(true)\n            }\n            setLoggedIn(false)\n            setLoggedOut(true)\n            \n            \n        }   \n        getToken()\n    }\n\n    // **************************************************************\n\n    const handlingInterestedUser = () => {\n        setActive('interested')\n        setContactSectionOpen(true)\n        setRegView(false)\n    }\n\n    const handlingCheckUser = () => {\n        setActive('check')\n        setContactSectionOpen(true)\n        setRegView(false)\n        setForgotPIN(false)\n    }\n\n    const handlingClosingOfContactSection = () => {\n        setActive(null)\n        setContactSectionOpen(false)\n    }\n\n    const toggleRegView = () => {\n        // setResponse(null)\n        setRegView(true)\n    }\n\n    const settinRegViewAndForgotPINToFalse = () => {\n        setRegView(false)\n        setForgotPIN(false)\n    }\n    const toggleForgotPINState = () => {\n        setForgotPIN(!forgotPIN)\n    }\n    \n    // const toggleNotification = () => {\n    //     setResponse(null)\n    // }\n    // const toggleNotificationLogin = () => {\n    //     setLoginResponse(null)\n    // }\n\n\n    const handlingContactSectionResponse = (response) => {\n        setResponse(response)\n    }\n    \n    const togglingResponseData = () => {\n        if (response && active === 'interested'){\n            return responseDataInterested\n        }\n        if (response && forgotPIN){\n            return responseDataNewPIN\n        }\n        if (response && active === 'check'){\n            return responseDataRegister\n        }\n        if (loginResponse && active === 'check'){\n            return responseDataLogin\n        } \n    }\n    // ***************************************************************\n\n\n    const handlingSubmitLoginUser = async(user) => {\n        setLoginSideBarOpen(false)   \n        setLoading(true)\n        setTimeout(async() => {\n            try {\n                const { data } = await axios.post(url_userLoginITC, user)\n                console.log(data)\n                localStorage.setItem('SH3CK_TOKEN', data.token)\n                // ******************************************\n                const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n                    headers:{\n                        // 'Content-Type': 'application/json',\n                        Authorization: `Bearer ${data.token}` \n                    } \n                })\n                console.log(response.data)\n                setLoginResponse(response)\n                // console.log(response.data)\n                setCurrentUser(response.data)\n                setLoading(false)\n                setLoggedIn(true)\n                setLoggedOut(false)\n                console.log('Usuaurio encontrado y hace login')    \n            } catch (error) {\n                console.log(error)\n                setLoginResponse(error.response)\n                setLoading(false)\n            }\n        },3000)\n        \n    }\n\n    const handlingSubmitLogOutUser = async() => {\n        \n        if (isSignedIn) {\n            console.log('pasa por isSignedIn')\n            const auth = window.gapi.auth2.getAuthInstance()\n            await auth.signOut()\n            setLoginData(null)\n            setIsSignedIn(false)\n            setActive(null)\n            setMainSideBarOpen(!mainSideBarOpen)\n            setLoginResponse(null)\n            setContactSectionOpen(false)\n        }\n        if (loggedIn){\n            console.log('pasa por loggedIn')\n            localStorage.removeItem('SH3CK_TOKEN')\n            setLoginResponse(null)\n            setActive(null)\n            setMainSideBarOpen(!mainSideBarOpen)\n            setLoggedIn(false)\n            setLoggedOut(true)\n            setContactSectionOpen(false)\n        }\n        \n        \n    }\n \n    const gettingOutOfCheckApp = async() => {\n        localStorage.removeItem('SH3CK_TOKEN')\n        setIsSignedIn(false)\n        setLoggedIn(false)\n        setActive(null)\n        setContactSectionOpen(false)\n        setRegView(false)\n        setLoginData(null)\n        setLoginResponse(null)\n        setResponse(null)\n        \n    }\n    \n    const toggleSideBar = () => {\n        setIsOpen(!isOpen)\n        \n    } \n    const toggleLoginSideBarToOpen = () => {\n        setLoginSideBarOpen(true)\n        \n    }\n    const toggleLoginSideBarToClose = () => {\n        setLoginSideBarOpen(false)\n    }\n    \n    const toggleMainSideBar = () => {\n        setMainSideBarOpen(!mainSideBarOpen)\n    } \n    const toggleNotification = () => {\n        setResponse(null)\n        setLoginResponse(null)\n        // setActive('check')\n        // setLoggedIn(false)\n\n        setActive(null)\n        setContactSectionOpen(false)\n    }\n\n    const toggleLanguage = () => {\n        if (language === 'ES') {\n            setLanguage('EN')\n            return\n        }\n        if (language === 'EN'){\n            setLanguage('ES')\n            return\n        } \n    }\n\n    const workingSpinner = (option) => {\n        console.log(option)\n        switch (option) {\n            case 'activate':\n                setLoading(true)\n                break\n            case 'close':\n                setLoading(false)\n                break\n            default:\n                setLoading(false)\n                break;\n        }\n        \n    } \n    \n\n  \n  //  ************* Google OAuth Processes and functions (with googleAuth5) ****************\n\n \n        const insertGapiScript = () => {\n            const script = document.createElement('script')\n            script.src = \"https://apis.google.com/js/platform.js\"\n            script.onload = () => {\n                initializeGooglesignIn()\n            }\n            document.body.appendChild(script)\n          } \n          \n          const initializeGooglesignIn = () => {\n            window.gapi.load('client:auth2', () => {\n              window.gapi.client.init({\n                client_id: '915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com',\n                scope:'profile'\n              }).then(()=> {\n              console.log('gapi initialized...')\n            //   const response = window.gapi.auth2.getAuthResponse()\n            //   console.log(response)\n              auth = window.gapi.auth2.getAuthInstance()\n              const isSignedIn = auth.isSignedIn.get()\n            //   {isSignedIn ? setLoggedIn(true) : setLoggedIn(false)}\n              setIsSignedIn(isSignedIn)\n              console.log(isSignedIn)\n              auth.isSignedIn.listen(isSignedIn => {\n                  setIsSignedIn(auth.isSignedIn.get())\n              })   \n              })\n          })\n          \n        }\n        const googleTest = async(user, token) => {\n            // const test = JSON.parse(user)\n            // *****************************************\n            try {\n                console.log('Sending request to BackEnd api...')\n                console.log(token)\n                const res = await axios.post('https://intense-atoll-00786.herokuapp.com/api/extUsers/google', {\n                    token,\n                    headers:{\n                        'Content-Type': 'application/json',\n                    },\n                })\n                console.log(res)\n                // const res = await axios.post('http://localhost:5000/api/extUsers/google',token)\n                const data = res.data\n                if (res.status === 201){\n                    console.log(data)\n                    setLoginData(data)   \n                    setCurrentUser(data.fullName)\n                    setLoggedIn(true) \n                    setLoggedOut(false)\n                    return res.status\n                }\n            } catch (error) {\n                console.log(error)\n                console.log(error.response.data)\n                setCurrentUser(error.response.data.fullName)\n                setLoginData(error.response.data)\n                setLoggedIn(true) \n                setLoggedOut(false)\n            }\n            // *************************************************\n            \n            // setLoggedIn(true)\n            // setLoggedOut(false)\n            \n        }\n// console.log(googleUser)\n// console.log(loginData)\n    console.log(loggedIn)\n    return (\n    <>\n    {\n        loggedIn ?\n        <>\n            <MainSideBar\n            mainSideBarOpen={mainSideBarOpen}\n            toggleMainSideBar={toggleMainSideBar}\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            handlingSubmitLogOutUser={handlingSubmitLogOutUser}\n            username={currentUser}\n            language={language}\n            loginData={loginData}           \n            />\n            {/* { mobil2.screenWidth <= 1098 || mobil ?   */}\n                <NavBarForCS\n                toggleLoginSideBarToOpen={toggleLoginSideBarToOpen}\n                toggleMainSideBar={toggleMainSideBar}\n                toggleSideBar={ toggleSideBar }  \n                login={ loggedIn }\n                language={language}\n                \n            /> \n            {/* : <NavBar\n            toggleLoginSideBarToOpen={toggleLoginSideBarToOpen}\n            toggleMainSideBar={toggleMainSideBar} \n            login={ loggedIn }\n            language={language}\n            /> */}\n            {/* } */}\n\n            <CheckSection \n             toggleLoginSideBarToOpen={toggleLoginSideBarToOpen}\n             toggleMainSideBar={toggleMainSideBar}\n             toggleSideBar={ toggleSideBar }  \n             login={ loggedIn }\n            gettingOutOfCheckApp={gettingOutOfCheckApp}\n            language={language}\n            />\n        </>\n    : null\n    }\n      \n    {\n        !loggedIn ?\n        <>\n            <LoadingSpinner \n            loading={loading}\n            language={language}\n            />\n            {response || loginResponse ?\n            <NotificationBox\n            toggleNotification={toggleNotification} \n            // response={response ? response : null }\n            response={response ? response : loginResponse }\n            responseData={togglingResponseData()} \n            language={language}\n             />\n             :\n             null\n            }\n            \n   \n            <LoginSideBar\n            loginSideBarOpen={loginSideBarOpen}\n            toggleLoginSideBarToClose={ toggleLoginSideBarToClose }\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            loading = {loading}\n            language={language}\n            loginSideBarLoading={loginSideBarLoading}\n            handlingSubmitLoginUser={ handlingSubmitLoginUser}\n            />\n           \n            <MainSideBar\n            mainSideBarOpen={mainSideBarOpen}\n            toggleMainSideBar={toggleMainSideBar}\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            handlingSubmitLogOutUser={handlingSubmitLogOutUser}\n            username={currentUser}\n            language={language}\n            loginData={loginData}           \n            />\n            \n            <SideBar \n            isOpen={ isOpen } \n            toggleSideBar={ toggleSideBar }\n            language={language}\n            toggleLanguage={toggleLanguage}\n            />\n            \n            { mobil2.screenWidth <= 1098 || mobil ?  \n                <NavBarMobil \n                toggleLoginSideBarToOpen={toggleLoginSideBarToOpen}\n                toggleMainSideBar={toggleMainSideBar}\n                toggleSideBar={ toggleSideBar }  \n                login={ loggedIn }\n                language={language}\n                \n            /> : <NavBar\n            toggleLoginSideBarToOpen={toggleLoginSideBarToOpen}\n            toggleMainSideBar={toggleMainSideBar} \n            login={ loggedIn }\n            language={language}\n            />\n            }\n            <HeroSection language={language} />\n            <VideoSection language={language}/>\n            <HiwSection language={language}/>\n            <NextStepSection\n            handlingInterestedUser={handlingInterestedUser}\n            handlingCheckUser={handlingCheckUser} \n            language={language}\n            />\n            {\n                !loggedIn ?\n                <ContactSectionTest\n                active={active}\n                regView={regView}\n                forgotPIN={forgotPIN}\n                loggedIn={loggedIn}\n                isSignedIn={isSignedIn}\n                handlingSubmitLoginUser={ handlingSubmitLoginUser}\n                // loginResponse={loginResponse}\n                toggleNotificationLogin={toggleNotification}\n                googleTest={googleTest}\n                language={language}\n                toggleRegView={toggleRegView}\n                settinRegViewAndForgotPINToFalse={settinRegViewAndForgotPINToFalse}\n                toggleForgotPINState={toggleForgotPINState}\n                contactSectionOpen={contactSectionOpen}\n                workingSpinner={workingSpinner}\n                handlingClosingOfContactSection={handlingClosingOfContactSection}\n                handlingContactSectionResponse={handlingContactSectionResponse}\n                />\n                :\n                null\n            }\n            <FooterSection language={language}/>\n        </>\n        : null\n            \n    }\n        \n    </>\n    )\n}\n\nexport default HomeTest3\n","/Users/p3rolix/code/landingSh3ckFE/src/components/nextStepSection.js/nextStepSection.js",["415","416"],"import React, { useState } from 'react'\nimport { Link as LinkS } from 'react-scroll'\n\n\n// import LoginFormTest from './loginFormTest'\n\nimport picture from '../../images/2034873_chat_app_media_mobile_social_icon.svg'\nimport icon1 from '../../images/1783048_content_mobile_notification_push_icon.svg'\nimport icon2 from '../../images/7681162_courier_delivery_scooter_box_icon.svg'\nimport arrow from '../../images/3927254_arrow_arrow right_caret_caret right_chevron_icon.svg'\nimport FormHeader from '../contactSection/formHeader'\n\nimport { infoNextStep } from '../../utils/data'\n\nconst NextStepSection = ({\n    language,\n    handlingInterestedUser,\n    handlingCheckUser\n}) => {\n   \nreturn (\n   \n    <div \n    id={infoNextStep.id}\n    className=\"nextStepContainer\">\n        <div className=\"nextStepWrapper\">\n            <div className=\"nextStepInfo\">\n                <div className=\"nextStepInfoTitleContainer\">\n                    <p className=\"nextStepInfoTopLine\">\n                        {language === 'ES' ? infoNextStep.nextStepInfoTopLine : infoNextStep.nextStepInfoTopLine_EN}\n                    </p>\n                    <h1 className=\"nextStepInfoTitle1\"> {language === 'ES' ? infoNextStep.nextStepInfoTitle1 : infoNextStep.nextStepInfoTitle1_EN} </h1>\n                </div>\n            </div>\n            <div className=\"NextStepOptionsContainer\">\n                <div className=\"nextStepInfoImageContainer\">\n                    <img \n                    className=\"nextStepInfoImage\"\n                    src={picture} alt=\"\" />\n                </div>\n                \n                <div className=\"NextStepOptionsButtonsContainer\">\n                    <div className=\"nextStepOption1_container\">\n                        <div className=\"nextStepOption1_icon\">\n                            <img \n                            className=\"nextStepInfoIcon\"\n                            src={icon1} alt=\"\" />\n                        </div>\n                        <LinkS\n                        to=\"contactSectionTest\"  \n                        activeClass=\"active\"\n                        spy={true}\n                        smooth={true}\n                        offset={-130}\n                        duration={500}\n                        className=\"nextStepOption1\"\n                        type=\"submit\"\n                        onClick={handlingInterestedUser}\n                        >\n                        <span>{language === 'ES' ? infoNextStep.nextStepButtonLabel_1 : infoNextStep.nextStepButtonLabel_1_EN}</span>\n                        </LinkS>\n                        {/* <button\n                        className=\"nextStepOption1\"\n                        type=\"submit\"\n                        onClick={handlingInterestedUser}\n                        >\n                        <span>Notificame cuando la app este lista</span>\n                        </button> */}\n                        <div className=\"nextStepOption1_arrow\">\n                            <img \n                                className=\"nextStepInfoArrow\"\n                                src={arrow} alt=\"\" />\n                        </div>\n                    </div>\n                    <div className=\"nextStepOption2_container\">\n                        <div className=\"nextStepOption2_icon\">\n                            <img \n                            className=\"nextStepInfoIcon\"\n                            src={icon2} alt=\"\" />\n                        </div>\n                        <LinkS\n                        to=\"contactSectionTest\"  \n                        activeClass=\"active\"\n                        spy={true}\n                        smooth={true}\n                        offset={-140}\n                        duration={500}\n                        className=\"nextStepOption2\"\n                        type=\"submit\"\n                        onClick={handlingCheckUser}\n                        >\n                            <span>{language === 'ES' ? infoNextStep.nextStepButtonLabel_2 : infoNextStep.nextStepButtonLabel_2_EN}</span>\n                        </LinkS>\n                        <div className=\"nextStepOption2_arrow\">\n                            <img \n                                className=\"nextStepInfoArrow\"\n                                src={arrow} alt=\"\" />\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n        \n    </div>\n)\n}\n\nexport default NextStepSection\n","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/contactSectionTest.js",["417","418","419","420","421"],"import React, { useState } from 'react'\nimport InterestedUsersForm from '../contactSection/interestedUserForm'\nimport LoginForm from './loginForm'\nimport axios from 'axios'\nimport FormHeader from './formHeader'\nimport { responseDataInterested, responseDataRegister, responseDataLogin, responseDataNewPIN } from '../notifications/notificationData'\nimport { infoContact } from '../../utils/data'\n\nconst ContactSectionTest = ({\n    language,\n    loggedIn,\n    handlingSubmitLoginUser,\n    // loginResponse,\n    // toggleNotificationLogin,\n    isSignedIn,\n    googleTest,\n    active,\n    regView,\n    forgotPIN,\n    toggleRegView,\n    settinRegViewAndForgotPINToFalse,\n    toggleForgotPINState,\n    contactSectionOpen,\n    workingSpinner,\n    handlingClosingOfContactSection,\n    handlingContactSectionResponse\n\n}) => {\n   \n    // const url_interestedUsers = \"http://192.168.1.102:5000/api/interestedUsers\"\n    // const url_users = \"http://192.168.1.102:5000/api/users\"\n    const url_interestedUsersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/interestedUsers\"\n    const url_usersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/users\"\n    const url_generatePIN_ITC = \"https://intense-atoll-00786.herokuapp.com/api/users/newPIN\"\n    \n\n    \n    const handlingSubmitInterestedUser = (interestedUser) => {\n        \n        workingSpinner('activate')\n        setTimeout(async()=> {\n            try {\n                const response = await axios.post(url_interestedUsersInTheCloud, interestedUser)\n                    console.log(response)\n                    if (response.status === 201){\n                        handlingContactSectionResponse(response)\n                        workingSpinner('close')\n                        console.log('Gracias por enviarnos tus datos, estaremos en contacto...')\n                        return response.status\n                    }\n            } catch (error) {\n                console.log(error.response)\n                workingSpinner('close')\n                handlingContactSectionResponse(error.response)\n            }\n        },2000)\n        \n    }\n\n    const handlingSubmitUser = async(user) => {\n        workingSpinner('activate')\n        setTimeout(async()=> {\n            try {\n                const response = await axios.post(url_usersInTheCloud, user)\n                    console.log(response)\n                    if (response.status === 201){\n                        handlingContactSectionResponse(response)\n                        workingSpinner('close')\n                        settinRegViewAndForgotPINToFalse()\n                        console.log('Gracias por registrarte')\n                        return response.status\n                    }\n            } catch (error) {\n                console.log(error)\n                workingSpinner('close')\n                handlingContactSectionResponse(error.response)\n            }\n        },2000)\n    } \n\n    const handlingNewPINRequest = async(dataToRequest) => {\n        // console.log(dataToRequest)\n        workingSpinner('activate')\n        try {\n            const response = await axios.put(url_generatePIN_ITC, dataToRequest)\n            console.log(response.status)\n            if (response.status === 200){\n                console.log(response)\n                handlingContactSectionResponse(response)\n                workingSpinner('close')\n                return response.status\n            }\n        } catch (error) {\n            console.log(error)\n            workingSpinner('close')\n            handlingContactSectionResponse(error.response)\n        }\n    }\n\n\n\nreturn (\n    <div \n    id={infoContact.id}\n    className={contactSectionOpen ? 'contactContainer_open' : 'contactContainer' }>\n        <div className={contactSectionOpen ? 'contactWrapper_open' : 'contactWrapper' }>\n            <div className=\"contactForms\">\n             \n             {/* {response || loginResponse ?\n            <NotificationBox\n             toggleNotification={response ? toggleNotification : toggleNotificationLogin} \n             response={response ? response : loginResponse }\n             responseData={togglingResponseData()} \n             language={language}\n             />\n             : null\n             } */}\n            \n            { !loggedIn  ? \n            <>\n            <FormHeader\n            active = {active}\n            loggedIn={loggedIn}\n            regView={regView}\n            forgotPIN = {forgotPIN}\n            language={language}\n            handlingClosingOfContactSection={handlingClosingOfContactSection}\n            />\n            </>\n            :\n            null\n            }\n                  \n            { active === 'interested' && !loggedIn ? \n             <>\n             <InterestedUsersForm \n             handlingSubmitInterestedUser={handlingSubmitInterestedUser}\n             language={language}\n             />\n            </>                     \n             :\n             null\n            }\n            \n            { active === 'check'  && !loggedIn  ? \n            <LoginForm\n            regView={regView}\n            forgotPIN = {forgotPIN}\n            toggleRegView={toggleRegView}\n            toggleForgotPINState={toggleForgotPINState}\n            handlingSubmitUser={handlingSubmitUser}\n            handlingSubmitLoginUser={handlingSubmitLoginUser}\n            handlingNewPINRequest={handlingNewPINRequest}\n            language={language}\n            isSignedIn={isSignedIn}\n            googleTest={googleTest}\n            />\n            :\n            null\n            }\n            </div>\n            \n        </div>\n        \n    </div>\n)\n}\n\nexport default ContactSectionTest\n","/Users/p3rolix/code/landingSh3ckFE/src/components/checkSection/checkSection.js",["422"],"import React from 'react'\nimport { infoCheck } from '../../utils/data'\nimport NavBarForCS from '../navBar/navBarForCS'\n\nconst CheckSection = ({\n    language, \n    gettingOutOfCheckApp\n}) => {\n    return (\n        <div className=\"checkSectionContainer\">\n            <div className=\"checkSectionWrapper\">\n                {/* <div className=\"checkSection-formTitle\">\n                    <h1 className=\"checkSection-title\">{language === 'ES' ? infoCheck.checkSectionTitle : infoCheck.checkSectionTitle_EN}</h1>\n                </div> */}\n\n                <div className=\"checkSection-BtnWrap\">\n                        <button className=\"checkSection-checkBtn\">\n                        {language === 'ES' ? infoCheck.checkSectionBtnLabel : infoCheck.checkSectionBtnLabel_EN}\n                        </button>\n                        <button \n                        onClick={gettingOutOfCheckApp}\n                        className=\"checkSection-exitBtn\">\n                        {language === 'ES' ? infoCheck.checkSectionExitBtn : infoCheck.checkSectionExitBtn_EN}\n        \n                        </button>\n                </div>\n                {/* <div className=\"checkSection-notNow\">   \n                    <p>{language === 'ES' ? infoCheck.notNowlabel : infoCheck.notNowlabel_EN}</p>\n                </div> */}\n            </div>\n        </div>\n    )   \n}\n\nexport default CheckSection","/Users/p3rolix/code/landingSh3ckFE/src/components/navBar/navBarForCS.js",["423","424","425","426","427","428","429","430","431","432"],"import React, {useState, useEffect} from 'react'\nimport { FaBars,FaSign,FaPuzzlePiece, FaVideo, FaHome } from 'react-icons/fa'\nimport { Link as LinkR } from 'react-router-dom'\nimport { Link as LinkS } from 'react-scroll'\nimport { IoMdCart } from 'react-icons/io'\nimport { BiUser, BiUserCheck } from 'react-icons/bi'\nimport { OffsetHandler } from '../../utils/settingOffsets'\nimport { infoNavBarMobil } from '../../utils/data'\n\n\nconst NavBarForCS = ({ \n    toggleSideBar, \n    login, \n    toggleMainSideBar,\n    toggleLoginSideBarToOpen\n\n}) => {\n\n        return (\n            <>\n                <nav \n                className=\"navMobilForCS\" >\n                <div className=\"navBarContainerMobil\">\n                    <LinkR to=\"/\" className=\"navLogoMobil\">sh3ck</LinkR>\n                    <div \n                    // onClick={ toggleSideBar }\n                    className=\"mobileIconMobil\">\n                        {/* <FaRegUser className=\"faIcon\"/> */}\n                        {login ?\n                        <BiUserCheck \n                        onClick={toggleMainSideBar}\n                        className=\"faUserIcon\"/> \n                         :   \n                        <BiUser \n                        onClick={toggleLoginSideBarToOpen}\n                        className=\"faUserIcon\" />\n                        }\n                        <FaBars \n                        onClick={toggleSideBar}\n                        className=\"faBarsIcon\"/>\n                    </div>\n                </div>\n            </nav>\n            </>\n        )\n}\n    \nexport default NavBarForCS",{"ruleId":"433","replacedBy":"434"},{"ruleId":"435","replacedBy":"436"},{"ruleId":"433","replacedBy":"437"},{"ruleId":"435","replacedBy":"438"},{"ruleId":"439","severity":1,"message":"440","line":35,"column":11,"nodeType":"441","messageId":"442","endLine":35,"endColumn":24},{"ruleId":"439","severity":1,"message":"443","line":1,"column":17,"nodeType":"441","messageId":"442","endLine":1,"endColumn":25},{"ruleId":"433","replacedBy":"444"},{"ruleId":"435","replacedBy":"445"},{"ruleId":"433","replacedBy":"446"},{"ruleId":"435","replacedBy":"447"},{"ruleId":"439","severity":1,"message":"448","line":2,"column":8,"nodeType":"441","messageId":"442","endLine":2,"endColumn":14},{"ruleId":"433","replacedBy":"449"},{"ruleId":"435","replacedBy":"450"},{"ruleId":"439","severity":1,"message":"451","line":3,"column":8,"nodeType":"441","messageId":"442","endLine":3,"endColumn":12},{"ruleId":"439","severity":1,"message":"452","line":4,"column":8,"nodeType":"441","messageId":"442","endLine":4,"endColumn":16},{"ruleId":"439","severity":1,"message":"453","line":5,"column":8,"nodeType":"441","messageId":"442","endLine":5,"endColumn":17},{"ruleId":"439","severity":1,"message":"454","line":37,"column":34,"nodeType":"441","messageId":"442","endLine":37,"endColumn":56},{"ruleId":"455","severity":1,"message":"456","line":54,"column":7,"nodeType":"457","endLine":54,"endColumn":9,"suggestions":"458"},{"ruleId":"459","severity":1,"message":"460","line":213,"column":15,"nodeType":"461","messageId":"462","endLine":213,"endColumn":68},{"ruleId":"439","severity":1,"message":"443","line":1,"column":16,"nodeType":"441","messageId":"442","endLine":1,"endColumn":24},{"ruleId":"439","severity":1,"message":"463","line":1,"column":26,"nodeType":"441","messageId":"442","endLine":1,"endColumn":35},{"ruleId":"439","severity":1,"message":"464","line":2,"column":17,"nodeType":"441","messageId":"442","endLine":2,"endColumn":23},{"ruleId":"439","severity":1,"message":"465","line":4,"column":8,"nodeType":"441","messageId":"442","endLine":4,"endColumn":22},{"ruleId":"439","severity":1,"message":"466","line":2,"column":11,"nodeType":"441","messageId":"442","endLine":2,"endColumn":17},{"ruleId":"439","severity":1,"message":"465","line":5,"column":8,"nodeType":"441","messageId":"442","endLine":5,"endColumn":22},{"ruleId":"439","severity":1,"message":"467","line":6,"column":8,"nodeType":"441","messageId":"442","endLine":6,"endColumn":20},{"ruleId":"439","severity":1,"message":"468","line":10,"column":8,"nodeType":"441","messageId":"442","endLine":10,"endColumn":15},{"ruleId":"439","severity":1,"message":"469","line":33,"column":13,"nodeType":"441","messageId":"442","endLine":33,"endColumn":26},{"ruleId":"439","severity":1,"message":"470","line":19,"column":11,"nodeType":"441","messageId":"442","endLine":19,"endColumn":23},{"ruleId":"439","severity":1,"message":"471","line":8,"column":8,"nodeType":"441","messageId":"442","endLine":8,"endColumn":19},{"ruleId":"439","severity":1,"message":"472","line":9,"column":8,"nodeType":"441","messageId":"442","endLine":9,"endColumn":19},{"ruleId":"439","severity":1,"message":"463","line":1,"column":16,"nodeType":"441","messageId":"442","endLine":1,"endColumn":25},{"ruleId":"439","severity":1,"message":"471","line":5,"column":8,"nodeType":"441","messageId":"442","endLine":5,"endColumn":19},{"ruleId":"439","severity":1,"message":"472","line":6,"column":8,"nodeType":"441","messageId":"442","endLine":6,"endColumn":19},{"ruleId":"433","replacedBy":"473"},{"ruleId":"435","replacedBy":"474"},{"ruleId":"455","severity":1,"message":"456","line":69,"column":5,"nodeType":"457","endLine":69,"endColumn":7,"suggestions":"475"},{"ruleId":"433","replacedBy":"476"},{"ruleId":"435","replacedBy":"477"},{"ruleId":"439","severity":1,"message":"443","line":1,"column":17,"nodeType":"441","messageId":"442","endLine":1,"endColumn":25},{"ruleId":"455","severity":1,"message":"478","line":22,"column":7,"nodeType":"457","endLine":22,"endColumn":9,"suggestions":"479"},{"ruleId":"439","severity":1,"message":"480","line":36,"column":12,"nodeType":"441","messageId":"442","endLine":36,"endColumn":22},{"ruleId":"439","severity":1,"message":"481","line":36,"column":24,"nodeType":"441","messageId":"442","endLine":36,"endColumn":37},{"ruleId":"455","severity":1,"message":"456","line":57,"column":7,"nodeType":"457","endLine":57,"endColumn":9,"suggestions":"482"},{"ruleId":"459","severity":1,"message":"460","line":184,"column":13,"nodeType":"461","messageId":"462","endLine":184,"endColumn":66},{"ruleId":"439","severity":1,"message":"483","line":42,"column":24,"nodeType":"441","messageId":"442","endLine":42,"endColumn":37},{"ruleId":"439","severity":1,"message":"443","line":1,"column":17,"nodeType":"441","messageId":"442","endLine":1,"endColumn":25},{"ruleId":"439","severity":1,"message":"454","line":40,"column":34,"nodeType":"441","messageId":"442","endLine":40,"endColumn":56},{"ruleId":"455","severity":1,"message":"456","line":59,"column":7,"nodeType":"457","endLine":59,"endColumn":9,"suggestions":"484"},{"ruleId":"439","severity":1,"message":"443","line":1,"column":17,"nodeType":"441","messageId":"442","endLine":1,"endColumn":25},{"ruleId":"439","severity":1,"message":"485","line":11,"column":8,"nodeType":"441","messageId":"442","endLine":11,"endColumn":18},{"ruleId":"439","severity":1,"message":"443","line":1,"column":17,"nodeType":"441","messageId":"442","endLine":1,"endColumn":25},{"ruleId":"439","severity":1,"message":"486","line":6,"column":10,"nodeType":"441","messageId":"442","endLine":6,"endColumn":32},{"ruleId":"439","severity":1,"message":"487","line":6,"column":34,"nodeType":"441","messageId":"442","endLine":6,"endColumn":54},{"ruleId":"439","severity":1,"message":"488","line":6,"column":56,"nodeType":"441","messageId":"442","endLine":6,"endColumn":73},{"ruleId":"439","severity":1,"message":"489","line":6,"column":75,"nodeType":"441","messageId":"442","endLine":6,"endColumn":93},{"ruleId":"439","severity":1,"message":"490","line":3,"column":8,"nodeType":"441","messageId":"442","endLine":3,"endColumn":19},{"ruleId":"439","severity":1,"message":"443","line":1,"column":16,"nodeType":"441","messageId":"442","endLine":1,"endColumn":24},{"ruleId":"439","severity":1,"message":"463","line":1,"column":26,"nodeType":"441","messageId":"442","endLine":1,"endColumn":35},{"ruleId":"439","severity":1,"message":"464","line":2,"column":17,"nodeType":"441","messageId":"442","endLine":2,"endColumn":23},{"ruleId":"439","severity":1,"message":"491","line":2,"column":24,"nodeType":"441","messageId":"442","endLine":2,"endColumn":37},{"ruleId":"439","severity":1,"message":"492","line":2,"column":39,"nodeType":"441","messageId":"442","endLine":2,"endColumn":46},{"ruleId":"439","severity":1,"message":"493","line":2,"column":48,"nodeType":"441","messageId":"442","endLine":2,"endColumn":54},{"ruleId":"439","severity":1,"message":"494","line":4,"column":18,"nodeType":"441","messageId":"442","endLine":4,"endColumn":23},{"ruleId":"439","severity":1,"message":"495","line":5,"column":10,"nodeType":"441","messageId":"442","endLine":5,"endColumn":18},{"ruleId":"439","severity":1,"message":"496","line":7,"column":10,"nodeType":"441","messageId":"442","endLine":7,"endColumn":23},{"ruleId":"439","severity":1,"message":"497","line":8,"column":10,"nodeType":"441","messageId":"442","endLine":8,"endColumn":25},"no-native-reassign",["498"],"no-negated-in-lhs",["499"],["498"],["499"],"no-unused-vars","'url_userLogin' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.",["498"],["499"],["498"],["499"],"'Button' is defined but never used.",["498"],["499"],"'Home' is defined but never used.","'HomeTest' is defined but never used.","'HomeTest2' is defined but never used.","'setLoginSideBarLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'insertGapiScript'. Either include it or remove the dependency array.","ArrayExpression",["500"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useEffect' is defined but never used.","'FaSign' is defined but never used.","'LoadingSpinner' is defined but never used.","'motion' is defined but never used.","'OptionsForms' is defined but never used.","'picture' is defined but never used.","'upLoadingUser' is assigned a value but never used.","'url_regUsers' is assigned a value but never used.","'GoogleAuth3' is defined but never used.","'GoogleAuth4' is defined but never used.",["498"],["499"],["501"],["498"],["499"],"React Hook useEffect has a missing dependency: 'googleTest'. Either include it or remove the dependency array. If 'googleTest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["502"],"'googleUser' is assigned a value but never used.","'setGoogleUser' is assigned a value but never used.",["503"],"'setIsSignedIn' is assigned a value but never used.",["504"],"'FormHeader' is defined but never used.","'responseDataInterested' is defined but never used.","'responseDataRegister' is defined but never used.","'responseDataLogin' is defined but never used.","'responseDataNewPIN' is defined but never used.","'NavBarForCS' is defined but never used.","'FaPuzzlePiece' is defined but never used.","'FaVideo' is defined but never used.","'FaHome' is defined but never used.","'LinkS' is defined but never used.","'IoMdCart' is defined but never used.","'OffsetHandler' is defined but never used.","'infoNavBarMobil' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"505","fix":"506"},{"desc":"505","fix":"507"},{"desc":"508","fix":"509"},{"desc":"505","fix":"510"},{"desc":"505","fix":"511"},"Update the dependencies array to be: [insertGapiScript]",{"range":"512","text":"513"},{"range":"514","text":"513"},"Update the dependencies array to be: [googleTest]",{"range":"515","text":"516"},{"range":"517","text":"513"},{"range":"518","text":"513"},[2587,2589],"[insertGapiScript]",[1606,1608],[701,703],"[googleTest]",[2295,2297],[2991,2993]]