[{"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/index.js":"1","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/App.js":"2","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/sideBar/sideBar.js":"3","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/navBar/styledNavbar.js":"4","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/navBar/styledNavBarElements.js":"5","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/views/home.js":"6","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/sideBar/styledSideBar.js":"7","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/sideBar/styledSideBarElements.js":"8","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/navBar/navBar.js":"9","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/heroSection/heroSection.js":"10","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/buttons/button.js":"11","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/heroSection/styledHeroSection.js":"12","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/heroSection/styledHeroSectionElements.js":"13","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/buttons/styledButton.js":"14","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/mobilDetection.js":"15","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/mobilHook.js":"16","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/videoSection/videoSection.js":"17","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/buttons/button2.js":"18","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/video.js":"19","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/navBar/navBarMobil.js":"20","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/data.js":"21","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/hiwSection/hiwSection.js":"22","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/loading.js":"23","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/contactSection.js":"24","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/interestedUserForm.js":"25","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/optionsForms.js":"26","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/registerForm.js":"27","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/loginForm.js":"28","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/formHeader.js":"29","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/loginSideBar/loginSideBar.js":"30","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/loginSideBar/loginSideBarForm.js":"31","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/logoutSideBar/logoutSideBar.js":"32","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/loadingSpinner.js":"33","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/notifications/NotificationBox.js":"34","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/notifications/notificationData.js":"35","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/mainSideBar/mainSideBar.js":"36","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/settingOffsets.js":"37","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/dropDownList.js":"38","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/footerSection/footerElements.js":"39","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/footerSection/styledFooterSection.js":"40","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/footerSection/footerSection.js":"41","/Users/p3rolix/code/landingSh3ckFE/src/index.js":"42","/Users/p3rolix/code/landingSh3ckFE/src/App.js":"43","/Users/p3rolix/code/landingSh3ckFE/src/views/home.js":"44","/Users/p3rolix/code/landingSh3ckFE/src/utils/data.js":"45","/Users/p3rolix/code/landingSh3ckFE/src/components/navBar/navBarMobil.js":"46","/Users/p3rolix/code/landingSh3ckFE/src/components/loginSideBar/loginSideBar.js":"47","/Users/p3rolix/code/landingSh3ckFE/src/components/hiwSection/hiwSection.js":"48","/Users/p3rolix/code/landingSh3ckFE/src/components/videoSection/videoSection.js":"49","/Users/p3rolix/code/landingSh3ckFE/src/components/navBar/navBar.js":"50","/Users/p3rolix/code/landingSh3ckFE/src/utils/mobilHook.js":"51","/Users/p3rolix/code/landingSh3ckFE/src/utils/mobilDetection.js":"52","/Users/p3rolix/code/landingSh3ckFE/src/components/mainSideBar/mainSideBar.js":"53","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/contactSection.js":"54","/Users/p3rolix/code/landingSh3ckFE/src/components/heroSection/heroSection.js":"55","/Users/p3rolix/code/landingSh3ckFE/src/components/footerSection/footerSection.js":"56","/Users/p3rolix/code/landingSh3ckFE/src/components/sideBar/sideBar.js":"57","/Users/p3rolix/code/landingSh3ckFE/src/components/loginSideBar/loginSideBarForm.js":"58","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/optionsForms.js":"59","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/interestedUserForm.js":"60","/Users/p3rolix/code/landingSh3ckFE/src/utils/settingOffsets.js":"61","/Users/p3rolix/code/landingSh3ckFE/src/components/video.js":"62","/Users/p3rolix/code/landingSh3ckFE/src/utils/loadingSpinner.js":"63","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/formHeader.js":"64","/Users/p3rolix/code/landingSh3ckFE/src/components/notifications/NotificationBox.js":"65","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/loginForm.js":"66","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/button.js":"67","/Users/p3rolix/code/landingSh3ckFE/src/components/notifications/notificationData.js":"68","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/dropDownList.js":"69","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/registerForm.js":"70","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/forgotPINForm.js":"71","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuthButtons.js":"72","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/applications.js":"73","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuth3.js":"74","/Users/p3rolix/code/landingSh3ckFE/src/views/homeTest.js":"75","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuth4.js":"76","/Users/p3rolix/code/landingSh3ckFE/src/views/homeTest2.js":"77","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuth5.js":"78","/Users/p3rolix/code/landingSh3ckFE/src/components/nextStepSection.js/nextStepSection.js":"79","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/contactSectionTest.js":"80","/Users/p3rolix/code/landingSh3ckFE/src/components/checkSection/checkSection.js":"81","/Users/p3rolix/code/landingSh3ckFE/src/components/navBar/navBarForCS.js":"82","/Users/p3rolix/code/landingSh3ckFE/src/components/sideBars/QASideBar.js":"83","/Users/p3rolix/code/landingSh3ckFE/src/components/sideBars/QaAccordion.js":"84","/Users/p3rolix/code/landingSh3ckFE/src/components/sideBars/QAData.js":"85","/Users/p3rolix/code/landingSh3ckFE/src/state/configureStore.js":"86","/Users/p3rolix/code/landingSh3ckFE/src/state/reducers/index.js":"87","/Users/p3rolix/code/landingSh3ckFE/src/requestsToApi.js":"88","/Users/p3rolix/code/landingSh3ckFE/src/state/reducers/sideBarReducers.js":"89","/Users/p3rolix/code/landingSh3ckFE/src/state/reducers/heroSectionReducers.js":"90","/Users/p3rolix/code/landingSh3ckFE/src/state/reducers/contactSectionReducers.js":"91","/Users/p3rolix/code/landingSh3ckFE/src/state/reducers/homeReducers.js":"92","/Users/p3rolix/code/landingSh3ckFE/src/state/index.js":"93","/Users/p3rolix/code/landingSh3ckFE/src/state/actions/index.js":"94","/Users/p3rolix/code/landingSh3ckFE/src/components/checkSection/checkSectionElements.js":"95","/Users/p3rolix/code/landingSh3ckFE/src/components/checkSection/startSh3ckProcess.js":"96","/Users/p3rolix/code/landingSh3ckFE/src/state/reducers/checkSectionReducers.js":"97","/Users/p3rolix/code/landingSh3ckFE/src/components/checkSection/citySection.js":"98","/Users/p3rolix/code/landingSh3ckFE/src/components/checkSection/checkerSection.js":"99","/Users/p3rolix/code/landingSh3ckFE/src/components/checkApp/checkApp.js":"100","/Users/p3rolix/code/landingSh3ckFE/src/components/checkApp/checkStarting.js":"101","/Users/p3rolix/code/landingSh3ckFE/src/components/checkApp/citiesSection.js":"102","/Users/p3rolix/code/landingSh3ckFE/src/components/checkApp/checkersSection.js":"103","/Users/p3rolix/code/landingSh3ckFE/src/components/checkApp/checkAppElements.js":"104","/Users/p3rolix/code/landingSh3ckFE/src/components/checkApp/categorySection.js":"105","/Users/p3rolix/code/landingSh3ckFE/src/components/checkApp/finishingCheckOrder.js":"106"},{"size":218,"mtime":1633401436376,"results":"107","hashOfConfig":"108"},{"size":285,"mtime":1634526310052,"results":"109","hashOfConfig":"108"},{"size":1595,"mtime":1633701790024,"results":"110","hashOfConfig":"108"},{"size":2707,"mtime":1633702018208,"results":"111","hashOfConfig":"108"},{"size":1921,"mtime":1633972356741,"results":"112","hashOfConfig":"108"},{"size":6702,"mtime":1639761944173,"results":"113","hashOfConfig":"108"},{"size":1394,"mtime":1633701787724,"results":"114","hashOfConfig":"108"},{"size":1990,"mtime":1633701785760,"results":"115","hashOfConfig":"108"},{"size":5393,"mtime":1636386875935,"results":"116","hashOfConfig":"108"},{"size":2881,"mtime":1639064859801,"results":"117","hashOfConfig":"108"},{"size":986,"mtime":1634231358420,"results":"118","hashOfConfig":"108"},{"size":2106,"mtime":1633974762680,"results":"119","hashOfConfig":"108"},{"size":3891,"mtime":1633976797134,"results":"120","hashOfConfig":"108"},{"size":679,"mtime":1633701804377,"results":"121","hashOfConfig":"108"},{"size":451,"mtime":1635603542963,"results":"122","hashOfConfig":"108"},{"size":463,"mtime":1634004977231,"results":"123","hashOfConfig":"108"},{"size":2636,"mtime":1636383728607,"results":"124","hashOfConfig":"108"},{"size":737,"mtime":1633979468768,"results":"125","hashOfConfig":"108"},{"size":295,"mtime":1634102755152,"results":"126","hashOfConfig":"108"},{"size":3639,"mtime":1639064888014,"results":"127","hashOfConfig":"108"},{"size":2216,"mtime":1635509828743,"results":"128","hashOfConfig":"108"},{"size":3815,"mtime":1636383858481,"results":"129","hashOfConfig":"108"},{"size":767,"mtime":1634656636767,"results":"130","hashOfConfig":"108"},{"size":8655,"mtime":1639761478231,"results":"131","hashOfConfig":"108"},{"size":3232,"mtime":1639065440783,"results":"132","hashOfConfig":"108"},{"size":787,"mtime":1635179653105,"results":"133","hashOfConfig":"108"},{"size":4107,"mtime":1639757205984,"results":"134","hashOfConfig":"108"},{"size":2593,"mtime":1639759335172,"results":"135","hashOfConfig":"108"},{"size":1736,"mtime":1639496379474,"results":"136","hashOfConfig":"108"},{"size":1669,"mtime":1636127383545,"results":"137","hashOfConfig":"108"},{"size":2147,"mtime":1635603911073,"results":"138","hashOfConfig":"108"},{"size":2057,"mtime":1635603476245,"results":"139","hashOfConfig":"108"},{"size":474,"mtime":1635433892853,"results":"140","hashOfConfig":"108"},{"size":3816,"mtime":1639422469746,"results":"141","hashOfConfig":"108"},{"size":1007,"mtime":1635692919317,"results":"142","hashOfConfig":"108"},{"size":3217,"mtime":1636206226529,"results":"143","hashOfConfig":"108"},{"size":2801,"mtime":1636386819185,"results":"144","hashOfConfig":"108"},{"size":1853,"mtime":1639064803530,"results":"145","hashOfConfig":"108"},{"size":2032,"mtime":1639413422816,"results":"146","hashOfConfig":"108"},{"size":4527,"mtime":1639496379466,"results":"147","hashOfConfig":"108"},{"size":3872,"mtime":1639420095664,"results":"148","hashOfConfig":"108"},{"size":558,"mtime":1646987843608,"results":"149","hashOfConfig":"150"},{"size":913,"mtime":1647013034344,"results":"151","hashOfConfig":"150"},{"size":6589,"mtime":1647016391761,"results":"152","hashOfConfig":"150"},{"size":13178,"mtime":1646238579100,"results":"153","hashOfConfig":"150"},{"size":4743,"mtime":1646410769982,"results":"154","hashOfConfig":"150"},{"size":1855,"mtime":1644859698127,"results":"155","hashOfConfig":"150"},{"size":4359,"mtime":1646410917763,"results":"156","hashOfConfig":"150"},{"size":2906,"mtime":1646379364627,"results":"157","hashOfConfig":"150"},{"size":6225,"mtime":1646644902178,"results":"158","hashOfConfig":"150"},{"size":463,"mtime":1634004977231,"results":"159","hashOfConfig":"150"},{"size":451,"mtime":1635603542963,"results":"160","hashOfConfig":"150"},{"size":7177,"mtime":1646709963256,"results":"161","hashOfConfig":"150"},{"size":3127,"mtime":1647015663573,"results":"162","hashOfConfig":"150"},{"size":8398,"mtime":1646835775227,"results":"163","hashOfConfig":"150"},{"size":4942,"mtime":1646379475082,"results":"164","hashOfConfig":"150"},{"size":5171,"mtime":1646585063314,"results":"165","hashOfConfig":"150"},{"size":2916,"mtime":1644859720930,"results":"166","hashOfConfig":"150"},{"size":947,"mtime":1640616601260,"results":"167","hashOfConfig":"150"},{"size":4128,"mtime":1646752997832,"results":"168","hashOfConfig":"150"},{"size":4291,"mtime":1645627614362,"results":"169","hashOfConfig":"150"},{"size":295,"mtime":1634102755152,"results":"170","hashOfConfig":"150"},{"size":802,"mtime":1646582661996,"results":"171","hashOfConfig":"150"},{"size":4195,"mtime":1646986127892,"results":"172","hashOfConfig":"150"},{"size":10431,"mtime":1646757251818,"results":"173","hashOfConfig":"150"},{"size":5881,"mtime":1647016409180,"results":"174","hashOfConfig":"150"},{"size":965,"mtime":1645456882109,"results":"175","hashOfConfig":"150"},{"size":2723,"mtime":1646757008683,"results":"176","hashOfConfig":"150"},{"size":1826,"mtime":1643902771713,"results":"177","hashOfConfig":"150"},{"size":5023,"mtime":1647016423082,"results":"178","hashOfConfig":"150"},{"size":3910,"mtime":1647016439063,"results":"179","hashOfConfig":"150"},{"size":981,"mtime":1643558166638,"results":"180","hashOfConfig":"150"},{"size":2969,"mtime":1643649966545,"results":"181","hashOfConfig":"150"},{"size":1148,"mtime":1644339711046,"results":"182","hashOfConfig":"150"},{"size":10580,"mtime":1644369714169,"results":"183","hashOfConfig":"150"},{"size":898,"mtime":1644329086891,"results":"184","hashOfConfig":"150"},{"size":10886,"mtime":1644789460005,"results":"185","hashOfConfig":"150"},{"size":1419,"mtime":1646757772396,"results":"186","hashOfConfig":"150"},{"size":4821,"mtime":1646982934445,"results":"187","hashOfConfig":"150"},{"size":5647,"mtime":1644945269525,"results":"188","hashOfConfig":"150"},{"size":767,"mtime":1646861226509,"results":"189","hashOfConfig":"150"},{"size":1080,"mtime":1646668658875,"results":"190","hashOfConfig":"150"},{"size":1505,"mtime":1646584957141,"results":"191","hashOfConfig":"150"},{"size":4683,"mtime":1645977651972,"results":"192","hashOfConfig":"150"},{"size":2401,"mtime":1645979541933,"results":"193","hashOfConfig":"150"},{"size":1591,"mtime":1646324717833,"results":"194","hashOfConfig":"150"},{"size":589,"mtime":1646977711423,"results":"195","hashOfConfig":"150"},{"size":1141,"mtime":1647019467102,"results":"196","hashOfConfig":"150"},{"size":681,"mtime":1646583386890,"results":"197","hashOfConfig":"150"},{"size":436,"mtime":1646413097953,"results":"198","hashOfConfig":"150"},{"size":746,"mtime":1646670529913,"results":"199","hashOfConfig":"150"},{"size":1090,"mtime":1646708950907,"results":"200","hashOfConfig":"150"},{"size":49,"mtime":1646406609039,"results":"201","hashOfConfig":"150"},{"size":4113,"mtime":1647013034348,"results":"202","hashOfConfig":"150"},{"size":6970,"mtime":1646860826178,"results":"203","hashOfConfig":"150"},{"size":2229,"mtime":1646860720650,"results":"204","hashOfConfig":"150"},{"size":772,"mtime":1647013034348,"results":"205","hashOfConfig":"150"},{"size":1237,"mtime":1646860991792,"results":"206","hashOfConfig":"150"},{"size":2099,"mtime":1646859916179,"results":"207","hashOfConfig":"150"},{"size":885,"mtime":1647013034345,"results":"208","hashOfConfig":"150"},{"size":2541,"mtime":1647013034346,"results":"209","hashOfConfig":"150"},{"size":1809,"mtime":1647013034347,"results":"210","hashOfConfig":"150"},{"size":2140,"mtime":1647013034346,"results":"211","hashOfConfig":"150"},{"size":8056,"mtime":1647013034345,"results":"212","hashOfConfig":"150"},{"size":1851,"mtime":1647013034345,"results":"213","hashOfConfig":"150"},{"size":2719,"mtime":1647013034347,"results":"214","hashOfConfig":"150"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},"17eu4l2",{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"224"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"283"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},"1xaydh6",{"filePath":"305","messages":"306","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"304"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"304"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"318"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"304"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"304"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"304"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"304"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"304"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"304"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"304"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"381"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"318"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"318"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"318"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"318"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"403"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"304"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"403"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"403"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"403"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"403"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"304"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"304"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"304"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"304"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"304"},"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/index.js",[],["460","461"],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/App.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/sideBar/sideBar.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/navBar/styledNavbar.js",[],["462","463"],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/navBar/styledNavBarElements.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/views/home.js",["464"],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/sideBar/styledSideBar.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/sideBar/styledSideBarElements.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/navBar/navBar.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/heroSection/heroSection.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/buttons/button.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/heroSection/styledHeroSection.js",["465"],"import React, { useState } from 'react'\nimport useMobilDetection from '../../utils/mobilDetection'\nimport useMobilDetect from '../../utils/mobilHook'\nimport { \n    HeroContainer,\n    HeroBG,\n    ImageBG,\n    HeroContent,\n    HeroH1,\n    HeroBtnWrapper,\n    HeroContainerMobil,\n    HeroBGMobil,\n    HeroContentMobil,\n    HeroH1Mobil,\n    HeroPMobil,\n    HeroBtnWrapperMobil\n\n} from './styledHeroSectionElements'\nimport Image from '../../images/pexels-andrea-piacquadio-3928268.jpg'\nimport { StyledButton } from '../buttons/styledButton'\n\n\nconst StyledHeroSection = () => {\nconst mobil = useMobilDetect()\nconst mobil2 = useMobilDetection()\n    \nif (mobil2.screenWidth < 768 || mobil) {\n    return (\n        <HeroContainerMobil>\n            <HeroContentMobil>\n                <HeroH1Mobil>Compra sin miedo por internet</HeroH1Mobil>\n                <HeroPMobil>Nosotros chequeamos los productos que tu quieres comprar...</HeroPMobil>\n                <HeroBtnWrapperMobil>\n                    <StyledButton\n                    primary={ true }\n                    dark={ true }\n                    >\n                        Ver video\n                    </StyledButton>\n                </HeroBtnWrapperMobil>\n            </HeroContentMobil>\n            <HeroBGMobil>\n                <ImageBG\n                src={Image}\n                />\n            </HeroBGMobil>\n        </HeroContainerMobil>\n    )\n}\nif (mobil2.screenWidth > 768 || !mobil) {\n    return (\n        <HeroContainer>\n            <HeroBG>\n                <ImageBG\n                src={Image}\n                />\n            </HeroBG>\n            <HeroContent>\n                <HeroH1>Somos la nueva forma de comprar sin miedo</HeroH1>\n                <HeroH1>por internet</HeroH1>\n                <HeroBtnWrapper>\n                    <StyledButton\n                    primary={ true }\n                    dark={ true }\n                    >\n                        Ver video\n                    </StyledButton>\n                </HeroBtnWrapper>\n            </HeroContent>\n        </HeroContainer>\n    )\n}\n    \n}\n\nexport default StyledHeroSection\n","/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/heroSection/styledHeroSectionElements.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/buttons/styledButton.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/mobilDetection.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/mobilHook.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/videoSection/videoSection.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/buttons/button2.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/video.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/navBar/navBarMobil.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/data.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/hiwSection/hiwSection.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/loading.js",[],["466","467"],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/contactSection.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/interestedUserForm.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/optionsForms.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/registerForm.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/loginForm.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/formHeader.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/loginSideBar/loginSideBar.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/loginSideBar/loginSideBarForm.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/logoutSideBar/logoutSideBar.js",[],["468","469"],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/loadingSpinner.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/notifications/NotificationBox.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/notifications/notificationData.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/mainSideBar/mainSideBar.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/utils/settingOffsets.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/contactSection/dropDownList.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/footerSection/footerElements.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/footerSection/styledFooterSection.js",[],"/Users/p3rolix/code/FrontEnds/landingsh3ck2.0/src/components/footerSection/footerSection.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/index.js",[],["470","471"],"/Users/p3rolix/code/landingSh3ckFE/src/App.js",["472","473","474","475","476"],"import React from 'react'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport Home from './views/home'\nimport CitiesSection from './components/checkApp/citiesSection'\nimport CheckersSection from './components/checkApp/checkersSection'\nimport ContactSection from './components/contactSection/contactSection'\nimport CheckStarting from './components/checkApp/checkStarting'\nimport './sh3ck.css'\n\nconst App = () => {\n    \n    return (\n        <Router>\n            <Home/>\n            <Routes>\n                {/* <Route path=\"/\" exact={true} element={<Home />}/> */}\n                {/* <Route path=\"/checkStarting\" exact={true} element={<CheckStarting />}/>\n                <Route path=\"/citiesSection\"  element={<CitiesSection />}/>\n                <Route path=\"/checkersSection\"  element={<CheckersSection />}/>  */}\n            </Routes>\n        </Router>\n    )\n}\n\nexport default App\n","/Users/p3rolix/code/landingSh3ckFE/src/views/home.js",["477","478"],"import React, { useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../components/navBar/navBar'\nimport SideBar from '../components/sideBar/sideBar'\nimport MainSideBar from '../components/mainSideBar/mainSideBar'\nimport HeroSection from '../components/heroSection/heroSection'\nimport VideoSection from '../components/videoSection/videoSection'\nimport HiwSection from '../components/hiwSection/hiwSection'\nimport useMobilDetection from '../utils/mobilDetection'\nimport useMobilDetect from '../utils/mobilHook'\nimport NavBarMobil from '../components/navBar/navBarMobil'\nimport NavBarForCS from '../components/navBar/navBarForCS'\nimport QASideBar from '../components/sideBars/QASideBar'\nimport ContactSection from '../components/contactSection/contactSection'\nimport NextStepSection from '../components/nextStepSection.js/nextStepSection'\nimport FooterSection from '../components/footerSection/footerSection'\nimport LoadingSpinner from '../utils/loadingSpinner'\n// import CheckSection from '../components/checkSection/checkSection'\nimport CheckApp from '../components/checkApp/checkApp'\nimport NotificationBox from '../components/notifications/NotificationBox'\n// import { responseDataInterested, responseDataRegister, responseDataLogin, responseDataNewPIN } from '../components/notifications/notificationData'\nimport { verifyingTokenRequest, addingGoogleUserToDB } from '../requestsToApi'\n// ************************* Redux imports\nimport { actionCreators } from '../state'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { bindActionCreators } from '@reduxjs/toolkit'\n// ***************************************************\n\n\nconst Home = () => {\n\n \n    //  **************** Redux Actions and State Consumption **********************\n    const dispatch = useDispatch()\n    const {  \n         activatingSpinner,  \n        settingCurrentUser, handlingIsLoggedIn,handlingIsLoggedOut, \n        handlingIsSignedInGoogle, gettingGoogleLoginData,  \n    } = bindActionCreators(actionCreators, dispatch)\n    \n    const QASideBarOpen = useSelector((state) => state.sideBarState.QASideBarOpen)\n    const loggedIn = useSelector((state) => state.homeState.loggedIn)\n    const response = useSelector((state) => state.contactSectionState.response)\n    const loginResponse = useSelector((state) => state.homeState.loginResponse)\n    \n    \n    const mobil = useMobilDetect()\n    const mobil2 = useMobilDetection()\n    // const url_userLogin = \"http://192.168.1.102:5000/api/users/login\"\n    \n    let auth\n    useEffect(() => {\n        gettingTokenForLocalSignIn()\n        insertGapiScript()\n    },[])\n\n    const gettingTokenForLocalSignIn = () => {\n        console.log('inicializando token...')\n        const getToken = async() => {\n            const token = localStorage.getItem('SH3CK_TOKEN')\n            if (token){\n                const response = await verifyingTokenRequest(token)\n                console.log(response.data)\n                settingCurrentUser(response.data) //action\n                return handlingIsLoggedIn(true) //action\n            }\n            handlingIsLoggedIn(false) //action\n            handlingIsLoggedOut(true) //action\n        }   \n        getToken()\n    }\n\n\n   \n  //  ************* Google OAuth Processes and functions (with googleAuth5) ****************\n\n \n        const insertGapiScript = () => {\n            const script = document.createElement('script')\n            script.src = \"https://apis.google.com/js/platform.js\"\n            script.onload = () => {\n                initializeGooglesignIn()\n            }\n            document.body.appendChild(script)\n          } \n          \n          const initializeGooglesignIn = () => {\n            window.gapi.load('client:auth2', () => {\n              window.gapi.client.init({\n                client_id: '915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com',\n                scope:'profile'\n              }).then(()=> {\n              auth = window.gapi.auth2.getAuthInstance()\n              const isSignedIn = auth.isSignedIn.get()\n              handlingIsSignedInGoogle(isSignedIn) //action(isSignedIn)\n              auth.isSignedIn.listen( () => {\n                handlingIsSignedInGoogle(auth.isSignedIn.get())\n              })   \n              })\n          })\n        }\n\n        const googleTest = async(user, token) => {\n        activatingSpinner(true)\n        try {\n            console.log('Sending request to BackEnd api...')\n            console.log(token)\n            const res = await addingGoogleUserToDB(token)\n            console.log(res)\n            const data = res.data\n            if (res.status === 201){\n                console.log(data)\n                activatingSpinner(false) //action\n                gettingGoogleLoginData(data)    //action\n                settingCurrentUser(data.fullName) //action\n                handlingIsLoggedIn(true)  //action\n                handlingIsLoggedOut(false) //action\n                return res.status\n            }\n        } catch (error) {\n            console.log(error)\n            console.log(error.response.data)\n            activatingSpinner(false) //action\n            settingCurrentUser(error.response.data.fullName) //action\n            gettingGoogleLoginData(error.response.data) //action\n            handlingIsLoggedIn(true)  //action\n            handlingIsLoggedOut(false) //action\n        }\n}\nconsole.log(response)\n    return (\n    <>\n            \n    {\n        QASideBarOpen && loggedIn ?\n        <QASideBar/>\n        : \n        loggedIn  ?\n        <div className=\"superContainer\">\n            <MainSideBar />\n            <NavBarForCS /> \n            <CheckApp />\n        </div>\n    : null\n    }\n    {\n        QASideBarOpen && !loggedIn ?\n        <QASideBar />\n        : \n        !loggedIn ? \n            <>\n            <LoadingSpinner/>\n            \n            {response || loginResponse  ?\n            <NotificationBox />\n             :\n             null\n            }\n                \n            <SideBar />\n            \n            { mobil2.screenWidth <= 1098 || mobil ?  \n            <NavBarMobil /> \n            : <NavBar />\n            }\n            <HeroSection />\n             <VideoSection />\n            <HiwSection />\n            <NextStepSection/>\n            {\n            !loggedIn ?\n            <ContactSection\n            googleTest={googleTest}\n            />\n            :\n            null\n            }\n            <FooterSection/> \n                \n            </>\n            : null\n                \n     }\n\n            \n   \n        \n    </>\n    )\n}\n\n\nexport default Home","/Users/p3rolix/code/landingSh3ckFE/src/utils/data.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/navBar/navBarMobil.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/loginSideBar/loginSideBar.js",["479"],"import React from 'react'\nimport { FaTimes } from 'react-icons/fa'\nimport LoginSideBarForm from './loginSideBarForm'\nimport LoadingSpinner from '../../utils/loadingSpinner'\nimport { infoLoginSB } from '../../utils/data'\n\n\n\n\nconst LoginSideBar = ({ \n    loginSideBarOpen,  \n    // handlingLogin,\n    loggedIn, \n    loggedOut,\n    loading,\n    language,\n    loginSideBarLoading,\n    handlingSubmitLoginUser,\n    toggleLoginSideBarToClose\n}) => {\n    // console.log(loggedIn)\n    // console.log(loggedOut)\n    // console.log(loginSideBarOpen)\n    \n    if (loggedOut){\n        return (\n            <aside\n            className={`${loginSideBarOpen ? \"loginSideBarContainerOpen\" : \"loginSideBarContainer\" }`}>\n                <div className=\"loginContactForms\">\n                    <div \n                        className=\"loginSideBarIcon\"\n                        onClick={ toggleLoginSideBarToClose }\n                    >\n                        <FaTimes className=\"loginCloseIcon\"/>\n                    </div>\n                    <div className=\"loginSideHeader\">\n    \n                    </div>\n                    <div className=\"loginSideBarFormTitle\">\n                        <h1 className=\"loginSideBarTitle\">{language === 'ES' ? infoLoginSB.title : infoLoginSB.title_EN}</h1>\n                    </div>\n                    <div className=\"loginSideBarFormDescription\">\n                        <p>{language === 'ES' ? infoLoginSB.description : infoLoginSB.description_EN}</p>\n                    </div>\n                        \n                    <LoginSideBarForm\n                    handlingSubmitLoginUser={ handlingSubmitLoginUser}\n                    language={language}\n                    />\n                        \n                </div>\n            </aside>\n        )\n    }else{\n        return null\n    }\n    \n}\n\nexport default LoginSideBar",["480","481"],"/Users/p3rolix/code/landingSh3ckFE/src/components/hiwSection/hiwSection.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/videoSection/videoSection.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/navBar/navBar.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/utils/mobilHook.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/utils/mobilDetection.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/mainSideBar/mainSideBar.js",["482"],"import React from 'react'\nimport { FaTimes } from 'react-icons/fa'\nimport { BiUserCheck, BiUserCircle, BiHelpCircle, BiQuestionMark } from 'react-icons/bi'\nimport { IoMdCart } from 'react-icons/io'\nimport { FiLogOut } from 'react-icons/fi'\nimport { MdSaveAlt } from 'react-icons/md'\nimport { infoMainSideBar } from '../../utils/data'\n\n\nimport { actionCreators } from '../../state'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { bindActionCreators } from '@reduxjs/toolkit'\n\n// import LoginForm from '../contactSection/loginForm'\n\n\nconst MainSideBar = ({ \n    // handlingSubmitLogOutUser \n}) => {\n    const dispatch = useDispatch()\n    // const {  openingMainSideBar, openingQASideBar } = bindActionCreators(actionCreators, dispatch)\n    const {  \n        openingMainSideBar, openingQASideBar,\n        handlingIsSignedInGoogle, activatingForm,\n        gettingLoginResponseData, handlingIsLoggedIn,\n        handlingIsLoggedOut, openingContactSection,\n        settingCurrentUser,\n    } = bindActionCreators(actionCreators, dispatch)\n    const mainSideBarOpen = useSelector((state) => state.homeState.mainSideBarOpen)\n    const username = useSelector((state) => state.homeState.currentUser)\n    const language = useSelector((state) => state.sideBarState.language)\n    const loginResponse = useSelector((state) => state.homeState.loginResponse)\n    const loggedIn = useSelector((state) => state.homeState.loggedIn)\n    const loginData = useSelector((state) => state.homeState.loginData)\n    const isSignedIn = useSelector((state) => state.homeState.isSignedIn)\n    \n    const capitalizeFirstLetter = (string) => {\n        // const str = 'flexiple';\n        const str2 = string.charAt(0).toUpperCase() + string.slice(1)\n        console.log(str2.split(' ')[0]);\n        return str2.split(' ')[0]    \n    }\n    const nameSplittedAndCapitalized = capitalizeFirstLetter(username ? username : loginResponse.data )\n\n    const handlingSubmitLogOutUser = async() => {\n        \n        if (isSignedIn) {\n            console.log('pasa por isSignedIn')\n            const auth = window.gapi.auth2.getAuthInstance()\n            await auth.signOut()\n            \n            handlingIsSignedInGoogle(false) //action\n            activatingForm(null) //action\n            openingMainSideBar(!mainSideBarOpen)  //action\n            gettingLoginResponseData(null) //action\n            openingContactSection(false) //action\n        }\n        if (loggedIn){\n            console.log('pasa por loggedIn')\n            localStorage.removeItem('SH3CK_TOKEN')\n            gettingLoginResponseData(null) //action\n            activatingForm(null) //action\n            openingMainSideBar(!mainSideBarOpen) //action\n            handlingIsLoggedIn(false) //action\n            handlingIsLoggedOut(true) //action\n            openingContactSection(false) //action\n            settingCurrentUser(null) //action\n        }\n        \n        \n    }\n\n    if (loggedIn && mainSideBarOpen){\n       return (\n       <aside\n            className={`${mainSideBarOpen ? \"mainSideBarContainerOpen\" : \"mainSideBarContainer\" }`}>\n                <div className=\"mainSideContactForms\">\n                    <div \n                        className=\"mainSideBarIcon\"\n                        onClick={ () => openingMainSideBar(!mainSideBarOpen) }\n                    >\n                        <FaTimes className=\"mainSideCloseIcon\"/>\n                    </div>\n                    <div className=\"mainSideHeader\">\n\n                    </div>\n                    <div className=\"mainSideBarContent\">\n                        <div className=\"mainSideBarContentUser\">\n                            {\n                               !loginData ?  \n                                <div className=\"mainSideBarUserIcon\">\n                                    <BiUserCheck />\n                                </div>\n                                :\n                                <div className=\"mainSideBarUserImage\">\n                                    <img src={loginData.imageUrl || loginData.picture} alt=\"cdcdcdc\" className=\"avatar\" />\n                                </div>\n                            }\n                            \n                            <h1 className=\"mainSideBarUserName\">{language === 'ES' ? infoMainSideBar.hola : infoMainSideBar.hello} <b>{nameSplittedAndCapitalized}</b> </h1>\n                        </div>\n                        <div className=\"mainSideBarContentOptions\">\n                            <div  className=\"mainSideBarContentItems\">\n                                <div className=\"mainSideBarUserOptionsIcon\">\n                                    <BiUserCircle/>\n                                </div>\n                                {language === 'ES' ? infoMainSideBar.option1Copy : infoMainSideBar.option1Copy_EN}\n                            </div>\n                            <div className=\"mainSideBarContentItems\">\n                                <div className=\"mainSideBarUserOptionsIcon\">\n                                    <IoMdCart/>\n                                </div>\n                                {language === 'ES' ? infoMainSideBar.option2Copy : infoMainSideBar.option2Copy_EN}\n                            </div>\n                            <div className=\"mainSideBarContentItems\">\n                                <div className=\"mainSideBarUserOptionsIcon\">\n                                    <BiHelpCircle/>\n                                </div>\n                                {language === 'ES' ? infoMainSideBar.option3Copy : infoMainSideBar.option3Copy_EN}\n                            </div>\n                            <div \n                            onClick={() => openingQASideBar(true)}\n                            className=\"mainSideBarContentItems\">\n                                <div className=\"mainSideBarUserOptionsIcon\">\n                                    <BiQuestionMark/>\n                                </div>\n                                {language === 'ES' ? infoMainSideBar.option4Copy : infoMainSideBar.option4Copy_EN}\n                            </div>\n                            <div className=\"mainSideBarContentItems\">\n                                <div className=\"mainSideBarUserOptionsIcon\">\n                                    <MdSaveAlt/>\n                                </div>\n                                {language === 'ES' ? infoMainSideBar.option5Copy : infoMainSideBar.option5Copy_EN}\n                            </div>\n                            <div \n                            onClick={handlingSubmitLogOutUser}\n                            className=\"mainSideBarContentItems exitDiv\">\n                                <div className=\"mainSideBarUserOptionsIcon\">\n                                    <FiLogOut/>\n                                </div>\n                                {language === 'ES' ? infoMainSideBar.option6Copy : infoMainSideBar.option6Copy_EN}\n                                \n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n        </aside>\n    ) \n    }else{\n        return null\n    }\n\n}\n\nexport default MainSideBar","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/contactSection.js",["483","484","485","486"],"import React, { useEffect } from 'react'\nimport InterestedUsersForm from '../contactSection/interestedUserForm'\nimport LoginForm from './loginForm'\nimport axios from 'axios'\nimport FormHeader from './formHeader'\nimport { addingInterestedUserToDB } from '../../requestsToApi'\n// import { responseDataInterested, responseDataRegister, responseDataLogin, responseDataNewPIN } from '../notifications/notificationData'\nimport { infoContact } from '../../utils/data'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { bindActionCreators } from '@reduxjs/toolkit'\nimport { actionCreators } from '../../state'\n\n\nconst ContactSection = ({ googleTest }) => {\n    \n    const dispatch = useDispatch()\n    const {    \n        settingResponse, openingContactSection,\n        activatingSpinner,\n        } = bindActionCreators(actionCreators, dispatch)\n    const isContactSectionOpen = useSelector((state) => state.contactSectionState.isContactSectionOpen)\n    const active = useSelector((state) => state.contactSectionState.active)\n    const loggedIn = useSelector((state) => state.homeState.loggedIn)\n    const url_interestedUsersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/interestedUsers\"\n    const URL_LOCAL_BACKEND = 'http://192.168.1.102:5000'\n \n  \n    const handlingSubmitInterestedUser = (interestedUser) => {\n        activatingSpinner(true)\n        setTimeout(async()=> {\n            try {\n                const response = await addingInterestedUserToDB(interestedUser)\n                    console.log(response)\n                    if (response.status === 201){\n                        settingResponse(response)\n                        activatingSpinner(false)\n                        openingContactSection(false)\n                        console.log('Gracias por enviarnos tus datos, estaremos en contacto...')\n                        return response.status\n                    }\n            } catch (error) {\n                console.log(error.response)\n                activatingSpinner(false)\n                settingResponse(error.response)\n            }\n        },2000)\n        \n    }\n\n    \nreturn (\n    <div \n    id={infoContact.id}\n    className={ isContactSectionOpen ? 'contactContainer_open' : 'contactContainer' }>\n        \n        <div className={ isContactSectionOpen ? 'contactWrapper_open' : 'contactWrapper' }>\n        \n            <div className=\"contactForms\">\n             \n            { !loggedIn  ? \n            <>\n            <FormHeader />\n            </>\n            :\n            null\n            }\n                  \n            { active === 'interested' && !loggedIn ? \n             <>\n             <InterestedUsersForm \n             handlingSubmitInterestedUser={handlingSubmitInterestedUser}\n             />\n            </>                     \n             :\n             null\n            }\n            \n            { active === 'check'  && !loggedIn  ? \n            <LoginForm\n            googleTest={googleTest}\n            />\n            :\n            null\n            }\n            </div>\n            \n        </div>\n        \n    </div>\n)\n}\n\n\nexport default ContactSection","/Users/p3rolix/code/landingSh3ckFE/src/components/heroSection/heroSection.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/footerSection/footerSection.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/sideBar/sideBar.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/loginSideBar/loginSideBarForm.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/optionsForms.js",[],["487","488"],"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/interestedUserForm.js",["489","490","491","492"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport { useFormik, Formik } from 'formik'\nimport * as yup from 'yup'\nimport DropDownList from './dropDownList'\nimport { infoContact } from '../../utils/data'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { actionCreators } from '../../state'\nimport { bindActionCreators } from '@reduxjs/toolkit'\n\n\nconst validationSchema = yup.object({\n    fullName: yup.string().min(3).max(100).required('hola, no te olvides de colocar tu nombre completo'),\n    email: yup.string().email('Por favor introduce una dirección de correo válida').required('No te olvides de colocar tu correo electrónico'),   \n})\n\n\nconst InterestedUserForm = ({ \n    handlingSubmitInterestedUser,\n}) => {\n    // const url_interestedUsersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/interestedUsers\"\n    const language = useSelector((state) => state.sideBarState.language)\n    const [ city, setCity ] = useState(language === 'ES' ? infoContact.intUsersFormPH3 : infoContact.intUsersFormPH3_EN)\n    const [ cityError, setCityError ] = useState(false)\n    const options = ['Caracas', 'Barquisimeto', 'Valencia', 'Maracaibo', 'Athens']\n    \n    // const dispatch = useDispatch\n    // const {   \n    //     activatingSpinner, settingResponse,\n    //     openingContactSection,     \n    // } = bindActionCreators(actionCreators, dispatch)\n    \n\n    const onSubmit = (values) => {\n        console.log(values)\n        const interestedUser = {\n            fullName: values.fullName,\n            email: values.email,\n            city: city\n        }\n        console.log(interestedUser)\n        if (interestedUser.city === 'Ciudad'){\n            setCityError(true)\n            console.log(interestedUser.city)\n        }\n        if (interestedUser.city !== 'Ciudad'){\n            handlingSubmitInterestedUser(interestedUser)\n        }  \n    }\n\n  \n    const formik = useFormik({\n        initialValues: {\n            fullName: \"\",\n            email: \"\"\n        },\n        validateOnBlur: true,\n        onSubmit,\n        validationSchema: validationSchema\n\n    })\n  \n \n\n\n \n\n    // console.log(formik.values)\n    // console.log(formik.errors)\n    \n    return (\n        <div className=\"boxContainer\">\n            <Formik>\n            <form \n            onSubmit={formik.handleSubmit}\n            className=\"formContainer\">\n                <input\n                className=\"input\"\n                name=\"fullName\"\n                placeholder={language === 'ES' ? infoContact.intUsersFormPH1 : infoContact.intUsersFormPH1_EN}\n                type=\"text\" \n                value={formik.values.fullName}\n                onChange={formik.handleChange}\n                autoComplete=\"on\"\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.fullName && formik.errors.fullName ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <input\n                className=\"input\"\n                name=\"email\"\n                placeholder={language === 'ES' ? infoContact.intUsersFormPH2 : infoContact.intUsersFormPH2_EN}\n                type=\"email\" \n                autoComplete=\"on\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <DropDownList\n                options={options}\n                city={city}\n                setCity={setCity}\n                cityError={cityError}\n                setCityError={setCityError}\n                />\n                <button\n                className=\"sendDataBtn\"\n                type=\"submit\"\n                >{language === 'ES' ? infoContact.intUsersFormBtnLabel : infoContact.intUsersFormBtnLabel_EN}</button>\n            </form>\n            </Formik>\n            \n\n        </div>\n    )\n}\n\nexport default InterestedUserForm\n","/Users/p3rolix/code/landingSh3ckFE/src/utils/settingOffsets.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/video.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/utils/loadingSpinner.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/formHeader.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/notifications/NotificationBox.js",["493","494"],"import React from 'react'\nimport successImage from '../../images/ok_success_icon.svg'\nimport foundImage from '../../images/ok_success_verified_icon.svg'\nimport { FaTimes } from 'react-icons/fa'\nimport { regularCopy } from './notificationData'\nimport { Link as LinkS } from 'react-scroll'\nimport { OffsetHandler } from '../../utils/settingOffsets'\nimport { responseDataInterested, responseDataRegister, responseDataLogin, responseDataNewPIN } from '../../components/notifications/notificationData'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators } from '../../state'\nimport { useEffect } from 'react'\n\nconst NotificationBox = ({  \n    // toggleNotification,\n}) => {\n    let responseData\n    const dispatch = useDispatch()\n    const {  \n        settingResponse,\n        activatingForm, \n        gettingLoginResponseData,\n        openingContactSection \n    } = bindActionCreators(actionCreators, dispatch)\n\n    const language = useSelector((state) => state.sideBarState.language)\n    const active = useSelector((state) => state.contactSectionState.active)\n    const loginResponse = useSelector((state) => state.homeState.loginResponse)\n    // const response = useSelector((state) => state.contactSectionState.response)\n    const response = useSelector((state) => loginResponse ? loginResponse : state.contactSectionState.response)\n    const forgotPIN = useSelector((state) => state.contactSectionState.forgotPIN)\n    console.log(response)\n    console.log(response.config)\n    console.log(loginResponse)\n    const url = response.config.url\n    // const url_regUsers = \"https://intense-atoll-00786.herokuapp.com/api/users\"\n    const url_interestedUsers = \"https://intense-atoll-00786.herokuapp.com/api/interestedUsers\"\n   \n    \n    if (response && active === 'interested'){\n        responseData = responseDataInterested \n    }\n    if (response && forgotPIN){\n        responseData = responseDataNewPIN\n    }\n    if (response && active === 'check'){\n        responseData = responseDataRegister\n    }\n    if (loginResponse && active === 'check'){\n        responseData = responseDataLogin\n    } \n    \n\n    \n    const capitalizeFirstLetter = (string) => {\n        const str2 = string.charAt(0).toUpperCase() + string.slice(1)\n        console.log(str2.split(' ')[0]);\n        return str2.split(' ')[0]    \n    }\n\n    const closingNotification = () => {\n        settingResponse(null)\n        gettingLoginResponseData(null) //action\n        activatingForm(null) //action\n        openingContactSection(false) //action\n    }\n\n    const nameSplittedAndCapitalized = capitalizeFirstLetter(response.data)\n    // console.log('splitting response: ', responseSplitted[0])\n    if (response){\n        if (response.status === 400){\n            return (\n            // <div className=\"notificationContainer\">\n            <div className={response ? 'notificationContainer_open' : 'notificationContainer'}>\n                <LinkS \n                onClick={closingNotification}\n                to=\"nextStepSection\"  \n                activeClass=\"active\"\n                spy={true}\n                smooth={true}\n                offset={OffsetHandler('checkAProduct')}\n                duration={500} \n                className=\"closeIconContainer\">\n                    <FaTimes/>\n                </LinkS>\n                <div className=\"notificationWrapper\">\n                    <img src={foundImage} alt=\"successImage\" />\n                    <div className=\"notificationName\"> \n                        <span className=\"notificationSpan\">\n                            {/* <b>{language === 'ES' ? regularCopy.hola : regularCopy.hello} {''}{responseSplitted[0]}</b> */}\n                            <b>{language === 'ES' ? regularCopy.hola : regularCopy.hello} {''}{nameSplittedAndCapitalized}</b>    \n                        </span>    \n                    </div>\n                    <div className=\"notificationResponse\">\n                    {language === 'ES' ? responseData.errorMessage : responseData.errorMessage_EN}\n                    </div>\n                    \n                    <LinkS \n                    className=\"notificationBtn\"\n                    onClick={closingNotification}\n                    to=\"nextStepSection\"  \n                    activeClass=\"active\"\n                    spy={true}\n                    smooth={true}\n                    offset={OffsetHandler('checkAProduct')}\n                    duration={500}\n                    >{language === 'Es' ? regularCopy.continueBtnCopy : regularCopy.continueBtnCopy_EN}</LinkS>     \n                </div>\n            </div>   \n            )\n        }\n        if (response.status === 409){\n            return (\n            <div className={response ? 'notificationContainer_open' : 'notificationContainer'}>\n                <LinkS \n                onClick={closingNotification}\n                to=\"nextStepSection\"  \n                activeClass=\"active\"\n                spy={true}\n                smooth={true}\n                offset={OffsetHandler('checkAProduct')}\n                duration={500}\n                className=\"closeIconContainer\">\n                    <FaTimes/>\n                </LinkS>\n                <div className=\"notificationWrapper\">\n                    <img src={foundImage} alt=\"successImage\" />\n                    <div className=\"notificationName\"> \n                        <span className=\"notificationSpan\">\n                            <b>{language === 'ES' ? regularCopy.hola : regularCopy.hello} {''}{nameSplittedAndCapitalized}</b>\n                            {/* <b>{language === 'ES' ? regularCopy.hola : regularCopy.hello} {''}{responseSplitted[0]}</b>      */}\n                        </span>    \n                    </div>\n                    <div className=\"notificationResponse\">\n                    {language === 'ES' ? responseData.errorMessage : responseData.errorMessage_EN}\n                    </div>\n                    <LinkS\n                    to=\"nextStepSection\"  \n                    activeClass=\"active\"\n                    spy={true}\n                    smooth={true}\n                    offset={OffsetHandler('checkAProduct')}\n                    duration={500} \n                    className=\"notificationBtn\"\n                    onClick={closingNotification}\n                    >{language === 'Es' ? regularCopy.continueBtnCopy : regularCopy.continueBtnCopy_EN}</LinkS>\n                </div>\n            </div>   \n            )\n        }\n        if (response.status === 201){\n            return (\n            <div className={response ? 'notificationContainer_open' : 'notificationContainer'}>\n                <LinkS\n                to=\"nextStepSection\"  \n                activeClass=\"active\"\n                spy={true}\n                smooth={true}\n                offset={url === url_interestedUsers ? -5000 : OffsetHandler('checkAProduct') }\n                duration={url === url_interestedUsers ? 1000 : 500} \n                onClick={closingNotification}\n                className=\"closeIconContainer\">\n                    <FaTimes/>\n                </LinkS>\n                <div className=\"notificationWrapper\">\n                    <img src={successImage} alt=\"successImage\" />\n                    <div className=\"notificationName\">\n                        <span className=\"notificationSpan\">\n                            <b>{language === 'ES' ? regularCopy.hola : regularCopy.hello} {''}{nameSplittedAndCapitalized}</b>    \n                        </span>    \n                    </div>\n                    <div className=\"notificationResponse\">\n                    {language === 'ES' ? responseData.successMessage : responseData.successMessage_EN }\n                    </div>\n                    <LinkS\n                    to=\"nextStepSection\"  \n                    activeClass=\"active\"\n                    spy={true}\n                    smooth={true}\n                    offset={url === url_interestedUsers ? -5000 : OffsetHandler('checkAProduct') }\n                    duration={url === url_interestedUsers ? 1000 : 500} \n                    className=\"notificationBtn\"\n                    onClick={closingNotification}\n                    >{language === 'Es' ? regularCopy.continueBtnCopy : regularCopy.continueBtnCopy_EN}</LinkS>\n                </div>\n                \n            </div>\n            )\n        }\n        if (response.status === 200){\n            return (\n            <div className={response ? 'notificationContainer_open' : 'notificationContainer'}>\n                <LinkS\n                to=\"nextStepSection\"  \n                activeClass=\"active\"\n                spy={true}\n                smooth={true}\n                offset={OffsetHandler('checkAProduct')}\n                duration={500} \n                onClick={closingNotification}\n                className=\"closeIconContainer\">\n                    <FaTimes/>\n                </LinkS>\n                <div className=\"notificationWrapper\">\n                    <img src={successImage} alt=\"successImage\" />\n                    <div className=\"notificationName\">\n                        <span className=\"notificationSpan\">\n                            <b>{language === 'ES' ? regularCopy.hola : regularCopy.hello} {''}{nameSplittedAndCapitalized}</b>    \n                        </span>    \n                    </div>\n                    <div className=\"notificationResponse\">\n                        {language === 'ES' ? responseData.successMessage : responseData.successMessage_EN }\n                    </div>\n                    <LinkS\n                    to=\"nextStepSection\"  \n                    activeClass=\"active\"\n                    spy={true}\n                    smooth={true}\n                    offset={OffsetHandler('checkAProduct')}\n                    duration={500}\n                    className=\"notificationBtn\"\n                    onClick={closingNotification}\n                    >{language === 'Es' ? regularCopy.continueBtnCopy : regularCopy.continueBtnCopy_EN}</LinkS>\n                </div>\n                \n            </div>\n            )\n        }\n        if (response.status === 500) {\n            return (\n                <div>\n                    <b>{language === 'Es' ? regularCopy.error500Copy : regularCopy.continueBtnCopy_EN}</b>\n                </div>\n            )\n        }\n    }\n    return null     \n   \n}\n\nexport default NotificationBox\n","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/loginForm.js",["495","496","497"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup' \nimport RegisterForm from './registerForm'\nimport ForgotPINForm from './forgotPINForm'\nimport {MdOutlineVisibility} from 'react-icons/md'\nimport { infoContact } from '../../utils/data'\nimport GoogleAuth5 from '../buttons/googleAuth5'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { actionCreators } from '../../state'\nimport { bindActionCreators } from '@reduxjs/toolkit'\nimport { verifyingTokenRequest, requestToLoginUsers } from '../../requestsToApi'\n\n\nconst validationSchema = yup.object({\n    email: yup.string().email('Por favor introduce una dirección de correo válida').required('hola, no te olvídes de colocar tu correo electrónico'),\n    pin: yup.string().min(4).max(4).required('No te olvides de colocar tu PIN de seguridad'),   \n})\n\n\nconst LoginForm = ({ googleTest }) => {\n    const dispatch = useDispatch()\n    const {   \n        openingRegView, openingForgotPINView,   \n        activatingSpinner,openingQASideBar,\n        settingCurrentUser, gettingLoginResponseData, \n        handlingIsLoggedIn, handlingIsLoggedOut,\n} = bindActionCreators(actionCreators, dispatch)\nconst regView = useSelector((state) => state.contactSectionState.regView)\nconst forgotPIN = useSelector((state) => state.contactSectionState.forgotPIN)\nconst language = useSelector((state) => state.sideBarState.language)\n\nconst [typeOfPIN, setTypeOfPIN ] = useState(false)\n\n\n    const onSubmit = async(values) => {\n        handlingSubmitLoginUser(values)\n    }\n\n    const handlingSubmitLoginUser = async(user) => {\n        openingQASideBar(false) //action  \n        activatingSpinner(true) //action\n        setTimeout(async() => {\n            try {\n                const { data } = await requestToLoginUsers(user)\n                console.log(data)\n                localStorage.setItem('SH3CK_TOKEN', data.token)\n                const response = await verifyingTokenRequest(data.token)\n                console.log(response)\n                settingCurrentUser(response.data) //action\n                gettingLoginResponseData(response)  //action\n                activatingSpinner(false) //action\n                handlingIsLoggedIn(true)\n                handlingIsLoggedOut(false) //action\n                console.log('Usuaurio encontrado y hace login')    \n            } catch (error) {\n                console.log(error)\n                gettingLoginResponseData(error.response)\n                activatingSpinner(false) //action\n            }\n        },3000)\n        \n    }\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            pin: \"\"\n        },\n        validateOnBlur: true,\n        onSubmit,\n        validationSchema: validationSchema\n\n    })\n\n    // console.log(formik.errors)\n\n    const togglingPINVisibility = () => {\n        setTypeOfPIN(!typeOfPIN)\n    }\n\n    if (regView){\n        return(\n            <RegisterForm />\n        )\n    }\n\n    if (forgotPIN){\n        return(\n            <ForgotPINForm />\n        ) \n        \n    }\n\n    return (\n        <div className=\"boxContainer\">\n            <form \n            onSubmit={formik.handleSubmit}\n            className=\"formContainer\">\n                \n                <input\n                className=\"input\"\n                autoComplete=\"on\"\n                name=\"email\"\n                placeholder={language === 'ES' ? infoContact.loginFormPH1 : infoContact.loginFormPH1_EN} \n                type=\"email\" \n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <div className=\"inputWrapper\">\n                <input\n                className=\"inputPassword\"\n                name=\"pin\"\n                autoComplete=\"on\"\n                placeholder={language === 'ES' ? infoContact.loginFormPH2 : infoContact.loginFormPH2_EN} \n                type={!typeOfPIN ? 'password' : 'text'} \n                value={formik.values.pin}\n                onChange={formik.handleChange}                \n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.city && formik.errors.city ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                    <div className=\"eyeWrapper\">\n                        <MdOutlineVisibility\n                        onClick={togglingPINVisibility}\n                        className=\"eyeIcon\"\n                        />\n                    </div>\n                \n                </div>\n                \n                \n                <button\n                className=\"sendDataBtn\"\n                type=\"submit\"\n                >\n                    {/* <Link to={`/app`}> */}\n                        {language === 'ES' ? infoContact.loginFormSendBtn : infoContact.loginFormSendBtn_EN}\n                    {/* </Link> */}\n                </button>\n                <button\n                onClick={() => openingRegView(!regView)}\n                className=\"regButton\"\n                type=\"submit\"\n                >{language === 'ES' ? infoContact.loginFormRegBtn : infoContact.loginFormRegBtn_EN}</button>\n                <span\n                onClick={() => openingForgotPINView(!forgotPIN)} \n                className=\"forgotPINSpan\">{language === 'ES' ? infoContact.loginFormSpan : infoContact.loginFormSpan_EN}</span>\n                <GoogleAuth5\n                googleTest={googleTest}\n                />\n            </form>\n\n        </div>\n    )\n}\n\nexport default LoginForm","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/button.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/notifications/notificationData.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/dropDownList.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/registerForm.js",["498"],"import React from 'react'\nimport axios from 'axios'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup' \nimport { infoContact } from '../../utils/data'\nimport GoogleAuth5 from '../buttons/googleAuth5'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { actionCreators } from '../../state'\nimport { bindActionCreators } from '@reduxjs/toolkit'\nimport { addingRegularUsersToDB } from '../../requestsToApi'\n\nconst validationSchema = yup.object({\n    fullName: yup.string().min(3).max(100).required('hola, no te olvides de colocar tu nombre completo'),\n    // password: yup.string().min(6).max(200).required('No te olvides de colocar tu clave'),\n    email: yup.string().email('Por favor introduce una dirección de correo válida').required('No te olvides de colocar tu correo electrónico'),\n    phoneNumber: yup.string().length(11).required('No te olvides de colocar tu número de teléfono')\n})\n\n\nconst RegisterForm = ({ googleTest }) => {\n    \n    const dispatch = useDispatch()\n    const {   \n        openingRegView, openingContactSection, \n        activatingSpinner, settingResponse,\n        openingForgotPINView,  \n    } = bindActionCreators(actionCreators, dispatch)\n    const language = useSelector((state) => state.sideBarState.language)\n\n    const onSubmit = (values) => {\n        handlingSubmitUser(values)\n    }\n\n    const settinRegViewAndForgotPINToFalse = () => {\n        openingRegView(false) //action creator\n        openingForgotPINView(false) //action creator\n    }\n\n    const handlingSubmitUser = async(user) => {\n        activatingSpinner(true)\n        setTimeout(async()=> {\n            try {\n                const response = await addingRegularUsersToDB(user)\n                    console.log(response)\n                    if (response.status === 201){\n                        settingResponse(response)\n                        activatingSpinner(false)\n                        openingContactSection(false)\n                        settinRegViewAndForgotPINToFalse()\n                        console.log('Gracias por registrarte')\n                        return response.status\n                    }\n            } catch (error) {\n                console.log(error)\n                activatingSpinner(false)\n                settingResponse(error.response)\n            }\n        },2000)\n    } \n\n\n    const formik = useFormik({\n        initialValues: {\n            fullName: \"\",\n            email: \"\",\n            phoneNumber: \"\"\n        },\n        validateOnBlur: true,\n        onSubmit,\n        validationSchema: validationSchema\n\n    })\n\n    // console.log(formik.errors)\n\n    return (\n        <div className=\"boxContainer\">\n            <form \n            onSubmit={formik.handleSubmit}\n            className=\"formContainer\">\n                <input\n                className=\"input\"\n                name=\"fullName\"\n                placeholder={language === 'ES' ? infoContact.regUsersFormPH1 : infoContact.regUsersFormPH1_EN} \n                autoComplete=\"on\"\n                type=\"text\" \n                value={formik.values.fullName}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.fullName && formik.errors.fullName ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <input\n                className=\"input\"\n                name=\"email\"\n                placeholder={language === 'ES' ? infoContact.regUsersFormPH2 : infoContact.regUsersFormPH2_EN} \n                type=\"text\" \n                autoComplete=\"on\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <input\n                className=\"input\"\n                name=\"phoneNumber\"\n                placeholder={language === 'ES' ? infoContact.regUsersFormPH3 : infoContact.regUsersFormPH3_EN} \n                type=\"text\" \n                autoComplete=\"on\"\n                value={formik.values.phoneNumber}\n                onChange={formik.handleChange}                \n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.phoneNumber && formik.errors.phoneNumber ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <button\n                className=\"sendDataBtn\"\n                type=\"submit\"\n                >{language === 'ES' ? infoContact.regUsersFormSendBtn : infoContact.regUsersFormSendBtn_EN}</button>\n\n                <GoogleAuth5\n                googleTest={googleTest}\n                />\n                \n                \n            \n            </form>\n\n        </div>\n    )\n}\n\nexport default RegisterForm","/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/forgotPINForm.js",["499"],"import React from 'react'\nimport axios from 'axios'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup' \nimport { infoContact } from '../../utils/data'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { actionCreators } from '../../state'\nimport { bindActionCreators } from '@reduxjs/toolkit'\nimport { requestToGenerateNewPIN } from '../../requestsToApi'\n\n\nconst validationSchema = yup.object({\n    email: yup.string().email('Por favor introduce una dirección de correo válida').required('No te olvides de colocar tu correo electrónico'),\n    phoneNumber: yup.string().length(11).required('No te olvides de colocar tu número de teléfono')\n})\n\n\nconst ForgotPINForm = ({ \n    language \n}) => {\n \n    const dispatch = useDispatch()\n    const {   openingForgotPINView, activatingSpinner, settingResponse  } = bindActionCreators(actionCreators, dispatch)\n    const forgotPIN = useSelector((state) => state.contactSectionState.forgotPIN)\n\n    const onSubmit = (values) => {\n        handlingNewPINRequest(values)\n    }\n\n    const handlingNewPINRequest = async(dataToRequest) => {\n        // console.log(dataToRequest)\n        activatingSpinner(true)\n        try {\n            const response = await requestToGenerateNewPIN(dataToRequest)\n            console.log(response.status)\n            if (response.status === 200){\n                console.log(response)\n                settingResponse(response)\n                activatingSpinner(false)\n                return response.status\n            }\n        } catch (error) {\n            console.log(error)\n            activatingSpinner(false)\n            settingResponse(error.response)\n        }\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            phoneNumber: \"\"\n        },\n        validateOnBlur: true,\n        onSubmit,\n        validationSchema: validationSchema\n\n    })\n\n    // console.log(formik.values)\n    console.log(formik.errors)\n\n    return (\n        <div className=\"boxContainer\">\n            <form \n            onSubmit={formik.handleSubmit}\n            className=\"formContainer\">\n                <input\n                className=\"input\"\n                name=\"email\"\n                placeholder={language === 'ES' ? infoContact.forgotPINFormPH1 : infoContact.forgotPINFormPH1_EN} \n                type=\"text\" \n                autoComplete=\"on\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <input\n                className=\"input\"\n                name=\"phoneNumber\"\n                placeholder={language === 'ES' ? infoContact.forgotPINFormPH2 : infoContact.forgotPINFormPH2_EN} \n                type=\"text\" \n                autoComplete=\"on\"\n                value={formik.values.phoneNumber}\n                onChange={formik.handleChange}                \n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.phoneNumber && formik.errors.phoneNumber ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <button\n                className=\"sendDataBtn\"\n                type=\"submit\"\n                >{language === 'ES' ? infoContact.forgotPINFormSendBtn : infoContact.forgotPINFormSendBtn_EN}</button>\n                <button\n                onClick={() => openingForgotPINView(!forgotPIN)}\n                className=\"comeBackBtn\"\n                type=\"submit\"\n                >{language === 'ES' ? infoContact.forgotPINFormBackBtn : infoContact.forgotPINFormBackBtn_EN}</button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default ForgotPINForm","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuthButtons.js",[],["500","501"],"/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/applications.js",["502"],"import React, { useState, useEffect } from 'react'\nimport {BrowserRouter, Routes, Route, Link} from 'react-router-dom'\nimport { Dropdown } from 'react-bootstrap'\n// import '../../bookface.css'\n\n\nconst Dashboard = () => {\n\n  const auth = window.gapi.auth2.getAuthInstance()\n  const user = auth.currentUser.get()\n  const profile = user.getBasicProfile()\n  const email = profile.getEmail()\n  const imageUrl = profile.getImageUrl()\n\n  return (\n    <>\n      <nav>\n        <div>Bookface</div>\n        <img className=\"push\" src={imageUrl} alt=\"cdcdcdc\"/>\n        <Dropdown>\n          <Dropdown.Toggle as=\"a\">\n            {email}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n              <Dropdown.Item\n              onClick={auth.signOut}\n              >Sign out</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </nav>\n      <div className=\"container\">\n        <p>Look at this bookface</p>\n        <img src=\"https://christianlauersen.files.wordpress.com/2015/11/img_0423.png\" alt=\"Christian\" />\n      </div>\n    </>  \n  )\n\n}\n\nconst LoginPage = ({isSignedIn}) => {\n\n  useEffect(()=> {\n    window.gapi.load('signin2',() =>{\n      window.gapi.signin2.render('login-button')\n    })\n  },[])\n\n  return (\n    <div className=\"container\">\n      <div id=\"login-button\"></div>\n    </div>\n  )\n}\n\nconst LandingPage = () => {\n  return (\n      <div className=\"container\">\n          <h1>BookFace</h1>\n          <p>Leading provider of bookfaces</p>\n          <Link to=\"/dashboard\">Go to Dashboard</Link>\n      </div>\n  )\n}\n\nconst Application = () => {\n\n  useEffect(()=> {\n    insertGapiScript()\n  },[])\n  \n  const [isSignedIn, setIsSignedIn ] = useState(null)\n  \n  const insertGapiScript = () => {\n    const script = document.createElement('script')\n    script.src = \"https://apis.google.com/js/platform.js\"\n    script.onload = () => {\n        initializeGooglesignIn()\n    }\n    document.body.appendChild(script)\n  } \n\nconst initializeGooglesignIn = () => {\n  window.gapi.load('client:auth2', () => {\n    window.gapi.client.init({\n      client_id: '915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com',\n      scope:'profile'\n    }).then(()=> {\n      console.log('gapi initialized...')\n      const auth = window.gapi.auth2.getAuthInstance()\n      const isSignedIn = auth.isSignedIn.get()\n      setIsSignedIn(isSignedIn)\n      console.log(isSignedIn)\n      auth.isSignedIn.listen(isSignedIn => {\n        setIsSignedIn(isSignedIn)\n      })\n    })\n})\n}\n\n\n  const ifUserSignedIn = (Component) => {\n    console.log(isSignedIn)\n    if (isSignedIn === null){\n      return(\n        <h1>Checking if you are signed in...</h1>\n      )\n    }\n    return isSignedIn ? <Component/> : <LoginPage/>\n  }\n\n  return (\n   <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<LandingPage/>} exact></Route>\n        <Route path=\"/dashboard\" element={ ifUserSignedIn(Dashboard)}/>\n      </Routes>\n   \n   </BrowserRouter> \n  )\n}\n\nexport default Application",["503","504"],"/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuth3.js",["505","506"],"import React, { useState, useEffect } from 'react'\n// import '../../bookface.css'\n\nconst GoogleAuth3 = ({isSignedIn, googleTest}) => {\n    \n    useEffect(()=> {\n        window.gapi.load('signin2', () => {\n            const params = {\n                onsuccess: (user) => {\n                    console.log(user)\n                    let response = user.getAuthResponse()\n                    console.log(response)\n                    googleTest(response.id_token)\n                },\n                'theme': 'dark',\n                'width': 370,\n                'height': 85,\n                longtitle: true\n            }\n            window.gapi.signin2.render('loginButton', params )\n          })\n    },[])\n   \n    if (isSignedIn === null){\n      return(\n        <h1>Checking if you are signed in...</h1>\n      )\n    }\n\n    return (\n        <>\n        <div className=\"googleAuthContainer\">\n            <div\n            id=\"loginButton\"\n            >Inicia sesion con Google</div>\n        </div>    \n        \n        </>\n    )\n    \n    // return isSignedIn ? <h1>You are logged in</h1> : <h1>You are NOT logged in</h1>\n  \n}\n\nexport default GoogleAuth3","/Users/p3rolix/code/landingSh3ckFE/src/views/homeTest.js",["507","508","509","510"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../components/navBar/navBar'\nimport SideBar from '../components/sideBar/sideBar'\nimport LoginSideBar from '../components/loginSideBar/loginSideBar'\nimport MainSideBar from '../components/mainSideBar/mainSideBar'\n\nimport HeroSection from '../components/heroSection/heroSection'\nimport VideoSection from '../components/videoSection/videoSection'\nimport HiwSection from '../components/hiwSection/hiwSection'\n\nimport useMobilDetection from '../utils/mobilDetection'\nimport useMobilDetect from '../utils/mobilHook'\nimport NavBarMobil from '../components/navBar/navBarMobil'\nimport ContactSection from '../components/contactSection/contactSection'\nimport FooterSection from '../components/footerSection/footerSection'\nimport LoadingSpinner from '../utils/loadingSpinner'\n\n\n// f31c5fee13aef74568ac client id\n// 5029d96a85c6c31586054f0c2d8d3010d8fdae69  client secret\n\nconst HomeTest = () => {\n\n    const [ isOpen, setIsOpen ] = useState(false)\n    const [ loggedIn, setLoggedIn ] = useState(false)\n    const [ loggedOut, setLoggedOut ] = useState(true)\n    const [currentUser, setCurrentUser ] = useState('')\n    const [ loginSideBarOpen, setLoginSideBarOpen ] = useState(false)\n    const [ mainSideBarOpen, setMainSideBarOpen ] = useState(false)\n    const [ loginResponse, setLoginResponse ] = useState(null)\n    const [ loading, setLoading ] = useState(false)\n    const [ language, setLanguage ] = useState('ES')\n\n    // Google OAuth States *****************************************\n    const [googleUser, setGoogleUser] = useState({\n        fullName: '',\n        email: '',\n        id: '',\n        imageUrl: '',\n        token_id: ''\n    })\n    const [ loginData, setLoginData ] = useState(null)\n    const [isSignedIn, setIsSignedIn] = useState(null)\n    // console.log(isSignedIn)\n    // **************************************************************\n    \n    \n    const mobil = useMobilDetect()\n    const mobil2 = useMobilDetection()\n    // const url_userLogin = \"http://192.168.1.102:5000/api/users/login\"\n    const url_userLoginITC = \"https://intense-atoll-00786.herokuapp.com/api/users/login\"\n    let auth\n    useEffect(() => {\n        gettingTokenForLocalSignIn()\n        insertGapiScript()\n    },[])\n\n    const gettingTokenForLocalSignIn = () => {\n        const getToken = async() => {\n            const token = localStorage.getItem('SH3CK_TOKEN')\n            if (token){\n                const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n                    headers:{\n                        // 'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}` \n                    } \n                })\n                console.log(response.data)\n                setCurrentUser(response.data)\n                return setLoggedIn(true)\n            }\n            setLoggedIn(false)\n            setLoggedOut(true)\n            \n            \n        }   \n        getToken()\n    }\n\n    \n\n    const handlingSubmitLoginUser = async(user) => {    \n        try {\n            const { data } = await axios.post(url_userLoginITC, user)\n            console.log(data)\n            localStorage.setItem('SH3CK_TOKEN', data.token)\n            // ******************************************\n            const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n                headers:{\n                    // 'Content-Type': 'application/json',\n                    Authorization: `Bearer ${data.token}` \n                } \n            })\n            setLoginResponse(response)\n            console.log(response.data)\n            setCurrentUser(response.data)\n            setLoading(false)\n            setLoggedIn(true)\n            setLoggedOut(false)\n            console.log('Usuaurio encontrado y hace login')    \n        } catch (error) {\n            console.log(error)\n            setLoginResponse(error.response)\n        }\n    }\n\n    const handlingLogin = (user) => {\n        setLoading(true)\n        setTimeout(async() => {\n            handlingSubmitLoginUser(user)\n            setLoading(false)\n            setLoginSideBarOpen(!loginSideBarOpen)\n        }, 2000);\n    }\n\n    const handlingSubmitLogOutUser = async() => {\n        if (isSignedIn) {\n            const auth = window.gapi.auth2.getAuthInstance()\n            await auth.signOut()\n            setIsSignedIn(false)\n            setMainSideBarOpen(!mainSideBarOpen)\n        }\n        if (loggedIn){\n            localStorage.removeItem('SH3CK_TOKEN')\n            setMainSideBarOpen(!mainSideBarOpen)\n            setLoggedIn(false)\n            setLoggedOut(true)\n        }\n        \n        \n    }\n \n    \n    const toggleSideBar = () => {\n        setIsOpen(!isOpen)\n        \n    } \n    const toggleLoginSideBar = () => {\n        setLoginSideBarOpen(!loginSideBarOpen)\n        \n    }\n    \n    const toggleMainSideBar = () => {\n        setMainSideBarOpen(!mainSideBarOpen)\n    } \n    const toggleNotification = () => {\n        setLoginResponse(null)\n    }\n\n    const toggleLanguage = () => {\n        if (language === 'ES') {\n            setLanguage('EN')\n            return\n        }\n        if (language === 'EN'){\n            setLanguage('ES')\n            return\n        } \n    }\n\n  \n  //  ************* Google OAuth Processes and functions (with googleAuth3) ****************\n\n \n        const insertGapiScript = () => {\n            const script = document.createElement('script')\n            script.src = \"https://apis.google.com/js/platform.js\"\n            script.onload = () => {\n                initializeGooglesignIn()\n            }\n            document.body.appendChild(script)\n          } \n          \n          const initializeGooglesignIn = () => {\n            window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n              client_id: '915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com',\n              scope:'profile'\n            }).then(()=> {\n            console.log('gapi initialized...')\n            auth = window.gapi.auth2.getAuthInstance()\n            const isSignedIn = auth.isSignedIn.get()\n            {isSignedIn ? setLoggedIn(true) : setLoggedIn(false)}\n            setIsSignedIn(isSignedIn)\n            console.log(isSignedIn)\n            auth.isSignedIn.listen(isSignedIn => {\n                setIsSignedIn(auth.isSignedIn.get())\n            })   \n            })\n          })\n          \n        }\n        const googleTest = async(token) => {\n            // const test = JSON.parse(user)\n            // *****************************************\n            try {\n                console.log('Sending request to BackEnd api...')\n                console.log(token)\n                const res = await axios.post('https://intense-atoll-00786.herokuapp.com/api/extUsers/google', {\n                    token,\n                    headers:{\n                        'Content-Type': 'application/json',\n                    },\n                })\n                console.log(res)\n                // const res = await axios.post('http://localhost:5000/api/extUsers/google',token)\n                const data = await res.data\n                if (res.status === 201){\n                    console.log(data)\n                    setLoginData(data)   \n                    setCurrentUser(data.fullName)\n                    setLoggedIn(true) \n                    setLoggedOut(false)\n                    return res.status\n                }\n            } catch (error) {\n                console.log(error)\n                console.log(error.response.data)\n                setCurrentUser(error.response.data.fullName)\n                setLoginData(error.response.data)\n                setLoggedIn(true) \n                setLoggedOut(false)\n            }\n            // *************************************************\n            \n            // setLoggedIn(true)\n            // setLoggedOut(false)\n            \n        }\n// console.log(googleUser)\n// console.log(loginData)\n    \n    return (\n        <>\n            { loading ?\n            <LoadingSpinner/>\n            :\n            null\n            }\n            \n            {/* {!loggedIn && loginSideBarOpen ? */}\n            <LoginSideBar\n            loginSideBarOpen={ loginSideBarOpen } \n            toggleLoginSideBar={ toggleLoginSideBar }\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            handlingLogin={handlingLogin}\n            loading = {loading}\n            language={language}\n            />\n            {/* : null */}\n            {/* } */}\n\n            {/* {!loggedOut && logoutSideBarOpen ? */}\n            <MainSideBar\n            mainSideBarOpen={mainSideBarOpen}\n            toggleMainSideBar={toggleMainSideBar}\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            handlingSubmitLogOutUser={handlingSubmitLogOutUser}\n            username={currentUser}\n            language={language}\n            loginData={loginData}           \n            />\n            {/* : null */}\n            {/* } */}\n            \n            <SideBar \n            isOpen={ isOpen } \n            toggleSideBar={ toggleSideBar }\n            language={language}\n            toggleLanguage={toggleLanguage}\n            />\n            \n            { mobil2.screenWidth <= 1098 || mobil ?  \n                <NavBarMobil \n                toggleLoginSideBar={toggleLoginSideBar}\n                toggleMainSideBar={toggleMainSideBar}\n                toggleSideBar={ toggleSideBar }  \n                username={currentUser}\n                login={ loggedIn }\n                language={language}\n                // onLogin={ onLogin }\n            /> : <NavBar\n            toggleLoginSideBar={toggleLoginSideBar}\n            toggleMainSideBar={toggleMainSideBar} \n            username={currentUser}\n            login={ loggedIn }\n            language={language}\n            // onLogin={ onLogin }\n        />\n            }\n            <HeroSection language={language} />\n            <VideoSection language={language}/>\n            <HiwSection language={language}/>\n            <ContactSection \n            language={language}\n            loggedIn={loggedIn}\n            isSignedIn={isSignedIn}\n            handlingSubmitLoginUser={ handlingSubmitLoginUser}\n            loginResponse={loginResponse}\n            toggleNotificationLogin={toggleNotification}\n            googleTest={googleTest}\n            />\n            <FooterSection language={language}/>\n        </>\n    )\n}\n\nexport default HomeTest\n","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuth4.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/views/homeTest2.js",["511"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../components/navBar/navBar'\nimport SideBar from '../components/sideBar/sideBar'\nimport LoginSideBar from '../components/loginSideBar/loginSideBar'\nimport MainSideBar from '../components/mainSideBar/mainSideBar'\nimport HeroSection from '../components/heroSection/heroSection'\nimport VideoSection from '../components/videoSection/videoSection'\nimport HiwSection from '../components/hiwSection/hiwSection'\nimport useMobilDetection from '../utils/mobilDetection'\nimport useMobilDetect from '../utils/mobilHook'\nimport NavBarMobil from '../components/navBar/navBarMobil'\nimport ContactSectionTest from '../components/contactSection/contactSectionTest'\nimport FooterSection from '../components/footerSection/footerSection'\nimport NextStepSection from '../components/nextStepSection.js/nextStepSection'\nimport LoadingSpinner from '../utils/loadingSpinner'\n\n\n// f31c5fee13aef74568ac client id\n// 5029d96a85c6c31586054f0c2d8d3010d8fdae69  client secret\n\nconst HomeTest2 = () => {\n\n    const [ isOpen, setIsOpen ] = useState(false)\n    const [ loggedIn, setLoggedIn ] = useState(false)\n    const [ loggedOut, setLoggedOut ] = useState(true)\n    const [currentUser, setCurrentUser ] = useState('')\n    const [ loginSideBarOpen, setLoginSideBarOpen ] = useState(false)\n    const [ mainSideBarOpen, setMainSideBarOpen ] = useState(false)\n    const [ loginResponse, setLoginResponse ] = useState(null)\n    const [ loading, setLoading ] = useState(false)\n    const [ language, setLanguage ] = useState('ES')\n    const [ regView, setRegView ] = useState(false)\n    const [ active , setActive ] = useState(null)\n    const [ contactSectionOpen, setContactSectionOpen ] = useState(false)\n    const [ forgotPIN, setForgotPIN ] = useState(false)\n\n\n    // Google OAuth States *****************************************\n  \n    const [ loginData, setLoginData ] = useState(null)\n    const [isSignedIn, setIsSignedIn] = useState(null)\n    \n    const mobil = useMobilDetect()\n    const mobil2 = useMobilDetection()\n    // const url_userLogin = \"http://192.168.1.102:5000/api/users/login\"\n    const url_userLoginITC = \"https://intense-atoll-00786.herokuapp.com/api/users/login\"\n    useEffect(() => {\n        gettingTokenForLocalSignIn()\n        window.onload = function () {\n            window.google.accounts.id.initialize({\n              client_id: \"915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com\",\n              context: 'signin',\n              //   ux_mode: \"redirect\", \n              callback: handleCredentialResponse,\n            })\n        }\n    },[])\n\n    const gettingTokenForLocalSignIn = () => {\n        const getToken = async() => {\n            const token = localStorage.getItem('SH3CK_TOKEN')\n            if (token){\n                const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n                    headers:{\n                        // 'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}` \n                    } \n                })\n                console.log(response.data)\n                setCurrentUser(response.data)\n                return setLoggedIn(true)\n            }\n            setLoggedIn(false)\n            setLoggedOut(true)\n            \n            \n        }   \n        getToken()\n    }\n\n    \n\n    const handlingSubmitLoginUser = async(user) => {    \n        try {\n            const { data } = await axios.post(url_userLoginITC, user)\n            console.log(data)\n            localStorage.setItem('SH3CK_TOKEN', data.token)\n            // ******************************************\n            const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n                headers:{\n                    // 'Content-Type': 'application/json',\n                    Authorization: `Bearer ${data.token}` \n                } \n            })\n            setLoginResponse(response)\n            console.log(response.data)\n            setCurrentUser(response.data)\n            setLoading(false)\n            setLoggedIn(true)\n            setLoggedOut(false)\n            console.log('Usuaurio encontrado y hace login')    \n        } catch (error) {\n            console.log(error)\n            setLoginResponse(error.response)\n        }\n    }\n\n    const handlingLogin = (user) => {\n        setLoading(true)\n        setTimeout(async() => {\n            handlingSubmitLoginUser(user)\n            setLoading(false)\n            setLoginSideBarOpen(!loginSideBarOpen)\n        }, 2000);\n    }\n\n    const handlingSubmitLogOutUser = async() => {\n        if (isSignedIn) {\n            // window.google.accounts.id.disableAutoSelect()\n            // const auth = window.gapi.auth2.getAuthInstance()\n            // await auth.signOut()\n            // setIsSignedIn(false)\n            setMainSideBarOpen(!mainSideBarOpen)\n        }\n        if (loggedIn){\n            console.log('pasando por aqui')\n            localStorage.removeItem('google_token')\n            window.google.accounts.id.disableAutoSelect()\n            setMainSideBarOpen(!mainSideBarOpen)\n            setLoggedIn(false)\n            setLoggedOut(true)\n        }\n        \n        \n    }\n \n    const toggleRegView = () => {\n        // setResponse(null)\n        setRegView(true)\n    }\n\n    const handlingCheckUser = () => {\n        setActive('check')\n        setContactSectionOpen(true)\n        setRegView(false)\n        setForgotPIN(false)\n    }\n\n    const handlingInterestedUser = () => {\n        setActive('interested')\n        setContactSectionOpen(true)\n        setRegView(false)\n    }\n    const settinRegViewAndForgotPINToFalse = () => {\n        setRegView(false)\n        setForgotPIN(false)\n    }\n\n    const toggleForgotPINState = () => {\n        setForgotPIN(!forgotPIN)\n    }\n    \n    const toggleSideBar = () => {\n        setIsOpen(!isOpen)\n        \n    } \n    const toggleLoginSideBar = () => {\n        setLoginSideBarOpen(!loginSideBarOpen)\n        \n    }\n    \n    const toggleMainSideBar = () => {\n        setMainSideBarOpen(!mainSideBarOpen)\n    } \n    const toggleNotification = () => {\n        setLoginResponse(null)\n    }\n\n    const toggleLanguage = () => {\n        if (language === 'ES') {\n            setLanguage('EN')\n            return\n        }\n        if (language === 'EN'){\n            setLanguage('ES')\n            return\n        } \n    }\n\n  \n//  ************* Google OAuth Processes and functions (with googleAuth4) ****************\n\n        const handleCredentialResponse = async(response) => {\n            console.log(\"Encoded JWT ID token: \" + response.select_by)\n            response.credential ? setLoggedIn(true) : setLoggedIn(false)\n            const token = response.credential\n        try {\n            console.log('Sending request to BackEnd api...')\n            console.log(token)\n            localStorage.setItem('google_token', token)\n            const res = await axios.post('https://intense-atoll-00786.herokuapp.com/api/extUsers/google', {\n                token,\n                headers:{\n                    'Content-Type': 'application/json',\n                },\n            })\n            console.log(res.data)\n            if (res.status === 201){\n                console.log(res.data)\n                setLoginData(res.data)   \n                setCurrentUser(res.data.fullName)\n                setLoggedIn(true) \n                setLoggedOut(false)\n                return res.status\n            }\n            // const res = await axios.post('http://localhost:5000/api/extUsers/google',token)\n            \n        } catch (error) {\n            console.log(error)\n            console.log(error.response.data)\n            setCurrentUser(error.response.data.fullName)\n            setLoginData(error.response.data)\n            setLoggedIn(true) \n            setLoggedOut(false)\n        }\n        }\n\n\n    \n    return (\n        <>\n            { loading ?\n            <LoadingSpinner/>\n            :\n            null\n            }\n            \n            {/* {!loggedIn && loginSideBarOpen ? */}\n            <LoginSideBar\n            loginSideBarOpen={ loginSideBarOpen } \n            toggleLoginSideBar={ toggleLoginSideBar }\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            handlingLogin={handlingLogin}\n            loading = {loading}\n            language={language}\n            />\n            {/* : null */}\n            {/* } */}\n\n            {/* {!loggedOut && logoutSideBarOpen ? */}\n            <MainSideBar\n            mainSideBarOpen={mainSideBarOpen}\n            toggleMainSideBar={toggleMainSideBar}\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            handlingSubmitLogOutUser={handlingSubmitLogOutUser}\n            username={currentUser}\n            language={language}\n            loginData={loginData}           \n            />\n            {/* : null */}\n            {/* } */}\n            \n            <SideBar \n            isOpen={ isOpen } \n            toggleSideBar={ toggleSideBar }\n            language={language}\n            toggleLanguage={toggleLanguage}\n            />\n            \n            { mobil2.screenWidth <= 1098 || mobil ?  \n                <NavBarMobil \n                toggleLoginSideBar={toggleLoginSideBar}\n                toggleMainSideBar={toggleMainSideBar}\n                toggleSideBar={ toggleSideBar }  \n                username={currentUser}\n                login={ loggedIn }\n                language={language}\n                \n            /> : <NavBar\n            toggleLoginSideBar={toggleLoginSideBar}\n            toggleMainSideBar={toggleMainSideBar} \n            username={currentUser}\n            login={ loggedIn }\n            language={language}\n            \n        />\n            }\n            <HeroSection language={language} />\n            <VideoSection language={language}/>\n            <HiwSection language={language}/>\n            <NextStepSection\n            handlingInterestedUser={handlingInterestedUser}\n            handlingCheckUser={handlingCheckUser} \n            language={language}\n            />\n            <ContactSectionTest \n            language={language}\n            loggedIn={loggedIn}\n            isSignedIn={isSignedIn}\n            handlingSubmitLoginUser={ handlingSubmitLoginUser}\n            loginResponse={loginResponse}\n            toggleNotificationLogin={toggleNotification}\n            active={active}\n            regView={regView}\n            contactSectionOpen={contactSectionOpen}  \n            forgotPIN={forgotPIN}\n            toggleRegView={toggleRegView}\n            settinRegViewAndForgotPINToFalse={settinRegViewAndForgotPINToFalse}\n            toggleForgotPINState={toggleForgotPINState}\n            \n            />\n            <FooterSection language={language}/>\n        </>\n    )\n}\n\nexport default HomeTest2\n","/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuth5.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/nextStepSection.js/nextStepSection.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/contactSectionTest.js",["512","513","514","515","516"],"import React, { useState } from 'react'\nimport InterestedUsersForm from '../contactSection/interestedUserForm'\nimport LoginForm from './loginForm'\nimport axios from 'axios'\nimport FormHeader from './formHeader'\nimport { responseDataInterested, responseDataRegister, responseDataLogin, responseDataNewPIN } from '../notifications/notificationData'\nimport { infoContact } from '../../utils/data'\n\nconst ContactSectionTest = ({\n    language,\n    loggedIn,\n    handlingSubmitLoginUser,\n    // loginResponse,\n    // toggleNotificationLogin,\n    isSignedIn,\n    googleTest,\n    active,\n    regView,\n    forgotPIN,\n    toggleRegView,\n    settinRegViewAndForgotPINToFalse,\n    toggleForgotPINState,\n    contactSectionOpen,\n    workingSpinner,\n    handlingClosingOfContactSection,\n    handlingContactSectionResponse\n\n}) => {\n   \n    // const url_interestedUsers = \"http://192.168.1.102:5000/api/interestedUsers\"\n    // const url_users = \"http://192.168.1.102:5000/api/users\"\n    const url_interestedUsersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/interestedUsers\"\n    const url_usersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/users\"\n    const url_generatePIN_ITC = \"https://intense-atoll-00786.herokuapp.com/api/users/newPIN\"\n    \n\n    \n    const handlingSubmitInterestedUser = (interestedUser) => {\n        \n        workingSpinner('activate')\n        setTimeout(async()=> {\n            try {\n                const response = await axios.post(url_interestedUsersInTheCloud, interestedUser)\n                    console.log(response)\n                    if (response.status === 201){\n                        handlingContactSectionResponse(response)\n                        workingSpinner('close')\n                        console.log('Gracias por enviarnos tus datos, estaremos en contacto...')\n                        return response.status\n                    }\n            } catch (error) {\n                console.log(error.response)\n                workingSpinner('close')\n                handlingContactSectionResponse(error.response)\n            }\n        },2000)\n        \n    }\n\n    const handlingSubmitUser = async(user) => {\n        workingSpinner('activate')\n        setTimeout(async()=> {\n            try {\n                const response = await axios.post(url_usersInTheCloud, user)\n                    console.log(response)\n                    if (response.status === 201){\n                        handlingContactSectionResponse(response)\n                        workingSpinner('close')\n                        settinRegViewAndForgotPINToFalse()\n                        console.log('Gracias por registrarte')\n                        return response.status\n                    }\n            } catch (error) {\n                console.log(error)\n                workingSpinner('close')\n                handlingContactSectionResponse(error.response)\n            }\n        },2000)\n    } \n\n    const handlingNewPINRequest = async(dataToRequest) => {\n        // console.log(dataToRequest)\n        workingSpinner('activate')\n        try {\n            const response = await axios.put(url_generatePIN_ITC, dataToRequest)\n            console.log(response.status)\n            if (response.status === 200){\n                console.log(response)\n                handlingContactSectionResponse(response)\n                workingSpinner('close')\n                return response.status\n            }\n        } catch (error) {\n            console.log(error)\n            workingSpinner('close')\n            handlingContactSectionResponse(error.response)\n        }\n    }\n\n\n\nreturn (\n    <div \n    id={infoContact.id}\n    className={contactSectionOpen ? 'contactContainer_open' : 'contactContainer' }>\n        <div className={contactSectionOpen ? 'contactWrapper_open' : 'contactWrapper' }>\n            <div className=\"contactForms\">\n             \n             {/* {response || loginResponse ?\n            <NotificationBox\n             toggleNotification={response ? toggleNotification : toggleNotificationLogin} \n             response={response ? response : loginResponse }\n             responseData={togglingResponseData()} \n             language={language}\n             />\n             : null\n             } */}\n            \n            { !loggedIn  ? \n            <>\n            <FormHeader\n            active = {active}\n            loggedIn={loggedIn}\n            regView={regView}\n            forgotPIN = {forgotPIN}\n            language={language}\n            handlingClosingOfContactSection={handlingClosingOfContactSection}\n            />\n            </>\n            :\n            null\n            }\n                  \n            { active === 'interested' && !loggedIn ? \n             <>\n             <InterestedUsersForm \n             handlingSubmitInterestedUser={handlingSubmitInterestedUser}\n             language={language}\n             />\n            </>                     \n             :\n             null\n            }\n            \n            { active === 'check'  && !loggedIn  ? \n            <LoginForm\n            regView={regView}\n            forgotPIN = {forgotPIN}\n            toggleRegView={toggleRegView}\n            toggleForgotPINState={toggleForgotPINState}\n            handlingSubmitUser={handlingSubmitUser}\n            handlingSubmitLoginUser={handlingSubmitLoginUser}\n            handlingNewPINRequest={handlingNewPINRequest}\n            language={language}\n            isSignedIn={isSignedIn}\n            googleTest={googleTest}\n            />\n            :\n            null\n            }\n            </div>\n            \n        </div>\n        \n    </div>\n)\n}\n\nexport default ContactSectionTest\n","/Users/p3rolix/code/landingSh3ckFE/src/components/checkSection/checkSection.js",["517"],"import React from 'react'\nimport StartSh3ckProcess from './startSh3ckProcess'\nimport CitySection from './citySection'\nimport CheckerSection from './checkerSection'\nimport { useSelector } from 'react-redux'\n\nconst CheckSection = () => {\n     const level = useSelector((state) => state.checkSectionState.level)\n     const isOpen = useSelector((state) => state.checkSectionState.isOpen)\n     console.log(level)\n     return (\n         <>\n         {\n             level === 'level1' ?\n             <CitySection />\n             :\n             <StartSh3ckProcess/>\n         }\n         {\n             level === 'level2' ?\n             <CheckerSection />\n             :\n             <StartSh3ckProcess/>\n         }\n         \n         </>\n    )   \n}\n\nexport default CheckSection",["518","519"],"/Users/p3rolix/code/landingSh3ckFE/src/components/navBar/navBarForCS.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/sideBars/QASideBar.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/sideBars/QaAccordion.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/sideBars/QAData.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/state/configureStore.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/state/reducers/index.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/requestsToApi.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/state/reducers/sideBarReducers.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/state/reducers/heroSectionReducers.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/state/reducers/contactSectionReducers.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/state/reducers/homeReducers.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/state/index.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/state/actions/index.js",["520"],"import axios from 'axios'\n\n// ****** sideBar Actions creators ***************\nexport const openingSideBar = (status) => {\n    return (dispatch) => {\n        dispatch({\n            type: 'isOpen',\n            payload: status\n        })\n    }\n}\n\nexport const changeLanguage = () => {\n    return (dispatch) => {\n        dispatch({\n            type: 'language',\n            payload: null\n        })\n    }\n}\nexport const openingQASideBar = (status) => {\n    return (dispatch) => {\n        dispatch({\n            type: 'QASideBarOpen',\n            payload: status\n        })\n    }\n}\n// ****************** End ****************************\n\n// ****** heroSections Actions creators ***************\nexport const openingHeroSection_WWD = (status) => {\n    return (dispatch) => {\n        dispatch({\n            type: 'WWD_Open',\n            payload: status\n        })\n    }\n}\nexport const heroSection_curtain = (status) => {\n    return (dispatch) => {\n        dispatch({\n            type: 'curtain',\n            payload: status\n        })\n    }\n}\n// ****************** End *****************************\n\n// ****** contactSection Actions creators ***************\nexport const openingContactSection = (status) => {\n    return(dispatch) => {\n        dispatch({\n            type: 'isContactSectionOpen',\n            payload: status\n        })\n    }\n}\n\nexport const activatingForm = (value) => {\n    return(dispatch) => {\n        dispatch({\n            type: 'active',\n            payload: value\n        })\n    }\n}\nexport const openingRegView = (value) => {\n    return(dispatch) => {\n        dispatch({\n            type: 'regView',\n            payload: value\n        })\n    }\n}\n\nexport const openingForgotPINView = (value) => {\n    return(dispatch) => {\n        dispatch({\n            type: 'forgotPIN',\n            payload: value\n        })\n    }\n}\n\nexport const settingResponse = (dataResponse) => {   \n    return(dispatch) => {\n        dispatch({\n            type: 'response',\n            payload: dataResponse\n        })\n    }\n}\n\n\n// ****** Home Actions creators ***************\n\nexport const activatingSpinner = (value) => {\n    return(dispatch) => {\n        dispatch({\n            type: 'loading',\n            payload: value\n        })\n    }\n}\n\nexport const settingCurrentUser = (currentUserName) => {   \n    return(dispatch) => {\n        dispatch({\n            type: 'currentUser',\n            payload: currentUserName\n        })\n    }\n}\nexport const gettingLoginResponseData = (logginUserData) => {   \n    return(dispatch) => {\n        dispatch({\n            type: 'loginResponse',\n            payload: logginUserData\n        })\n    }\n}\n\nexport const handlingIsLoggedIn  = (status) => {   \n    return(dispatch) => {\n        dispatch({\n            type: 'loggedIn',\n            payload: status\n        })\n    }\n}\nexport const handlingIsLoggedOut  = (status) => {   \n    return(dispatch) => {\n        dispatch({\n            type: 'loggedOut',\n            payload: status\n        })\n    }\n}\n\nexport const openingMainSideBar  = (status) => {   \n    return(dispatch) => {\n        dispatch({\n            type: 'mainSideBarOpen',\n            payload: status\n        })\n    }\n}\n\nexport const handlingIsSignedInGoogle  = (status) => {   \n    return(dispatch) => {\n        dispatch({\n            type: 'isSignedIn',\n            payload: status\n        })\n    }\n}\n\nexport const gettingGoogleLoginData = (value) => {\n    return(dispatch) => {\n        dispatch({\n            type: 'loginData',\n            payload: value\n        })\n    }\n} \n\n// ****** CheckSection Actions creators ***************\n\nexport const settingLevel = (value) => {\n    return(dispatch) => {\n        dispatch({\n            type: 'level',\n            payload: value\n        })\n    }\n}\n\nexport const settingPreviousLevel = (value) => {\n    return(dispatch) => {\n        dispatch({\n            type: 'previous_level',\n            payload: value\n        })\n    }\n}\n\nexport const settingisOpen = (status) => {\n    return(dispatch) => {\n        dispatch({\n            type: 'isOpen',\n            payload: status\n        })\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/Users/p3rolix/code/landingSh3ckFE/src/components/checkSection/checkSectionElements.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/checkSection/startSh3ckProcess.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/state/reducers/checkSectionReducers.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/checkSection/citySection.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/checkSection/checkerSection.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/checkApp/checkApp.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/checkApp/checkStarting.js",["521","522"],"import React from 'react'\nimport { infoCheck } from '../../utils/data'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { bindActionCreators } from '@reduxjs/toolkit'\nimport { actionCreators } from '../../state'\nimport { Link } from 'react-router-dom'\nimport { \n    CheckSectionContainer, CheckSectionWrapper, \n    CheckSectionBtnWrap,CheckSectionCheckBtn,\n    CheckSectionExitBtn\n\n} from './checkAppElements'\n\n\nconst CheckStarting = () => {\n    const dispatch = useDispatch()\n    const {\n        settingLevel, settingisOpen,  \n        activatingForm, openingRegView,  \n        settingCurrentUser, gettingLoginResponseData,\n        openingContactSection,handlingIsLoggedIn, \n        handlingIsSignedInGoogle, settingResponse, gettingGoogleLoginData,  \n    } = bindActionCreators(actionCreators, dispatch)\n    \n    const language = useSelector((state) => state.sideBarState.language)\n    const previous_level = useSelector((state) => state.checkSectionState.previous_level)\n\n    const gettingOutOfCheckApp = async() => {\n        localStorage.removeItem('SH3CK_TOKEN')\n        handlingIsSignedInGoogle(false) //action\n        handlingIsLoggedIn(false) //action\n        activatingForm(null) //action\n        openingContactSection(false) //action\n        openingRegView(false) //action \n        gettingGoogleLoginData(null)\n        gettingLoginResponseData(null) //action\n        settingResponse(null)\n        settingCurrentUser(null) //action\n    }\n\n    const test = () => {\n        // settingisOpen(true)\n        settingLevel('level1')\n    }\n    return (\n    \n        <CheckSectionContainer\n        initial={previous_level === 'level1' ? { x: '-100vw', opacity: 1  } : { x: '100vw', opacity: 1  }}\n        animate={{ x: 0 }}\n        transition={{ stiffness: 33 }}\n        \n        >\n            <CheckSectionWrapper>\n                <CheckSectionBtnWrap>\n                    <CheckSectionCheckBtn\n                    onClick={test}\n                    >\n                        {language === 'ES' ? infoCheck.checkSectionBtnLabel : infoCheck.checkSectionBtnLabel_EN}\n                    </CheckSectionCheckBtn>\n                    <CheckSectionExitBtn\n                    onClick={gettingOutOfCheckApp}\n                    >\n                        {language === 'ES' ? infoCheck.checkSectionExitBtn : infoCheck.checkSectionExitBtn_EN}\n                    </CheckSectionExitBtn>    \n                </CheckSectionBtnWrap>\n            </CheckSectionWrapper>\n        </CheckSectionContainer>\n    )   \n}\n\nexport default CheckStarting","/Users/p3rolix/code/landingSh3ckFE/src/components/checkApp/citiesSection.js",["523"],"import React from 'react'\n// import { infoCheck } from '../../utils/data'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { bindActionCreators } from '@reduxjs/toolkit'\nimport { actionCreators } from '../../state'\nimport { \n    CitySectionContainer, CitySectionWrapper,\n    CitySectionBtnWrapp, CitySectionBtn\n \n\n} from './checkAppElements'\n\n\nconst CitiesSection = () => {\n    \n    const dispatch = useDispatch()\n    const {\n        settingLevel, settingisOpen, settingPreviousLevel    \n    } = bindActionCreators(actionCreators, dispatch) \n    const previous_level = useSelector((state) => state.checkSectionState.previous_level)\n    const test = () => {\n        settingLevel('level2')\n        settingPreviousLevel('level1')\n    }\n  \n    const comeBack = () => {\n        settingLevel('Starting')\n        settingPreviousLevel('level1')\n    }\n    \n    return (\n        \n        <CitySectionContainer\n        initial={previous_level === 'level2' ? { x: '-100vw', opacity: 0  } : { x: '100vw', opacity: 0  }} \n        animate={{ x: 0, opacity: 1 }}\n        transition={{ stiffness: 33 }}\n        exit={{ opacity: 0 }}\n        >\n            <CitySectionWrapper>\n                <CitySectionBtnWrapp>\n                <CitySectionBtn\n                    onClick={test}\n                    >\n                        Continuar\n                        {/* {language === 'ES' ? infoCheck.checkSectionExitBtn : infoCheck.checkSectionExitBtn_EN} */}\n                    </CitySectionBtn> \n                    <CitySectionBtn\n                    onClick={comeBack}\n                    >\n                        Volver\n                    </CitySectionBtn>    \n                </CitySectionBtnWrapp>\n            </CitySectionWrapper>\n        </CitySectionContainer>\n\n    )   \n}\n\nexport default CitiesSection\n\n","/Users/p3rolix/code/landingSh3ckFE/src/components/checkApp/checkersSection.js",["524","525","526"],"import React from 'react'\n// import { useSelector } from 'react-redux'\nimport { infoCheck } from '../../utils/data'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { bindActionCreators } from '@reduxjs/toolkit'\nimport { actionCreators } from '../../state'\nimport { \n    CheckerSectionContainer, CheckerSectionWrapper,\n    CheckerSectionBtnWrapp, CheckerSectionBtn\n \n\n} from './checkAppElements'\n\n\nconst CheckersSection = () => {\n    const isOpen = useSelector((state) => state.checkSectionState.isOpen) \n    \n    const dispatch = useDispatch()\n    const {  \n        settingLevel, settingPreviousLevel\n\n    } = bindActionCreators(actionCreators, dispatch)\n    \n    const language = useSelector((state) => state.sideBarState.language)\n    const previous_level = useSelector((state) => state.checkSectionState.previous_level)\n    \n    const test = () => {\n        settingLevel('level4')\n        settingPreviousLevel('level3')\n    }\n    const comeBack = () => {\n        settingLevel('level2')\n        settingPreviousLevel('level3')\n    }\n    return (\n        <CheckerSectionContainer\n        initial={previous_level === 'level4' ? { x: '-100vw', opacity: 0  } : { x: '100vw', opacity: 0  }} \n        animate={{ x: 0, opacity: 1 }}\n        transition={{ stiffness: 33 }}\n        exit={{ opacity: 0 }}\n        >\n            <CheckerSectionWrapper>\n                <CheckerSectionBtnWrapp>\n                    <CheckerSectionBtn\n                    onClick={test}\n                    >\n                        Continuar\n                        {/* {language === 'ES' ? infoCheck.checkSectionExitBtn : infoCheck.checkSectionExitBtn_EN} */}\n                    </CheckerSectionBtn> \n                    <CheckerSectionBtn\n                    onClick={comeBack}\n                    >\n                        Volver\n                        {/* {language === 'ES' ? infoCheck.checkSectionExitBtn : infoCheck.checkSectionExitBtn_EN} */}\n                    </CheckerSectionBtn>    \n                </CheckerSectionBtnWrapp>\n            </CheckerSectionWrapper>\n        </CheckerSectionContainer>\n\n    )   \n}\n\nexport default CheckersSection","/Users/p3rolix/code/landingSh3ckFE/src/components/checkApp/checkAppElements.js",["527"],"import styled from 'styled-components/macro'\nimport image from '../../images/8443731_business_start_up_launch_rocket_icon.svg'\nimport { motion } from 'framer-motion'\nimport { Link as LinkR } from 'react-router-dom'\n\n//  ***********StartSh3ckProcess **************************\nexport const CheckSectionContainer = styled(motion.div) `\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 90%;\n    height: 1100px;\n    background-color: #eeeeee;\n    margin-top: 2%;\n    margin-left: 5%;\n    position: fixed;\n    left: 0;\n\n\n\n    @media (max-width:560px) and (min-width: 480px){\n        width: 100%;\n        margin-top: unset;\n        margin-left: unset;\n    }\n    @media (max-width:480px) and (min-width: 414px){\n        width: 100%;\n        margin-top: unset;\n        margin-left: unset;\n    }\n    @media (max-width:414px) and (min-width: 360px){\n        width: 100%;\n        height: 100vh;\n        overflow-y: hidden;\n        background-color: #eeeeee;\n        margin-top: 0%;\n        margin-left: unset;\n        \n    }\n\n    @media (max-width:360px) and (min-width: 320px){\n        width: 100%;\n        height: 650px;\n        background-color: #eeeeee;\n        margin-top: 0%;\n        margin-left: unset;\n    }\n\n`\n\nexport const CheckSectionWrapper = styled.div `\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 1000px;\n    background-image: url(${image});\n    background-size: 60% 60%;\n    background-repeat: no-repeat;\n    background-position-x: center;\n    \n    @media (max-width:1536px) and (min-width: 1366px) {\n        background-size: 40% 60%;\n    }\n \n    @media (max-width:414px) and (min-width: 360px){\n        height: 100%;\n        background-size: 60% 42%;\n        \n    }\n\n    @media (max-width:360px) and (min-width: 320px){\n        height: 100%;\n    background-size: 60% 42%;\n    }\n\n`\n\nexport const CheckSectionBtnWrap = styled.div `\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    height: 500px;\n    margin-top: 38%;\n\n    @media (max-width:1536px) and (min-width: 1366px) {\n        margin-top: 45%;\n    }\n    @media (max-width:1366px) and (min-width: 1280px){\n        margin-top: 45%;\n    }\n    @media (max-width:1280px) and (min-width: 1098px){\n        margin-top: 55%;\n    }\n    @media (max-width:1098px) and (min-width: 560px){\n        margin-top: 65%;\n    }\n    @media (max-width:768px) and (min-width: 560px){\n        margin-top: 65%;\n    }\n    @media (max-width:560px) and (min-width: 480px){\n        margin-top: 95%;\n    }\n    @media (max-width:480px) and (min-width: 414px){\n        margin-top: 95%;\n    }\n    @media (max-width:414px) and (min-width: 360px){\n        margin-top: 20%;\n        height: 100%;\n    }\n\n    @media (max-width:360px) and (min-width: 320px){\n        margin-top: 40%;\n    }\n\n   \n    \n`\nexport const CheckSectionCheckBtn = styled.button `\n    width: 40%;\n    height: 115px;\n    background-color: #010606;\n    border-style: none;\n    /* border-radius: 60px; */\n    font-size: 1.5rem;\n    color: #ffffff;\n    margin-left: 5%;\n\n    @media (max-width:1098px) and (min-width: 768px){\n        width: 45%;\n    }\n    @media (max-width:768px) and (min-width: 560px){\n        width: 60%;\n    }\n    @media (max-width:560px) and (min-width: 480px){\n        width: 80%;\n    }\n    @media (max-width:480px) and (min-width: 414px){\n        width: 80%;\n    }\n    @media (max-width:414px) and (min-width: 360px){\n        width: 80%;\n        height: 70px;\n    }\n    \n`\nexport const CheckSectionExitBtn = styled.button `\n    width: 40%;\n    height: 115px;\n    background-color: #FAD570;\n    border-style: none;\n    color: #010606;\n    font-size: 1.5rem;\n    color: #010606;\n    margin-left: 5%;\n    margin-top: 1%;\n\n    @media (max-width:1098px) and (min-width: 768px){\n        width: 45%;\n    }\n    @media (max-width:768px) and (min-width: 560px){\n        width: 60%;\n    }\n    @media (max-width:560px) and (min-width: 480px){\n        width: 80%;\n    }\n    @media (max-width:480px) and (min-width: 414px){\n        width: 80%;\n    }\n    @media (max-width:414px) and (min-width: 360px){\n        width: 80%;\n        margin-top: 2%;\n        height: 70px;\n    }\n    @media (max-width: 360px) and (min-width: 320px){\n        width: 80%;\n        margin-top: 2%;\n        height: 70px;\n    }\n\n`\n\n//  *********** CitySection **************************\n\nexport const CitySectionContainer = styled(motion.div) `\n    position: fixed;\n    z-index: 999;\n    width: 100%;\n    height: 100%;\n    background-color: red;\n    display: grid;\n    align-items: center;\n    left: 0;\n    right: 0;\n    \n`\n\nexport const CitySectionWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 1000px;\n    background-color: #010606;\n    \n    \n`\n\nexport const CitySectionBtnWrapp = styled.div `\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    height: 500px;\n    margin-top: 38%;\n\n`\nexport const CitySectionBtn = styled.button `\n    width: 40%;\n    height: 115px;\n    background-color: #FAD570;\n    border-style: none;\n    /* border-radius: 60px; */\n    font-size: 1.5rem;\n    color: #ffffff;\n    margin-left: 5%;\n\n`\n\n//  *********** Category Section **************************\n\nexport const CategorySectionContainer = styled(motion.div) `\n    position: fixed;\n    z-index: 999;\n    width: 100%;\n    height: 100%;\n    background-color: red;\n    display: grid;\n    align-items: center;\n    left: 0;\n    right: 0;\n    \n`\n\nexport const CategorySectionWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 1000px;\n    background-color: #ef476f;\n    \n    \n`\n\nexport const CategorySectionBtnWrapp = styled.div `\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    height: 500px;\n    margin-top: 38%;\n\n`\nexport const CategorySectionBtn = styled.button `\n    width: 40%;\n    height: 115px;\n    background-color: #097654;\n    border-style: none;\n    /* border-radius: 60px; */\n    font-size: 1.5rem;\n    color: #ffffff;\n    margin-left: 5%;\n\n`\n\n\n\n\n//  *********** CheckerSection **************************\n\n\nexport const CheckerSectionContainer = styled(motion.div) `\n    position: fixed;\n    z-index: 999;\n    width: 100%;\n    height: 100%;\n    background-color: blue;\n    display: grid;\n    align-items: center;\n    left: 0;\n    right: 0;    \n`\nexport const CheckerSectionWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 1000px;\n    background-color: blueviolet;\n`\n\nexport const CheckerSectionBtnWrapp = styled.div `\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    height: 500px;\n    margin-top: 38%;\n\n`\nexport const CheckerSectionBtn = styled.button `\n    width: 40%;\n    height: 115px;\n    background-color: #FAD570;\n    border-style: none;\n    /* border-radius: 60px; */\n    font-size: 1.5rem;\n    color: #ffffff;\n    margin-left: 5%;\n\n`\n\n//  *********** Finishing Check Order **************************\n\n\nexport const FinishingOrderContainer = styled(motion.div) `\n    position: fixed;\n    z-index: 999;\n    width: 100%;\n    height: 100%;\n    background-color: blue;\n    display: grid;\n    align-items: center;\n    left: 0;\n    right: 0;    \n`\nexport const FinishingOrderWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 1000px;\n    background-color: #FF810A;\n`\n\nexport const FinishingOrderBtnWrapp = styled.div `\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    height: 500px;\n    margin-top: 38%;\n\n`\nexport const FinishingOrderBtn = styled.button `\n    width: 40%;\n    height: 115px;\n    background-color: #010606;\n    border-style: none;\n    /* border-radius: 60px; */\n    font-size: 1.5rem;\n    color: #ffffff;\n    margin-left: 5%;\n\n`","/Users/p3rolix/code/landingSh3ckFE/src/components/checkApp/categorySection.js",[],"/Users/p3rolix/code/landingSh3ckFE/src/components/checkApp/finishingCheckOrder.js",["528","529","530"],"import React from 'react'\n// import { useSelector } from 'react-redux'\nimport { infoCheck } from '../../utils/data'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { bindActionCreators } from '@reduxjs/toolkit'\nimport { actionCreators } from '../../state'\nimport { \n    FinishingOrderContainer, FinishingOrderWrapper,\n    FinishingOrderBtnWrapp, FinishingOrderBtn\n \n\n} from './checkAppElements'\n\n\nconst FinishingCheckOrder = () => {\n    const isOpen = useSelector((state) => state.checkSectionState.isOpen) \n    \n    const dispatch = useDispatch()\n    const {  \n        activatingForm, openingRegView,  \n        settingCurrentUser, gettingLoginResponseData,\n        openingContactSection,handlingIsLoggedIn, \n        handlingIsSignedInGoogle, settingResponse, \n        gettingGoogleLoginData, settingisOpen,\n        settingLevel, settingPreviousLevel\n\n    } = bindActionCreators(actionCreators, dispatch)\n    \n    const language = useSelector((state) => state.sideBarState.language)\n\n    const gettingOutOfCheckApp = async() => {\n        localStorage.removeItem('SH3CK_TOKEN')\n        handlingIsSignedInGoogle(false) //action\n        handlingIsLoggedIn(false) //action\n        activatingForm(null) //action\n        openingContactSection(false) //action\n        openingRegView(false) //action \n        gettingGoogleLoginData(null)\n        gettingLoginResponseData(null) //action\n        settingResponse(null)\n        settingCurrentUser(null) //action\n        settingisOpen(false)\n        settingLevel('Starting')\n        settingPreviousLevel('')\n    }\n\n    const comeBack = () => {\n        settingLevel('level3')\n        settingPreviousLevel('level4')\n    }\n    return (\n        <FinishingOrderContainer\n        initial={{ x: '100vw', opacity: 0  }} \n        animate={{ x: 0, opacity: 1 }}\n        transition={{ stiffness: 33 }}\n        exit={{ opacity: 0 }}\n        >\n            <FinishingOrderWrapper>\n                <FinishingOrderBtnWrapp>\n                    <FinishingOrderBtn\n                    onClick={gettingOutOfCheckApp}\n                    >\n                        Cerrar\n                        {/* {language === 'ES' ? infoCheck.checkSectionExitBtn : infoCheck.checkSectionExitBtn_EN} */}\n                    </FinishingOrderBtn> \n                    <FinishingOrderBtn\n                    onClick={comeBack}\n                    >\n                        Volver\n                        {/* {language === 'ES' ? infoCheck.checkSectionExitBtn : infoCheck.checkSectionExitBtn_EN} */}\n                    </FinishingOrderBtn>    \n                </FinishingOrderBtnWrapp>\n            </FinishingOrderWrapper>\n        </FinishingOrderContainer>\n\n    )   \n}\n\nexport default FinishingCheckOrder",{"ruleId":"531","replacedBy":"532"},{"ruleId":"533","replacedBy":"534"},{"ruleId":"531","replacedBy":"535"},{"ruleId":"533","replacedBy":"536"},{"ruleId":"537","severity":1,"message":"538","line":35,"column":11,"nodeType":"539","messageId":"540","endLine":35,"endColumn":24},{"ruleId":"537","severity":1,"message":"541","line":1,"column":17,"nodeType":"539","messageId":"540","endLine":1,"endColumn":25},{"ruleId":"531","replacedBy":"542"},{"ruleId":"533","replacedBy":"543"},{"ruleId":"531","replacedBy":"544"},{"ruleId":"533","replacedBy":"545"},{"ruleId":"531","replacedBy":"546"},{"ruleId":"533","replacedBy":"547"},{"ruleId":"537","severity":1,"message":"548","line":2,"column":43,"nodeType":"539","messageId":"540","endLine":2,"endColumn":48},{"ruleId":"537","severity":1,"message":"549","line":4,"column":8,"nodeType":"539","messageId":"540","endLine":4,"endColumn":21},{"ruleId":"537","severity":1,"message":"550","line":5,"column":8,"nodeType":"539","messageId":"540","endLine":5,"endColumn":23},{"ruleId":"537","severity":1,"message":"551","line":6,"column":8,"nodeType":"539","messageId":"540","endLine":6,"endColumn":22},{"ruleId":"537","severity":1,"message":"552","line":7,"column":8,"nodeType":"539","messageId":"540","endLine":7,"endColumn":21},{"ruleId":"537","severity":1,"message":"553","line":2,"column":8,"nodeType":"539","messageId":"540","endLine":2,"endColumn":13},{"ruleId":"554","severity":1,"message":"555","line":55,"column":7,"nodeType":"556","endLine":55,"endColumn":9,"suggestions":"557"},{"ruleId":"537","severity":1,"message":"558","line":4,"column":8,"nodeType":"539","messageId":"540","endLine":4,"endColumn":22},{"ruleId":"531","replacedBy":"559"},{"ruleId":"533","replacedBy":"560"},{"ruleId":"561","severity":1,"message":"562","line":17,"column":22,"nodeType":"563","messageId":"564","endLine":19,"endColumn":2},{"ruleId":"537","severity":1,"message":"565","line":1,"column":17,"nodeType":"539","messageId":"540","endLine":1,"endColumn":26},{"ruleId":"537","severity":1,"message":"553","line":4,"column":8,"nodeType":"539","messageId":"540","endLine":4,"endColumn":13},{"ruleId":"537","severity":1,"message":"566","line":24,"column":11,"nodeType":"539","messageId":"540","endLine":24,"endColumn":40},{"ruleId":"537","severity":1,"message":"567","line":25,"column":11,"nodeType":"539","messageId":"540","endLine":25,"endColumn":28},{"ruleId":"531","replacedBy":"568"},{"ruleId":"533","replacedBy":"569"},{"ruleId":"537","severity":1,"message":"553","line":2,"column":8,"nodeType":"539","messageId":"540","endLine":2,"endColumn":13},{"ruleId":"537","severity":1,"message":"570","line":7,"column":23,"nodeType":"539","messageId":"540","endLine":7,"endColumn":34},{"ruleId":"537","severity":1,"message":"571","line":8,"column":10,"nodeType":"539","messageId":"540","endLine":8,"endColumn":24},{"ruleId":"537","severity":1,"message":"572","line":9,"column":10,"nodeType":"539","messageId":"540","endLine":9,"endColumn":28},{"ruleId":"537","severity":1,"message":"565","line":12,"column":10,"nodeType":"539","messageId":"540","endLine":12,"endColumn":19},{"ruleId":"561","severity":1,"message":"562","line":14,"column":26,"nodeType":"563","messageId":"564","endLine":16,"endColumn":2},{"ruleId":"537","severity":1,"message":"565","line":1,"column":27,"nodeType":"539","messageId":"540","endLine":1,"endColumn":36},{"ruleId":"537","severity":1,"message":"573","line":2,"column":10,"nodeType":"539","messageId":"540","endLine":2,"endColumn":14},{"ruleId":"537","severity":1,"message":"553","line":3,"column":8,"nodeType":"539","messageId":"540","endLine":3,"endColumn":13},{"ruleId":"537","severity":1,"message":"553","line":2,"column":8,"nodeType":"539","messageId":"540","endLine":2,"endColumn":13},{"ruleId":"537","severity":1,"message":"553","line":2,"column":8,"nodeType":"539","messageId":"540","endLine":2,"endColumn":13},{"ruleId":"531","replacedBy":"574"},{"ruleId":"533","replacedBy":"575"},{"ruleId":"554","severity":1,"message":"576","line":69,"column":5,"nodeType":"556","endLine":69,"endColumn":7,"suggestions":"577"},{"ruleId":"531","replacedBy":"578"},{"ruleId":"533","replacedBy":"579"},{"ruleId":"537","severity":1,"message":"541","line":1,"column":17,"nodeType":"539","messageId":"540","endLine":1,"endColumn":25},{"ruleId":"554","severity":1,"message":"580","line":22,"column":7,"nodeType":"556","endLine":22,"endColumn":9,"suggestions":"581"},{"ruleId":"537","severity":1,"message":"582","line":36,"column":12,"nodeType":"539","messageId":"540","endLine":36,"endColumn":22},{"ruleId":"537","severity":1,"message":"583","line":36,"column":24,"nodeType":"539","messageId":"540","endLine":36,"endColumn":37},{"ruleId":"554","severity":1,"message":"576","line":57,"column":7,"nodeType":"556","endLine":57,"endColumn":9,"suggestions":"584"},{"ruleId":"585","severity":1,"message":"586","line":184,"column":13,"nodeType":"587","messageId":"588","endLine":184,"endColumn":66},{"ruleId":"537","severity":1,"message":"589","line":42,"column":24,"nodeType":"539","messageId":"540","endLine":42,"endColumn":37},{"ruleId":"537","severity":1,"message":"541","line":1,"column":17,"nodeType":"539","messageId":"540","endLine":1,"endColumn":25},{"ruleId":"537","severity":1,"message":"590","line":6,"column":10,"nodeType":"539","messageId":"540","endLine":6,"endColumn":32},{"ruleId":"537","severity":1,"message":"591","line":6,"column":34,"nodeType":"539","messageId":"540","endLine":6,"endColumn":54},{"ruleId":"537","severity":1,"message":"592","line":6,"column":56,"nodeType":"539","messageId":"540","endLine":6,"endColumn":73},{"ruleId":"537","severity":1,"message":"593","line":6,"column":75,"nodeType":"539","messageId":"540","endLine":6,"endColumn":93},{"ruleId":"537","severity":1,"message":"594","line":9,"column":12,"nodeType":"539","messageId":"540","endLine":9,"endColumn":18},{"ruleId":"531","replacedBy":"595"},{"ruleId":"533","replacedBy":"596"},{"ruleId":"537","severity":1,"message":"553","line":1,"column":8,"nodeType":"539","messageId":"540","endLine":1,"endColumn":13},{"ruleId":"537","severity":1,"message":"573","line":6,"column":10,"nodeType":"539","messageId":"540","endLine":6,"endColumn":14},{"ruleId":"537","severity":1,"message":"597","line":18,"column":23,"nodeType":"539","messageId":"540","endLine":18,"endColumn":36},{"ruleId":"537","severity":1,"message":"597","line":18,"column":23,"nodeType":"539","messageId":"540","endLine":18,"endColumn":36},{"ruleId":"537","severity":1,"message":"598","line":3,"column":10,"nodeType":"539","messageId":"540","endLine":3,"endColumn":19},{"ruleId":"537","severity":1,"message":"594","line":16,"column":11,"nodeType":"539","messageId":"540","endLine":16,"endColumn":17},{"ruleId":"537","severity":1,"message":"599","line":24,"column":11,"nodeType":"539","messageId":"540","endLine":24,"endColumn":19},{"ruleId":"537","severity":1,"message":"600","line":4,"column":18,"nodeType":"539","messageId":"540","endLine":4,"endColumn":23},{"ruleId":"537","severity":1,"message":"598","line":3,"column":10,"nodeType":"539","messageId":"540","endLine":3,"endColumn":19},{"ruleId":"537","severity":1,"message":"594","line":16,"column":11,"nodeType":"539","messageId":"540","endLine":16,"endColumn":17},{"ruleId":"537","severity":1,"message":"599","line":29,"column":11,"nodeType":"539","messageId":"540","endLine":29,"endColumn":19},"no-native-reassign",["601"],"no-negated-in-lhs",["602"],["601"],["602"],"no-unused-vars","'url_userLogin' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.",["601"],["602"],["601"],["602"],["601"],["602"],"'Route' is defined but never used.","'CitiesSection' is defined but never used.","'CheckersSection' is defined but never used.","'ContactSection' is defined but never used.","'CheckStarting' is defined but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'gettingTokenForLocalSignIn' and 'insertGapiScript'. Either include them or remove the dependency array.","ArrayExpression",["603"],"'LoadingSpinner' is defined but never used.",["601"],["602"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useEffect' is defined but never used.","'url_interestedUsersInTheCloud' is assigned a value but never used.","'URL_LOCAL_BACKEND' is assigned a value but never used.",["601"],["602"],"'useDispatch' is defined but never used.","'actionCreators' is defined but never used.","'bindActionCreators' is defined but never used.","'Link' is defined but never used.",["601"],["602"],"React Hook useEffect has a missing dependency: 'insertGapiScript'. Either include it or remove the dependency array.",["604"],["601"],["602"],"React Hook useEffect has a missing dependency: 'googleTest'. Either include it or remove the dependency array. If 'googleTest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["605"],"'googleUser' is assigned a value but never used.","'setGoogleUser' is assigned a value but never used.",["606"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'setIsSignedIn' is assigned a value but never used.","'responseDataInterested' is defined but never used.","'responseDataRegister' is defined but never used.","'responseDataLogin' is defined but never used.","'responseDataNewPIN' is defined but never used.","'isOpen' is assigned a value but never used.",["601"],["602"],"'settingisOpen' is assigned a value but never used.","'infoCheck' is defined but never used.","'language' is assigned a value but never used.","'LinkR' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"609","fix":"613"},"Update the dependencies array to be: [gettingTokenForLocalSignIn, insertGapiScript]",{"range":"614","text":"615"},"Update the dependencies array to be: [insertGapiScript]",{"range":"616","text":"617"},"Update the dependencies array to be: [googleTest]",{"range":"618","text":"619"},{"range":"620","text":"617"},[2611,2613],"[gettingTokenForLocalSignIn, insertGapiScript]",[1606,1608],"[insertGapiScript]",[701,703],"[googleTest]",[2295,2297]]